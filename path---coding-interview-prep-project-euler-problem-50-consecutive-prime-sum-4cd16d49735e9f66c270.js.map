{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-50-consecutive-prime-sum-4cd16d49735e9f66c270.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-50-consecutive-prime-sum.json"],"names":["webpackJsonp","3287","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oCAAAC,aAAA,kZAAAC,cAAA,EAAAC,QAAyeC,KAAA,wEAAAC,UAAA,gBAAAC,QAAqHC,KAAA,4DAAAC,WAAA,qHAAqMD,KAAA,kEAAAC,WAAA,kIAAuNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,6GAAgKC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,2EAAAC,GAAA,4BAA4KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-50-consecutive-prime-sum-4cd16d49735e9f66c270.js","sourcesContent":["webpackJsonp([226774228713271],{\n\n/***/ 3287:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 50: Consecutive prime sum\",\"description\":[\"The prime 41, can be written as the sum of six consecutive primes:\",\"41 = 2 + 3 + 5 + 7 + 11 + 13\",\"This is the longest sum of consecutive primes that adds to a prime below one-hundred.\",\"The longest sum of consecutive primes below one-thousand that adds to a prime, contains 21 terms, and is equal to 953.\",\"Which prime, below one-million, can be written as the sum of the most consecutive primes?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-50-consecutive-prime-sum\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>consecutivePrimeSum(1000)</code> should return 953.\",\"testString\":\"assert.strictEqual(consecutivePrimeSum(1000), 953, '<code>consecutivePrimeSum(1000)</code> should return 953.');\"},{\"text\":\"<code>consecutivePrimeSum(1000000)</code> should return 997651.\",\"testString\":\"assert.strictEqual(consecutivePrimeSum(1000000), 997651, '<code>consecutivePrimeSum(1000000)</code> should return 997651.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function consecutivePrimeSum(limit) {\\n  // Good luck!\\n  return true;\\n}\\n\\nconsecutivePrimeSum(1000000);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-51-prime-digit-replacements\",\"id\":\"5900f39e1000cf542c50feb1\"},\"slug\":\"/coding-interview-prep/project-euler/problem-50-consecutive-prime-sum\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-50-consecutive-prime-sum-4cd16d49735e9f66c270.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 50: Consecutive prime sum\",\"description\":[\"The prime 41, can be written as the sum of six consecutive primes:\",\"41 = 2 + 3 + 5 + 7 + 11 + 13\",\"This is the longest sum of consecutive primes that adds to a prime below one-hundred.\",\"The longest sum of consecutive primes below one-thousand that adds to a prime, contains 21 terms, and is equal to 953.\",\"Which prime, below one-million, can be written as the sum of the most consecutive primes?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-50-consecutive-prime-sum\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>consecutivePrimeSum(1000)</code> should return 953.\",\"testString\":\"assert.strictEqual(consecutivePrimeSum(1000), 953, '<code>consecutivePrimeSum(1000)</code> should return 953.');\"},{\"text\":\"<code>consecutivePrimeSum(1000000)</code> should return 997651.\",\"testString\":\"assert.strictEqual(consecutivePrimeSum(1000000), 997651, '<code>consecutivePrimeSum(1000000)</code> should return 997651.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function consecutivePrimeSum(limit) {\\n  // Good luck!\\n  return true;\\n}\\n\\nconsecutivePrimeSum(1000000);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-51-prime-digit-replacements\",\"id\":\"5900f39e1000cf542c50feb1\"},\"slug\":\"/coding-interview-prep/project-euler/problem-50-consecutive-prime-sum\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-50-consecutive-prime-sum.json\n// module id = 3287\n// module chunks = 226774228713271"],"sourceRoot":""}