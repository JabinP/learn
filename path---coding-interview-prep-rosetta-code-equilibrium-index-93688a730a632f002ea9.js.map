{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-equilibrium-index-93688a730a632f002ea9.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-equilibrium-index.json"],"names":["webpackJsonp","3376","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,eAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oBAAAC,aAAA,28BAAAC,cAAA,EAAAC,QAAkhCC,KAAA,wDAAAC,UAAA,eAAAC,QAAoGC,KAAA,0CAAAC,WAAA,0FAAwJD,KAAA,sFAAAC,WAAA,4IAAsPD,KAAA,qEAAAC,WAAA,2HAAoND,KAAA,sEAAAC,WAAA,4HAAsND,KAAA,iGAAAC,WAAA,uJAA4QD,KAAA,gEAAAC,WAAA,sHAA0MD,KAAA,8DAAAC,WAAA,qHAAsMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,iDAAoGC,KAAA,GAAAC,KAAA,gPAAkQC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,+DAAAC,GAAA,4BAAgKrB,KAAA","file":"path---coding-interview-prep-rosetta-code-equilibrium-index-93688a730a632f002ea9.js","sourcesContent":["webpackJsonp([680642152580],{\n\n/***/ 3376:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Equilibrium index\",\"description\":[\"<p>An equilibrium index of a sequence is an index into the sequence such that the sum of elements at lower indices is equal to the sum of elements at higher indices.</p>\",\"<p>For example, in a sequence  <big>$A$</big>:</p><p>::::  <big>$A_0 = -7$</big></p>\",\"<p>::::  <big>$A_1 =  1$</big></p>\",\"<p>::::  <big>$A_2 =  5$</big></p>\",\"<p>::::  <big>$A_3 =  2$</big></p>\",\"<p>::::  <big>$A_4 = -4$</big></p>\",\"<p>::::  <big>$A_5 =  3$</big></p>\",\"<p>::::  <big>$A_6 =  0$</big></p><p>3  is an equilibrium index, because:</p><p>::::  <big>$A_0 + A_1 + A_2 = A_4 + A_5 + A_6$</big></p><p>6  is also an equilibrium index, because:</p><p>::::  <big>$A_0 + A_1 + A_2 + A_3 + A_4 + A_5 = 0$</big></p><p>(sum of zero elements is zero)</p><p>7  is not an equilibrium index, because it is not a valid index of sequence <big>$A$</big>.</p>\",\"<p>Write a function that, given a sequence, returns its equilibrium indices (if any).</p><p>Assume that the sequence may be very long.</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/equilibrium-index\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>equilibrium</code> is a function.\",\"testString\":\"assert(typeof equilibrium === 'function', '<code>equilibrium</code> is a function.');\"},{\"text\":\"<code>equilibrium([-7, 1, 5, 2, -4, 3, 0])</code> should return <code>[3,6]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[0]), ans[0], '<code>equilibrium([-7, 1, 5, 2, -4, 3, 0])</code> should return <code>[3,6]</code>.');\"},{\"text\":\"<code>equilibrium([2, 4, 6])</code> should return <code>[]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[1]), ans[1], '<code>equilibrium([2, 4, 6])</code> should return <code>[]</code>.');\"},{\"text\":\"<code>equilibrium([2, 9, 2])</code> should return <code>[1]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[2]), ans[2], '<code>equilibrium([2, 9, 2])</code> should return <code>[1]</code>.');\"},{\"text\":\"<code>equilibrium([1, -1, 1, -1, 1, -1, 1])</code> should return <code>[0,1,2,3,4,5,6]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[3]), ans[3], '<code>equilibrium([1, -1, 1, -1, 1, -1, 1])</code> should return <code>[0,1,2,3,4,5,6]</code>.');\"},{\"text\":\"<code>equilibrium([1])</code> should return <code>[0]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[4]), ans[4], '<code>equilibrium([1])</code> should return <code>[0]</code>.');\"},{\"text\":\"<code>equilibrium([])</code> should return <code>[]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[5]), ans[5], '<code>equilibrium([])</code> should return <code>[]</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function equilibrium (a) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"const tests =\\n  [[-7, 1, 5, 2, -4, 3, 0], // 3, 6\\n  [2, 4, 6], // empty\\n  [2, 9, 2], // 1\\n  [1, -1, 1, -1, 1, -1, 1], // 0,1,2,3,4,5,6\\n  [1], // 0\\n  [] // empty\\n  ];\\nconst ans = [[3, 6], [], [1], [0, 1, 2, 3, 4, 5, 6], [0], []];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/ethiopian-multiplication\",\"id\":\"5987fd532b954e0f21b5d3f6\"},\"slug\":\"/coding-interview-prep/rosetta-code/equilibrium-index\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-equilibrium-index-93688a730a632f002ea9.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Equilibrium index\",\"description\":[\"<p>An equilibrium index of a sequence is an index into the sequence such that the sum of elements at lower indices is equal to the sum of elements at higher indices.</p>\",\"<p>For example, in a sequence  <big>$A$</big>:</p><p>::::  <big>$A_0 = -7$</big></p>\",\"<p>::::  <big>$A_1 =  1$</big></p>\",\"<p>::::  <big>$A_2 =  5$</big></p>\",\"<p>::::  <big>$A_3 =  2$</big></p>\",\"<p>::::  <big>$A_4 = -4$</big></p>\",\"<p>::::  <big>$A_5 =  3$</big></p>\",\"<p>::::  <big>$A_6 =  0$</big></p><p>3  is an equilibrium index, because:</p><p>::::  <big>$A_0 + A_1 + A_2 = A_4 + A_5 + A_6$</big></p><p>6  is also an equilibrium index, because:</p><p>::::  <big>$A_0 + A_1 + A_2 + A_3 + A_4 + A_5 = 0$</big></p><p>(sum of zero elements is zero)</p><p>7  is not an equilibrium index, because it is not a valid index of sequence <big>$A$</big>.</p>\",\"<p>Write a function that, given a sequence, returns its equilibrium indices (if any).</p><p>Assume that the sequence may be very long.</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/equilibrium-index\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>equilibrium</code> is a function.\",\"testString\":\"assert(typeof equilibrium === 'function', '<code>equilibrium</code> is a function.');\"},{\"text\":\"<code>equilibrium([-7, 1, 5, 2, -4, 3, 0])</code> should return <code>[3,6]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[0]), ans[0], '<code>equilibrium([-7, 1, 5, 2, -4, 3, 0])</code> should return <code>[3,6]</code>.');\"},{\"text\":\"<code>equilibrium([2, 4, 6])</code> should return <code>[]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[1]), ans[1], '<code>equilibrium([2, 4, 6])</code> should return <code>[]</code>.');\"},{\"text\":\"<code>equilibrium([2, 9, 2])</code> should return <code>[1]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[2]), ans[2], '<code>equilibrium([2, 9, 2])</code> should return <code>[1]</code>.');\"},{\"text\":\"<code>equilibrium([1, -1, 1, -1, 1, -1, 1])</code> should return <code>[0,1,2,3,4,5,6]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[3]), ans[3], '<code>equilibrium([1, -1, 1, -1, 1, -1, 1])</code> should return <code>[0,1,2,3,4,5,6]</code>.');\"},{\"text\":\"<code>equilibrium([1])</code> should return <code>[0]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[4]), ans[4], '<code>equilibrium([1])</code> should return <code>[0]</code>.');\"},{\"text\":\"<code>equilibrium([])</code> should return <code>[]</code>.\",\"testString\":\"assert.deepEqual(equilibrium(tests[5]), ans[5], '<code>equilibrium([])</code> should return <code>[]</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function equilibrium (a) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"const tests =\\n  [[-7, 1, 5, 2, -4, 3, 0], // 3, 6\\n  [2, 4, 6], // empty\\n  [2, 9, 2], // 1\\n  [1, -1, 1, -1, 1, -1, 1], // 0,1,2,3,4,5,6\\n  [1], // 0\\n  [] // empty\\n  ];\\nconst ans = [[3, 6], [], [1], [0, 1, 2, 3, 4, 5, 6], [0], []];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/ethiopian-multiplication\",\"id\":\"5987fd532b954e0f21b5d3f6\"},\"slug\":\"/coding-interview-prep/rosetta-code/equilibrium-index\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-equilibrium-index.json\n// module id = 3376\n// module chunks = 680642152580"],"sourceRoot":""}