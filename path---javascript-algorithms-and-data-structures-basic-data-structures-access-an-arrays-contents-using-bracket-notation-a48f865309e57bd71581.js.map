{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-data-structures-access-an-arrays-contents-using-bracket-notation-a48f865309e57bd71581.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-data-structures-access-an-arrays-contents-using-bracket-notation.json"],"names":["webpackJsonp","3732","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oDAAAC,aAAA,2KAA6O,mdAA2b,yKAA6M,sKAAAC,cAAA,EAAAC,QAAuNC,KAAA,oHAAAC,UAAA,wBAAAC,QAAyKC,KAAA,8CAAAC,WAAA,0FAAgKD,KAAA,+CAAAC,WAAA,8FAAqKD,KAAA,8CAAAC,WAAA,0FAAgKD,KAAA,8CAAAC,WAAA,2FAAgKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,qGAAgKC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,+GAAAC,GAAA,4BAAgNrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-data-structures-access-an-arrays-contents-using-bracket-notation-a48f865309e57bd71581.js","sourcesContent":["webpackJsonp([81343874217314],{\n\n/***/ 3732:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Access an Array's Contents Using Bracket Notation\",\"description\":[\"所有数据结构的基本特性是，它们不仅能够存储数据，我们还能够按照需求来访问存放在其中的数据。我们已经学习了如何创建一个数组结构，现在让我们开始学习如何访问这个数组结构中的数据。\",\"我们先定义一个包含 3 个元素的数组：\",\"<blockquote>let ourArray = [\\\"a\\\", \\\"b\\\", \\\"c\\\"];</blockquote>\",\"在一个数组结构中，其内部的每个元素都有一个与之对应的<dfn>索引</dfn>（<dfn>index</dfn>）。索引是该元素在数组中的位置，可被用于引用该元素。但需要注意的是，JavaScript 数组的索引是从0开始的（<dfn>zero-indexed</dfn>），即一个数组的第一个元素是在数组中的<em><strong>第 0 个</strong></em>位置，而不是第 1 个位置。\",\"要从一个数组中获取一个元素，我们可以在一个数组变量名的后面加一个使用“方括号”括起来的索引。这叫做<dfn>方括号符号</dfn>（<dfn>bracket notation</dfn>）。\",\"例如我们要从<code>ourArray</code>数组变量中获取数据元素<code>\\\"a\\\"</code>并将其赋值给一个变量，我们可以编写如下所示的代码：\",\"<blockquote>let ourVariable = ourArray[0];<br>// ourVariable 的值为 \\\"a\\\"</blockquote>\",\"除了使用 “索引” 来获取某个元素值以外，你还可以通过类似的方法来<em>设置</em>一个索引位置所对应的元素值：\",\"<blockquote>ourArray[1] = \\\"not b anymore\\\";<br>// ourArray 现在的值为 [\\\"a\\\", \\\"not b anymore\\\", \\\"c\\\"];</blockquote>\",\"我们现在已经利用方括号将索引为 1 的元素从<code>\\\"b\\\"</code>设置为了<code>\\\"not b anymore\\\"</code>。\",\"<hr>\",\"在本挑战中，请你将<code>myArray</code>中第二个元素（索引<code>1</code>）设置为除了<code>\\\"b\\\"</code>以外的任意值。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/access-an-arrays-contents-using-bracket-notation\",\"blockName\":\"Basic Data Structures\",\"tests\":[{\"text\":\"<code>myArray[0]</code>应等于<code>\\\"a\\\"</code>。\",\"testString\":\"assert.strictEqual(myArray[0], \\\"a\\\", '<code>myArray[0]</code>应等于<code>\\\"a\\\"</code>。');\"},{\"text\":\"<code>myArray[1]</code>不应等于<code>\\\"b\\\"</code>。\",\"testString\":\"assert.notStrictEqual(myArray[1], \\\"b\\\", '<code>myArray[1]</code>不应等于<code>\\\"b\\\"</code>。');\"},{\"text\":\"<code>myArray[2]</code>应等于<code>\\\"c\\\"</code>。\",\"testString\":\"assert.strictEqual(myArray[2], \\\"c\\\", '<code>myArray[2]</code>应等于<code>\\\"c\\\"</code>。');\"},{\"text\":\"<code>myArray[3]</code>应等于<code>\\\"d\\\"</code>。\",\"testString\":\"assert.strictEqual(myArray[3], \\\"d\\\", '<code>myArray[3]</code>应等于<code>\\\"d\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let myArray = [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"];\\n// 请把你的代码写在这条注释以下\\n\\n// 请把你的代码写在这条注释以上\\nconsole.log(myArray);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-data-structures/add-items-to-an-array-with-push-and-unshift\",\"id\":\"5a661e0f1068aca922b3ef17\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/access-an-arrays-contents-using-bracket-notation\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-data-structures-access-an-arrays-contents-using-bracket-notation-a48f865309e57bd71581.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Access an Array's Contents Using Bracket Notation\",\"description\":[\"所有数据结构的基本特性是，它们不仅能够存储数据，我们还能够按照需求来访问存放在其中的数据。我们已经学习了如何创建一个数组结构，现在让我们开始学习如何访问这个数组结构中的数据。\",\"我们先定义一个包含 3 个元素的数组：\",\"<blockquote>let ourArray = [\\\"a\\\", \\\"b\\\", \\\"c\\\"];</blockquote>\",\"在一个数组结构中，其内部的每个元素都有一个与之对应的<dfn>索引</dfn>（<dfn>index</dfn>）。索引是该元素在数组中的位置，可被用于引用该元素。但需要注意的是，JavaScript 数组的索引是从0开始的（<dfn>zero-indexed</dfn>），即一个数组的第一个元素是在数组中的<em><strong>第 0 个</strong></em>位置，而不是第 1 个位置。\",\"要从一个数组中获取一个元素，我们可以在一个数组变量名的后面加一个使用“方括号”括起来的索引。这叫做<dfn>方括号符号</dfn>（<dfn>bracket notation</dfn>）。\",\"例如我们要从<code>ourArray</code>数组变量中获取数据元素<code>\\\"a\\\"</code>并将其赋值给一个变量，我们可以编写如下所示的代码：\",\"<blockquote>let ourVariable = ourArray[0];<br>// ourVariable 的值为 \\\"a\\\"</blockquote>\",\"除了使用 “索引” 来获取某个元素值以外，你还可以通过类似的方法来<em>设置</em>一个索引位置所对应的元素值：\",\"<blockquote>ourArray[1] = \\\"not b anymore\\\";<br>// ourArray 现在的值为 [\\\"a\\\", \\\"not b anymore\\\", \\\"c\\\"];</blockquote>\",\"我们现在已经利用方括号将索引为 1 的元素从<code>\\\"b\\\"</code>设置为了<code>\\\"not b anymore\\\"</code>。\",\"<hr>\",\"在本挑战中，请你将<code>myArray</code>中第二个元素（索引<code>1</code>）设置为除了<code>\\\"b\\\"</code>以外的任意值。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/access-an-arrays-contents-using-bracket-notation\",\"blockName\":\"Basic Data Structures\",\"tests\":[{\"text\":\"<code>myArray[0]</code>应等于<code>\\\"a\\\"</code>。\",\"testString\":\"assert.strictEqual(myArray[0], \\\"a\\\", '<code>myArray[0]</code>应等于<code>\\\"a\\\"</code>。');\"},{\"text\":\"<code>myArray[1]</code>不应等于<code>\\\"b\\\"</code>。\",\"testString\":\"assert.notStrictEqual(myArray[1], \\\"b\\\", '<code>myArray[1]</code>不应等于<code>\\\"b\\\"</code>。');\"},{\"text\":\"<code>myArray[2]</code>应等于<code>\\\"c\\\"</code>。\",\"testString\":\"assert.strictEqual(myArray[2], \\\"c\\\", '<code>myArray[2]</code>应等于<code>\\\"c\\\"</code>。');\"},{\"text\":\"<code>myArray[3]</code>应等于<code>\\\"d\\\"</code>。\",\"testString\":\"assert.strictEqual(myArray[3], \\\"d\\\", '<code>myArray[3]</code>应等于<code>\\\"d\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let myArray = [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"];\\n// 请把你的代码写在这条注释以下\\n\\n// 请把你的代码写在这条注释以上\\nconsole.log(myArray);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-data-structures/add-items-to-an-array-with-push-and-unshift\",\"id\":\"5a661e0f1068aca922b3ef17\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/access-an-arrays-contents-using-bracket-notation\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-data-structures-access-an-arrays-contents-using-bracket-notation.json\n// module id = 3732\n// module chunks = 81343874217314"],"sourceRoot":""}