{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-gamma-function-fac5b7476c6474bf5c55.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-gamma-function.json"],"names":["webpackJsonp","3391","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iBAAAC,aAAA,wUAAyVC,cAAA,EAAAC,QAAqDC,KAAA,qDAAAC,UAAA,eAAAC,QAAiGC,KAAA,2CAAAC,WAAA,gFAA+ID,KAAA,2DAAAC,WAAA,wGAAuLD,KAAA,8EAAAC,WAAA,2HAA6ND,KAAA,8EAAAC,WAAA,2HAA6ND,KAAA,8EAAAC,WAAA,2HAA6ND,KAAA,8EAAAC,WAAA,2HAA6ND,KAAA,8EAAAC,WAAA,4HAA6NC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2CAA8FC,KAAA,GAAAC,KAAA,iKAAmLC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,2DAAAC,GAAA,4BAA4JrB,KAAA","file":"path---coding-interview-prep-rosetta-code-gamma-function-fac5b7476c6474bf5c55.js","sourcesContent":["webpackJsonp([37231646349227],{\n\n/***/ 3391:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Gamma function\",\"description\":[\"Implement one algorithm (or more) to compute the <a href=\\\"https://en.wikipedia.org/wiki/Gamma function\\\">Gamma</a> ($\\\\Gamma$) function (in the real field only).\",\"The Gamma function can be defined as:\",\"<div style='padding-left: 4em;'><big><big>$\\\\Gamma(x) = \\\\displaystyle\\\\int_0^\\\\infty t^{x-1}e^{-t} dt$</big></big></div>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/gamma-function\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>gamma</code> should be a function.\",\"testString\":\"assert(typeof gamma=='function','<code>gamma</code> should be a function.')\"},{\"text\":\"<code>gamma('+tests[0]+')</code> should return a number.\",\"testString\":\"assert(typeof gamma(tests[0])=='number','<code>gamma('+tests[0]+')</code> should return a number.')\"},{\"text\":\"<code>gamma('+tests[0]+')</code> should return <code>'+results[0]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[0]),results[0],'<code>gamma('+tests[0]+')</code> should return <code>'+results[0]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[1]+')</code> should return <code>'+results[1]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[1]),results[1],'<code>gamma('+tests[1]+')</code> should return <code>'+results[1]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[2]+')</code> should return <code>'+results[2]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[2]),results[2],'<code>gamma('+tests[2]+')</code> should return <code>'+results[2]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[3]+')</code> should return <code>'+results[3]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[3]),results[3],'<code>gamma('+tests[3]+')</code> should return <code>'+results[3]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[4]+')</code> should return <code>'+results[4]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[4]),results[4],'<code>gamma('+tests[4]+')</code> should return <code>'+results[4]+'</code>.')\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function gamma (x) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"let tests=[.1,.2,.3,.4,.5];\\nlet results=[\\n  9.513507698668736,\\n  4.590843711998803,\\n  2.9915689876875904,\\n  2.218159543757687,\\n  1.7724538509055159\\n];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/gaussian-elimination\",\"id\":\"5a23c84252665b21eecc7e76\"},\"slug\":\"/coding-interview-prep/rosetta-code/gamma-function\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-gamma-function-fac5b7476c6474bf5c55.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Gamma function\",\"description\":[\"Implement one algorithm (or more) to compute the <a href=\\\"https://en.wikipedia.org/wiki/Gamma function\\\">Gamma</a> ($\\\\Gamma$) function (in the real field only).\",\"The Gamma function can be defined as:\",\"<div style='padding-left: 4em;'><big><big>$\\\\Gamma(x) = \\\\displaystyle\\\\int_0^\\\\infty t^{x-1}e^{-t} dt$</big></big></div>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/gamma-function\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>gamma</code> should be a function.\",\"testString\":\"assert(typeof gamma=='function','<code>gamma</code> should be a function.')\"},{\"text\":\"<code>gamma('+tests[0]+')</code> should return a number.\",\"testString\":\"assert(typeof gamma(tests[0])=='number','<code>gamma('+tests[0]+')</code> should return a number.')\"},{\"text\":\"<code>gamma('+tests[0]+')</code> should return <code>'+results[0]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[0]),results[0],'<code>gamma('+tests[0]+')</code> should return <code>'+results[0]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[1]+')</code> should return <code>'+results[1]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[1]),results[1],'<code>gamma('+tests[1]+')</code> should return <code>'+results[1]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[2]+')</code> should return <code>'+results[2]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[2]),results[2],'<code>gamma('+tests[2]+')</code> should return <code>'+results[2]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[3]+')</code> should return <code>'+results[3]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[3]),results[3],'<code>gamma('+tests[3]+')</code> should return <code>'+results[3]+'</code>.')\"},{\"text\":\"<code>gamma('+tests[4]+')</code> should return <code>'+results[4]+'</code>.\",\"testString\":\"assert.equal(gamma(tests[4]),results[4],'<code>gamma('+tests[4]+')</code> should return <code>'+results[4]+'</code>.')\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function gamma (x) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"let tests=[.1,.2,.3,.4,.5];\\nlet results=[\\n  9.513507698668736,\\n  4.590843711998803,\\n  2.9915689876875904,\\n  2.218159543757687,\\n  1.7724538509055159\\n];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/gaussian-elimination\",\"id\":\"5a23c84252665b21eecc7e76\"},\"slug\":\"/coding-interview-prep/rosetta-code/gamma-function\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-gamma-function.json\n// module id = 3391\n// module chunks = 37231646349227"],"sourceRoot":""}