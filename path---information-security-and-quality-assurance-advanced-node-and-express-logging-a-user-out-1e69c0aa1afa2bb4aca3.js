webpackJsonp([0xb5d25bc977a1],{3659:function(e,t){e.exports={data:{challengeNode:{title:"Logging a User Out",guideUrl:null,description:["注意，本项目在<a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-advancednode/'>这个 Glitch 项目</a>的基础上进行开发，你也可以从 <a href='https://github.com/freeCodeCamp/boilerplate-advancednode/'>GitHub</a> 上克隆。","创建退出登录的逻辑是比较简单的。只要用户尝试退出登录，路由就应重定向到主页，而不应该显示任何其他页面。","在 passport 里，只需要在重定向前调用<code>req.logout();</code>即可完成用户登出。","<pre>app.route('/logout')\n  .get((req, res) => {\n      req.logout();\n      res.redirect('/');\n  });</pre>","你可能注意到我们还没有处理 404 错误，这个错误码代表页面无法找到。在 Node.js 中我们通常会用如下的中间件来处理，请在所有路由之后添加这段代码：","<pre>app.use((req, res, next) => {\n  res.status(404)\n    .type('text')\n    .send('Not Found');\n});</pre>","完成上述要求后，你就可以在左边提交你的页面链接。"],challengeType:2,fields:{blockName:"Advanced Node and Express",slug:"/information-security-and-quality-assurance/advanced-node-and-express/logging-a-user-out",tests:[{text:"应存在退出登录的路由。",testString:"getUserInput => $.get(getUserInput('url')+ '/_api/server.js') .then(data => { assert.match(data, /req.logout/gi, '你应该在 /logout 路由里调用 req.logout()'); }, xhr => { throw new Error(xhr.statusText); })"},{text:"退出登录后应重定向到主页 /",testString:"getUserInput => $.get(getUserInput('url')+ '/logout') .then(data => { assert.match(data, /Home page/gi, '当用户退出登录，应重定向到主页。'); }, xhr => { throw new Error(xhr.statusText); })"}]}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/information-security-and-quality-assurance/advanced-node-and-express/registration-of-new-users",id:"58965611f9fc0f352b528e6c"},slug:"/information-security-and-quality-assurance/advanced-node-and-express/logging-a-user-out"}}}});
//# sourceMappingURL=path---information-security-and-quality-assurance-advanced-node-and-express-logging-a-user-out-1e69c0aa1afa2bb4aca3.js.map