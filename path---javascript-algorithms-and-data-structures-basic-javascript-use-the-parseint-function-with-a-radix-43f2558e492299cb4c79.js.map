{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-use-the-parseint-function-with-a-radix-43f2558e492299cb4c79.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-use-the-parseint-function-with-a-radix.json"],"names":["webpackJsonp","3855","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,yCAAAC,aAAA,kIAAyL,gDAAkD,kIAAAC,cAAA,EAAAC,QAA2KC,KAAA,qGAAAC,UAAA,mBAAAC,QAAqJC,KAAA,8DAAAC,WAAA,mGAAqLD,KAAA,iDAAAC,WAAA,gHAA2LD,KAAA,gDAAAC,WAAA,iGAAyKD,KAAA,iDAAAC,WAAA,mGAA4KD,KAAA,qDAAAC,WAAA,0GAAsLC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,wEAA6HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,mGAAAC,GAAA,4BAAoMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-use-the-parseint-function-with-a-radix-43f2558e492299cb4c79.js","sourcesContent":["webpackJsonp([71151992416307],{\n\n/***/ 3855:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use the parseInt Function with a Radix\",\"description\":[\"<code>parseInt()</code>函数解析一个字符串并返回一个整数。它同时可接受第二个参数，一个介于2和36之间的整数，表示字符串的基数。\",\"函数调用如下所示：\",\"<code>parseInt(string, radix);</code>\",\"示例：\",\"<code>var a = parseInt(\\\"11\\\", 2);</code>\",\"参数 2 表示 \\\"11\\\" 使用二进制数值系统。此示例将字符串 \\\"11\\\" 转换为整数 3。\",\"<hr>\",\"在<code>convertToInteger</code中使用<code>parseInt()</code>函数把二进制数转换成十进制并返回。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function-with-a-radix\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>convertToInteger</code>中应该使用<code>parseInt()</code>函数\",\"testString\":\"assert(/parseInt/g.test(code), '<code>convertToInteger</code>中应该使用<code>parseInt()</code>函数');\"},{\"text\":\"<code>convertToInteger(\\\"10011\\\")</code>应该返回一个数字\",\"testString\":\"assert(typeof(convertToInteger(\\\"10011\\\")) === \\\"number\\\", '<code>convertToInteger(\\\"10011\\\")</code>应该返回一个数字');\"},{\"text\":\"<code>convertToInteger(\\\"10011\\\")</code>应该返回 19\",\"testString\":\"assert(convertToInteger(\\\"10011\\\") === 19, '<code>convertToInteger(\\\"10011\\\")</code>应该返回 19');\"},{\"text\":\"<code>convertToInteger(\\\"111001\\\")</code>应该返回 57\",\"testString\":\"assert(convertToInteger(\\\"111001\\\") === 57, '<code>convertToInteger(\\\"111001\\\")</code>应该返回 57');\"},{\"text\":\"<code>convertToInteger(\\\"JamesBond\\\")</code>应该返回 NaN\",\"testString\":\"assert.isNaN(convertToInteger(\\\"JamesBond\\\"), '<code>convertToInteger(\\\"JamesBond\\\")</code>应该返回 NaN');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function convertToInteger(str) {\\n  \\n}\\n\\nconvertToInteger(\\\"10011\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator\",\"id\":\"587d7b7e367417b2b2512b22\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function-with-a-radix\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-use-the-parseint-function-with-a-radix-43f2558e492299cb4c79.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use the parseInt Function with a Radix\",\"description\":[\"<code>parseInt()</code>函数解析一个字符串并返回一个整数。它同时可接受第二个参数，一个介于2和36之间的整数，表示字符串的基数。\",\"函数调用如下所示：\",\"<code>parseInt(string, radix);</code>\",\"示例：\",\"<code>var a = parseInt(\\\"11\\\", 2);</code>\",\"参数 2 表示 \\\"11\\\" 使用二进制数值系统。此示例将字符串 \\\"11\\\" 转换为整数 3。\",\"<hr>\",\"在<code>convertToInteger</code中使用<code>parseInt()</code>函数把二进制数转换成十进制并返回。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function-with-a-radix\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>convertToInteger</code>中应该使用<code>parseInt()</code>函数\",\"testString\":\"assert(/parseInt/g.test(code), '<code>convertToInteger</code>中应该使用<code>parseInt()</code>函数');\"},{\"text\":\"<code>convertToInteger(\\\"10011\\\")</code>应该返回一个数字\",\"testString\":\"assert(typeof(convertToInteger(\\\"10011\\\")) === \\\"number\\\", '<code>convertToInteger(\\\"10011\\\")</code>应该返回一个数字');\"},{\"text\":\"<code>convertToInteger(\\\"10011\\\")</code>应该返回 19\",\"testString\":\"assert(convertToInteger(\\\"10011\\\") === 19, '<code>convertToInteger(\\\"10011\\\")</code>应该返回 19');\"},{\"text\":\"<code>convertToInteger(\\\"111001\\\")</code>应该返回 57\",\"testString\":\"assert(convertToInteger(\\\"111001\\\") === 57, '<code>convertToInteger(\\\"111001\\\")</code>应该返回 57');\"},{\"text\":\"<code>convertToInteger(\\\"JamesBond\\\")</code>应该返回 NaN\",\"testString\":\"assert.isNaN(convertToInteger(\\\"JamesBond\\\"), '<code>convertToInteger(\\\"JamesBond\\\")</code>应该返回 NaN');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function convertToInteger(str) {\\n  \\n}\\n\\nconvertToInteger(\\\"10011\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator\",\"id\":\"587d7b7e367417b2b2512b22\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function-with-a-radix\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-use-the-parseint-function-with-a-radix.json\n// module id = 3855\n// module chunks = 71151992416307"],"sourceRoot":""}