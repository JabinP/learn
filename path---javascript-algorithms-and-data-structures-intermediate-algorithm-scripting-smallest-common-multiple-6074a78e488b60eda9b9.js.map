{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-smallest-common-multiple-6074a78e488b60eda9b9.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-smallest-common-multiple.json"],"names":["webpackJsonp","3938","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,2BAAAC,aAAA,uQAAAC,cAAA,EAAAC,QAAqVC,KAAA,uGAAAC,UAAA,mCAAAC,QAAuKC,KAAA,gDAAAC,WAAA,iHAAqLD,KAAA,+CAAAC,WAAA,mGAAsKD,KAAA,+CAAAC,WAAA,mGAAsKD,KAAA,mDAAAC,WAAA,yGAAgLD,KAAA,oDAAAC,WAAA,6GAAqLD,KAAA,sDAAAC,WAAA,kHAA2LC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,iFAAoIC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,sFAAAC,GAAA,4BAAuLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-smallest-common-multiple-6074a78e488b60eda9b9.js","sourcesContent":["webpackJsonp([243807268219233],{\n\n/***/ 3938:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Smallest Common Multiple\",\"description\":[\"在这道题目中，我们需要写一个函数，它接收一个包含两个数字的数组参数<code>arr</code>，它的返回值为这两个数字范围内所有数字（包含这两个数字）的最小公倍数。\",\"注意，较小数不一定总是出现在数组的第一个元素。\",\"比如，传入<code>[1, 3]</code>，那么函数的返回结果应为 1、2、3 的最小公倍数，即为 6。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/smallest-common-multiple\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>smallestCommons([1, 5])</code>应该返回一个数字。\",\"testString\":\"assert.deepEqual(typeof smallestCommons([1, 5]), 'number', '<code>smallestCommons([1, 5])</code>应该返回一个数字。');\"},{\"text\":\"<code>smallestCommons([1, 5])</code>应该返回 60。\",\"testString\":\"assert.deepEqual(smallestCommons([1, 5]), 60, '<code>smallestCommons([1, 5])</code>应该返回 60。');\"},{\"text\":\"<code>smallestCommons([5, 1])</code>应该返回 60。\",\"testString\":\"assert.deepEqual(smallestCommons([5, 1]), 60, '<code>smallestCommons([5, 1])</code>应该返回 60。');\"},{\"text\":\"<code>smallestCommons([2, 10])</code>应该返回 2520。.\",\"testString\":\"assert.deepEqual(smallestCommons([2, 10]), 2520, '<code>smallestCommons([2, 10])</code>应该返回 2520。');\"},{\"text\":\"<code>smallestCommons([1, 13])</code>应该返回 360360。\",\"testString\":\"assert.deepEqual(smallestCommons([1, 13]), 360360, '<code>smallestCommons([1, 13])</code>应该返回 360360。');\"},{\"text\":\"<code>smallestCommons([23, 18])</code>应该返回 6056820。\",\"testString\":\"assert.deepEqual(smallestCommons([23, 18]), 6056820, '<code>smallestCommons([23, 18])</code>应该返回 6056820。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function smallestCommons(arr) {\\n  return arr;\\n}\\n\\n\\nsmallestCommons([1,5]);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/drop-it\",\"id\":\"ae9defd7acaf69703ab432ea\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/smallest-common-multiple\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-smallest-common-multiple-6074a78e488b60eda9b9.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Smallest Common Multiple\",\"description\":[\"在这道题目中，我们需要写一个函数，它接收一个包含两个数字的数组参数<code>arr</code>，它的返回值为这两个数字范围内所有数字（包含这两个数字）的最小公倍数。\",\"注意，较小数不一定总是出现在数组的第一个元素。\",\"比如，传入<code>[1, 3]</code>，那么函数的返回结果应为 1、2、3 的最小公倍数，即为 6。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/smallest-common-multiple\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>smallestCommons([1, 5])</code>应该返回一个数字。\",\"testString\":\"assert.deepEqual(typeof smallestCommons([1, 5]), 'number', '<code>smallestCommons([1, 5])</code>应该返回一个数字。');\"},{\"text\":\"<code>smallestCommons([1, 5])</code>应该返回 60。\",\"testString\":\"assert.deepEqual(smallestCommons([1, 5]), 60, '<code>smallestCommons([1, 5])</code>应该返回 60。');\"},{\"text\":\"<code>smallestCommons([5, 1])</code>应该返回 60。\",\"testString\":\"assert.deepEqual(smallestCommons([5, 1]), 60, '<code>smallestCommons([5, 1])</code>应该返回 60。');\"},{\"text\":\"<code>smallestCommons([2, 10])</code>应该返回 2520。.\",\"testString\":\"assert.deepEqual(smallestCommons([2, 10]), 2520, '<code>smallestCommons([2, 10])</code>应该返回 2520。');\"},{\"text\":\"<code>smallestCommons([1, 13])</code>应该返回 360360。\",\"testString\":\"assert.deepEqual(smallestCommons([1, 13]), 360360, '<code>smallestCommons([1, 13])</code>应该返回 360360。');\"},{\"text\":\"<code>smallestCommons([23, 18])</code>应该返回 6056820。\",\"testString\":\"assert.deepEqual(smallestCommons([23, 18]), 6056820, '<code>smallestCommons([23, 18])</code>应该返回 6056820。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function smallestCommons(arr) {\\n  return arr;\\n}\\n\\n\\nsmallestCommons([1,5]);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/drop-it\",\"id\":\"ae9defd7acaf69703ab432ea\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/smallest-common-multiple\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-smallest-common-multiple.json\n// module id = 3938\n// module chunks = 243807268219233"],"sourceRoot":""}