{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-24-game-d16fafb4c44047225eeb.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-24-game.json"],"names":["webpackJsonp","3343","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,UAAAC,aAAA,2QAAuS,gCAAkC,gCAAkC,gCAAkC,2HAAAC,cAAA,EAAAC,QAAgKC,KAAA,8CAAAC,UAAA,eAAAC,QAA0FC,KAAA,8BAAAC,WAAA,0EAA4HD,KAAA,qFAAAC,WAAA,gJAA2PD,KAAA,+DAAAC,WAAA,wHAA6MD,KAAA,yFAAAC,WAAA,oJAAmQD,KAAA,iEAAAC,WAAA,6HAAmNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,6DAAgHC,KAAA,GAAAC,KAAA,+3BAAi5BC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yEAAAC,GAAA,4BAA0KrB,KAAA","file":"path---coding-interview-prep-rosetta-code-24-game-d16fafb4c44047225eeb.js","sourcesContent":["webpackJsonp([272020795634280],{\n\n/***/ 3343:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"24 game\",\"description\":[\"<p>实现函数，其参数为从1~9中任选4个可重复的数字组成的字符串，并返回一个运算结果为24的算数表达式。如果不存在该表达式，就返回\\\"不存在该表达式\\\"。</p>\",\"<p>规则：</p>\",\"只有如下运算规则可以使用：乘、除、加、减\",\"除法应使用浮点运算或分数来保留余数。\",\"不可以将字符串中4个字符组成数字（例如：由1、2、2、1组成的参数，返回 12+12 的表达式是错误的）。\",\"4个数字字符使用顺序可以与给出顺序不一致。\",\"<p>示例输入：</p>\",\"<code>solve24(\\\"4878\\\");</code>\",\"<code>solve24(\\\"1234\\\");</code>\",\"<code>solve24(\\\"6789\\\");</code>\",\"<code>solve24(\\\"1127\\\");</code>\",\"<p>示例输出（字符串）：</p>\",\"<code>(7-8/8)*4</code>\",\"<code>3*1*4*2</code>\",\"<code>(6*8)/(9-7)</code>\",\"<code>(1+7)*(2+1)</code>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/24-game\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>solve24</code> 是一个函数。\",\"testString\":\"assert(typeof solve24 === 'function', '<code>solve24</code> 是一个函数。');\"},{\"text\":\"<code>solve24(\\\"4878\\\")</code> 应当返回 <code>(7-8/8)*4</code> 或者 <code>4*(7-8/8)</code>\",\"testString\":\"assert(include(answers[0], solve24(testCases[0])), '<code>solve24(\\\"4878\\\")</code> 应当返回 <code>(7-8/8)*4</code> 或者 <code>4*(7-8/8)</code>');\"},{\"text\":\"<code>solve24(\\\"1234\\\")</code> 应当返回类似 <code>1*2*3*4</code> 的排列\",\"testString\":\"assert(include(answers[1], solve24(testCases[1])), '<code>solve24(\\\"1234\\\")</code> 应当返回 <code>1*2*3*4</code>') 的排列;\"},{\"text\":\"<code>solve24(\\\"6789\\\")</code> 应当返回 <code>(6*8)/(9-7)</code> 或者 <code>(8*6)/(9-7)</code>\",\"testString\":\"assert(include(answers[2], solve24(testCases[2])), '<code>solve24(\\\"6789\\\")</code> 应当返回 <code>(6*8)/(9-7)</code> 或者 <code>(8*6)/(9-7)</code>');\"},{\"text\":\"<code>solve24(\\\"1127\\\")</code> 应当返回 <code>(1+7)*(1*2)</code> 的排列\",\"testString\":\"assert(include(answers[3], solve24(testCases[3])), '<code>solve24(\\\"1127\\\")</code> 应当返回 <code>(1+7)*(1*2)</code>') 的排列;\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function solve24 (numStr) {\\n  // 祝你好运！\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const testCases = [\\n  '4878',\\n  '1234',\\n  '6789',\\n  '1127'\\n];\\n\\nconst answers = [\\n  ['(7-8/8)*4', '4*(7-8/8)', '(4-8+7)*8', '(4+7-8)*8', '(7+4-8)*8', '(7-8+4)*8', '8*(4-8+7)', '8*(4+7-8)', '8*(7+4-8)', '8*(7-8+4)'],\\n  ['1*2*3*4', '1*2*4*3', '1*3*2*4', '1*3*4*2', '1*4*2*3', '1*4*3*2', '2*1*3*4', '2*1*4*3', '2*3*1*4', '2*3*4*1', '2*4*3*1', '2*4*1*3', '3*1*2*4', '3*1*4*2', '3*2*1*4', '3*2*4*1', '3*4*1*2', '3*4*2*1', '4*1*2*3', '4*1*3*2', '4*2*1*3', '4*2*3*1', '4*3*1*2', '4*3*2*1', '(1+2+3)*4', '(1+3+2)*4', '(2+1+3)*4', '(2+3+1)*4', '(3+1+2)*4', '(3+2+1)*4', '4*(1+2+3)', '4*(2+1+3)', '4*(2+3+1)', '4*(3+1+2)', '4*(3+2+1)'],\\n  ['(6*8)/(9-7)', '(8*6)/(9-7)', '6*8/(9-7)', '8*6/(9-7)'],\\n  ['(1+7)*(2+1)', '(1+7)*(1+2)', '(1+2)*(1+7)', '(1+2)*(7+1)', '(2+1)*(1+7)', '(7+1)*(2+1)']\\n];\\n\\nfunction include(ansArr, res) {\\n  const index = ansArr.indexOf(res);\\n  return index >= 0;\\n}\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/9-billion-names-of-god-the-integer\",\"id\":\"5951e88f64ebf159166a1176\"},\"slug\":\"/coding-interview-prep/rosetta-code/24-game\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-24-game-d16fafb4c44047225eeb.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"24 game\",\"description\":[\"<p>实现函数，其参数为从1~9中任选4个可重复的数字组成的字符串，并返回一个运算结果为24的算数表达式。如果不存在该表达式，就返回\\\"不存在该表达式\\\"。</p>\",\"<p>规则：</p>\",\"只有如下运算规则可以使用：乘、除、加、减\",\"除法应使用浮点运算或分数来保留余数。\",\"不可以将字符串中4个字符组成数字（例如：由1、2、2、1组成的参数，返回 12+12 的表达式是错误的）。\",\"4个数字字符使用顺序可以与给出顺序不一致。\",\"<p>示例输入：</p>\",\"<code>solve24(\\\"4878\\\");</code>\",\"<code>solve24(\\\"1234\\\");</code>\",\"<code>solve24(\\\"6789\\\");</code>\",\"<code>solve24(\\\"1127\\\");</code>\",\"<p>示例输出（字符串）：</p>\",\"<code>(7-8/8)*4</code>\",\"<code>3*1*4*2</code>\",\"<code>(6*8)/(9-7)</code>\",\"<code>(1+7)*(2+1)</code>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/24-game\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>solve24</code> 是一个函数。\",\"testString\":\"assert(typeof solve24 === 'function', '<code>solve24</code> 是一个函数。');\"},{\"text\":\"<code>solve24(\\\"4878\\\")</code> 应当返回 <code>(7-8/8)*4</code> 或者 <code>4*(7-8/8)</code>\",\"testString\":\"assert(include(answers[0], solve24(testCases[0])), '<code>solve24(\\\"4878\\\")</code> 应当返回 <code>(7-8/8)*4</code> 或者 <code>4*(7-8/8)</code>');\"},{\"text\":\"<code>solve24(\\\"1234\\\")</code> 应当返回类似 <code>1*2*3*4</code> 的排列\",\"testString\":\"assert(include(answers[1], solve24(testCases[1])), '<code>solve24(\\\"1234\\\")</code> 应当返回 <code>1*2*3*4</code>') 的排列;\"},{\"text\":\"<code>solve24(\\\"6789\\\")</code> 应当返回 <code>(6*8)/(9-7)</code> 或者 <code>(8*6)/(9-7)</code>\",\"testString\":\"assert(include(answers[2], solve24(testCases[2])), '<code>solve24(\\\"6789\\\")</code> 应当返回 <code>(6*8)/(9-7)</code> 或者 <code>(8*6)/(9-7)</code>');\"},{\"text\":\"<code>solve24(\\\"1127\\\")</code> 应当返回 <code>(1+7)*(1*2)</code> 的排列\",\"testString\":\"assert(include(answers[3], solve24(testCases[3])), '<code>solve24(\\\"1127\\\")</code> 应当返回 <code>(1+7)*(1*2)</code>') 的排列;\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function solve24 (numStr) {\\n  // 祝你好运！\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const testCases = [\\n  '4878',\\n  '1234',\\n  '6789',\\n  '1127'\\n];\\n\\nconst answers = [\\n  ['(7-8/8)*4', '4*(7-8/8)', '(4-8+7)*8', '(4+7-8)*8', '(7+4-8)*8', '(7-8+4)*8', '8*(4-8+7)', '8*(4+7-8)', '8*(7+4-8)', '8*(7-8+4)'],\\n  ['1*2*3*4', '1*2*4*3', '1*3*2*4', '1*3*4*2', '1*4*2*3', '1*4*3*2', '2*1*3*4', '2*1*4*3', '2*3*1*4', '2*3*4*1', '2*4*3*1', '2*4*1*3', '3*1*2*4', '3*1*4*2', '3*2*1*4', '3*2*4*1', '3*4*1*2', '3*4*2*1', '4*1*2*3', '4*1*3*2', '4*2*1*3', '4*2*3*1', '4*3*1*2', '4*3*2*1', '(1+2+3)*4', '(1+3+2)*4', '(2+1+3)*4', '(2+3+1)*4', '(3+1+2)*4', '(3+2+1)*4', '4*(1+2+3)', '4*(2+1+3)', '4*(2+3+1)', '4*(3+1+2)', '4*(3+2+1)'],\\n  ['(6*8)/(9-7)', '(8*6)/(9-7)', '6*8/(9-7)', '8*6/(9-7)'],\\n  ['(1+7)*(2+1)', '(1+7)*(1+2)', '(1+2)*(1+7)', '(1+2)*(7+1)', '(2+1)*(1+7)', '(7+1)*(2+1)']\\n];\\n\\nfunction include(ansArr, res) {\\n  const index = ansArr.indexOf(res);\\n  return index >= 0;\\n}\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/9-billion-names-of-god-the-integer\",\"id\":\"5951e88f64ebf159166a1176\"},\"slug\":\"/coding-interview-prep/rosetta-code/24-game\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-24-game.json\n// module id = 3343\n// module chunks = 272020795634280"],"sourceRoot":""}