webpackJsonp([0xfaea759b71ee],{3696:function(e,t){e.exports={data:{challengeNode:{title:"Run Functional Tests using a Headless Browser II",guideUrl:null,description:["As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.","This exercise is similar to the preceding.","Look at  the code for directions. Follow the assertions order, We rely on it."],challengeType:2,fields:{blockName:"Quality Assurance and Testing with Chai",slug:"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/run-functional-tests-using-a-headless-browser-ii",tests:[{text:"All tests should pass",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=functional&n=5').then(data => { assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })"},{text:" assert that the headless browser request succeeded",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=functional&n=5').then(data => { assert.equal(data.assertions[0].method, 'browser.success'); }, xhr => { throw new Error(xhr.responseText); })"},{text:"assert that the text inside the element 'span#name' is 'Amerigo'",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=functional&n=5').then(data => { assert.equal(data.assertions[1].method, 'browser.text'); assert.equal(data.assertions[1].args[0], '\\'span#name\\''); assert.equal(data.assertions[1].args[1], '\\'Amerigo\\'');}, xhr => { throw new Error(xhr.responseText); })"},{text:"assert that the text inside the element 'span#surname' is 'Vespucci'",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=functional&n=5').then(data => { assert.equal(data.assertions[2].method, 'browser.text'); assert.equal(data.assertions[2].args[0], '\\'span#surname\\''); assert.equal(data.assertions[2].args[1], '\\'Vespucci\\'');}, xhr => { throw new Error(xhr.responseText); })"},{text:"assert that the element 'span#dates' exist and its count is 1",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=functional&n=5').then(data => { assert.equal(data.assertions[3].method, 'browser.element'); assert.equal(data.assertions[3].args[0], '\\'span#dates\\''); assert.equal(data.assertions[3].args[1], 1);}, xhr => { throw new Error(xhr.responseText); })"}]}}},pathContext:{challengeMeta:{introPath:"/information-security-and-quality-assurance/advanced-node-and-express",template:null,required:[],nextChallengePath:"/information-security-and-quality-assurance/advanced-node-and-express/set-up-a-template-engine",id:"587d8250367417b2b2512c5d"},slug:"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/run-functional-tests-using-a-headless-browser-ii"}}}});
//# sourceMappingURL=path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-run-functional-tests-using-a-headless-browser-ii-f90cd05a85904630f2e8.js.map