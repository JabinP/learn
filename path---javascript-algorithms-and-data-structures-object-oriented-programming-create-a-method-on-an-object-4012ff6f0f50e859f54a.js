webpackJsonp([52868643163327],{3956:function(e,o){e.exports={data:{challengeNode:{title:"Create a Method on an Object",description:["<code>对象</code>可以有一个叫做<code>方法</code>的特殊<code>属性</code>。","<code>方法</code>其实是一个值为函数的<code>属性</code>，它可以为一个<code>对象</code>添加不同的行为。以下就是一个带有方法属性的<code>duck</code>示例：",'<blockquote>let duck = {<br>&nbsp;&nbsp;name: "Aflac",<br>&nbsp;&nbsp;numLegs: 2,<br>&nbsp;&nbsp;sayName: function() {return "The name of this duck is " + duck.name + ".";}<br>};<br>duck.sayName();<br>// 返回了: "The name of this duck is Aflac."</blockquote>',"这个例子给<code>duck</code>对象添加了一个<code>sayName 方法</code>，这个方法返回一个包含<code>duck</code>名字的句子。","注意：这个<code>方法</code>在返回语句中使用<code>duck.name</code>的方式来获取<code>name</code>的属性值。在下一个挑战中我们将会使用另外一种方法来实现。","<hr>",'给<code>dog 对象</code>设置一个名为<code>sayLegs</code>的方法，并让它返回 "This dog has 4 legs." 这句话。'],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/object-oriented-programming/create-a-method-on-an-object",blockName:"Object Oriented Programming",tests:[{text:"<code>dog.sayLegs()</code>应该是一个函数。",testString:"assert(typeof(dog.sayLegs) === 'function', '<code>dog.sayLegs()</code>应该是一个函数。');"},{text:"<code>dog.sayLegs()</code>应该返回给定的字符串，需要注意标点和间距的问题。",testString:"assert(dog.sayLegs() === 'This dog has 4 legs.', '<code>dog.sayLegs()</code>应该返回给定的字符串，需要注意标点和间距的问题。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'let dog = {\n  name: "Spot",\n  numLegs: 4,\n  \n};\n\ndog.sayLegs();',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/object-oriented-programming/make-code-more-reusable-with-the-this-keyword",id:"587d7dad367417b2b2512b75"},slug:"/javascript-algorithms-and-data-structures/object-oriented-programming/create-a-method-on-an-object"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-object-oriented-programming-create-a-method-on-an-object-4012ff6f0f50e859f54a.js.map