{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-es-6-use-arrow-functions-to-write-concise-anonymous-functions-b86401095aade292c477.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-es-6-use-arrow-functions-to-write-concise-anonymous-functions.json"],"names":["webpackJsonp","3884","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,2DAAAC,aAAA,8PAAmU,6JAA+J,gRAAAC,cAAA,EAAAC,QAA6TC,KAAA,0GAAAC,UAAA,MAAAC,QAA6IC,KAAA,0BAAAC,WAAA,6FAA2ID,KAAA,oDAAAC,WAAA,iIAAyMD,KAAA,8CAAAC,WAAA,wFAA0JD,KAAA,+BAAAC,WAAA,uFAA0ID,KAAA,gCAAAC,WAAA,yGAA4JC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,sEAA2HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,uFAAAC,GAAA,4BAAwLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-es-6-use-arrow-functions-to-write-concise-anonymous-functions-b86401095aade292c477.js","sourcesContent":["webpackJsonp([215049902291814],{\n\n/***/ 3884:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Arrow Functions to Write Concise Anonymous Functions\",\"description\":[\"在 JavaScript 里，我们会经常遇到不需要给函数命名的情况，尤其是在需要将一个函数作为参数传给另外一个函数的时候。这时，我们会创建匿名函数。因为这些函数不会在其他地方复用，所以我们不需要给它们命名。\",\"这种情况下，我们通常会使用以下语法：\",\"<blockquote>const myFunc = function() {<br>&nbsp;&nbsp;const myVar = \\\"value\\\";<br>&nbsp;&nbsp;return myVar;<br>}</blockquote>\",\"ES6 提供了其他写匿名函数的方式的语法糖。你可以使用箭头函数：\",\"<blockquote>const myFunc = () => {<br>&nbsp;&nbsp;const myVar = \\\"value\\\";<br>&nbsp;&nbsp;return myVar;<br>}</blockquote>\",\"当不需要函数体，只返回一个值的时候，箭头函数允许你省略<code>return</code>关键字和外面的大括号。这样就可以将一个简单的函数简化成一个单行语句。\",\"<blockquote>const myFunc= () => \\\"value\\\"</blockquote>\",\"这段代码仍然会返回<code>value</code>。\",\"<hr>\",\"使用箭头函数的语法重写<code>magic</code>函数，使其返回一个新的<code>Date()</code>。同时不要用<code>var</code>关键字来定义任何变量。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"替换掉<code>var</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/var/g), '替换掉<code>var</code>关键字。');\"},{\"text\":\"<code>magic</code>应该为一个常量 (使用<code>const</code>)。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/const\\\\s+magic/g), '<code>magic</code>应该为一个常量 (使用<code>const</code>)。');\"},{\"text\":\"<code>magic</code>是一个<code>function</code>。\",\"testString\":\"assert(typeof magic === 'function', '<code>magic</code>是一个<code>function</code>。');\"},{\"text\":\"<code>magic()</code>返回正确的日期。\",\"testString\":\"assert(magic().getDate() == new Date().getDate(), '<code>magic()</code>返回正确的日期。');\"},{\"text\":\"不要使用<code>function</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/function/g), '不要使用<code>function</code>关键字。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"var magic = function() {\\n  \\\"use strict\\\";\\n  return new Date();\\n};\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/write-arrow-functions-with-parameters\",\"id\":\"587d7b87367417b2b2512b43\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-es-6-use-arrow-functions-to-write-concise-anonymous-functions-b86401095aade292c477.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Arrow Functions to Write Concise Anonymous Functions\",\"description\":[\"在 JavaScript 里，我们会经常遇到不需要给函数命名的情况，尤其是在需要将一个函数作为参数传给另外一个函数的时候。这时，我们会创建匿名函数。因为这些函数不会在其他地方复用，所以我们不需要给它们命名。\",\"这种情况下，我们通常会使用以下语法：\",\"<blockquote>const myFunc = function() {<br>&nbsp;&nbsp;const myVar = \\\"value\\\";<br>&nbsp;&nbsp;return myVar;<br>}</blockquote>\",\"ES6 提供了其他写匿名函数的方式的语法糖。你可以使用箭头函数：\",\"<blockquote>const myFunc = () => {<br>&nbsp;&nbsp;const myVar = \\\"value\\\";<br>&nbsp;&nbsp;return myVar;<br>}</blockquote>\",\"当不需要函数体，只返回一个值的时候，箭头函数允许你省略<code>return</code>关键字和外面的大括号。这样就可以将一个简单的函数简化成一个单行语句。\",\"<blockquote>const myFunc= () => \\\"value\\\"</blockquote>\",\"这段代码仍然会返回<code>value</code>。\",\"<hr>\",\"使用箭头函数的语法重写<code>magic</code>函数，使其返回一个新的<code>Date()</code>。同时不要用<code>var</code>关键字来定义任何变量。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"替换掉<code>var</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/var/g), '替换掉<code>var</code>关键字。');\"},{\"text\":\"<code>magic</code>应该为一个常量 (使用<code>const</code>)。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/const\\\\s+magic/g), '<code>magic</code>应该为一个常量 (使用<code>const</code>)。');\"},{\"text\":\"<code>magic</code>是一个<code>function</code>。\",\"testString\":\"assert(typeof magic === 'function', '<code>magic</code>是一个<code>function</code>。');\"},{\"text\":\"<code>magic()</code>返回正确的日期。\",\"testString\":\"assert(magic().getDate() == new Date().getDate(), '<code>magic()</code>返回正确的日期。');\"},{\"text\":\"不要使用<code>function</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/function/g), '不要使用<code>function</code>关键字。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"var magic = function() {\\n  \\\"use strict\\\";\\n  return new Date();\\n};\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/write-arrow-functions-with-parameters\",\"id\":\"587d7b87367417b2b2512b43\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-es-6-use-arrow-functions-to-write-concise-anonymous-functions.json\n// module id = 3884\n// module chunks = 215049902291814"],"sourceRoot":""}