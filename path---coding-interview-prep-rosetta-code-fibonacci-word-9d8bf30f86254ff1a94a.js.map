{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-fibonacci-word-9d8bf30f86254ff1a94a.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-fibonacci-word.json"],"names":["webpackJsonp","3389","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iBAAAC,aAAA,inBAAoR,iQAAAC,cAAA,EAAAC,QAAoqBC,KAAA,qDAAAC,UAAA,eAAAC,QAAiGC,KAAA,sCAAAC,WAAA,kFAA4ID,KAAA,kDAAAC,WAAA,yFAA+JD,KAAA,8EAAAC,WAAA,qHAAsNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,6CAAgGC,KAAA,GAAAC,KAAA,uSAAyTC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,+CAAAC,GAAA,4BAAgJrB,KAAA","file":"path---coding-interview-prep-rosetta-code-fibonacci-word-9d8bf30f86254ff1a94a.js","sourcesContent":["webpackJsonp([71238377352912],{\n\n/***/ 3389:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Fibonacci word\",\"description\":[\"<p>Write a function to return the Fibonacci Words upto N. N will be provided as a parameter to the function. The function should return an array of objects. The objects should be of the form : { N: 1, Length: 1, Entropy: 0, Word: '1' }. More details are given below : </p><p>The  Fibonacci Word  may be created in a manner analogous to the  Fibonacci Sequence   <a href=\\\"http://hal.archives-ouvertes.fr/docs/00/36/79/72/PDF/The_Fibonacci_word_fractal.pdf\\\" title=\\\"link: http://hal.archives-ouvertes.fr/docs/00/36/79/72/PDF/The_Fibonacci_word_fractal.pdf\\\">as described here</a>:</p><p>Define  F_Word<sub>1</sub>  as  1</p>\",\"<p>Define  F_Word<sub>2</sub>  as  0</p>\",\"<p>Form   F_Word<sub>3</sub>  as  F_Word<sub>2</sub>   concatenated with  F_Word<sub>1</sub>   i.e.:  01</p>\",\"<p>Form   F_Word<sub>n</sub>  as  F_Word<sub>n-1</sub>  concatenated with  F_word<sub>n-2</sub></p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/fibonacci-word\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>fibWord</code> is a function.\",\"testString\":\"assert(typeof fibWord === 'function', '<code>fibWord</code> is a function.');\"},{\"text\":\"<code>fibWord(5)</code> should return an array.\",\"testString\":\"assert(Array.isArray(fibWord(5)),'<code>fibWord(5)</code> should return an array.');\"},{\"text\":\"<code>fibWord(5)</code> should return <code>'+JSON.stringify(ans)+'</code>.\",\"testString\":\"assert.deepEqual(fibWord(5),ans,'<code>fibWord(5)</code> should return <code>'+JSON.stringify(ans)+'</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function fibWord (n) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"let ans=[ { N: 1, Length: 1, Entropy: 0, Word: '1' },\\n\\n  { N: 2, Length: 1, Entropy: 0, Word: '0' },\\n\\n  { N: 3, Length: 2, Entropy: 1, Word: '01' },\\n\\n  { N: 4, Length: 3, Entropy: 0.9182958340544896, Word: '010' },\\n\\n  { N: 5, Length: 5, Entropy: 0.9709505944546688, Word: '01001' }];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/fractran\",\"id\":\"5992e222d397f00d21122931\"},\"slug\":\"/coding-interview-prep/rosetta-code/fibonacci-word\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-fibonacci-word-9d8bf30f86254ff1a94a.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Fibonacci word\",\"description\":[\"<p>Write a function to return the Fibonacci Words upto N. N will be provided as a parameter to the function. The function should return an array of objects. The objects should be of the form : { N: 1, Length: 1, Entropy: 0, Word: '1' }. More details are given below : </p><p>The  Fibonacci Word  may be created in a manner analogous to the  Fibonacci Sequence   <a href=\\\"http://hal.archives-ouvertes.fr/docs/00/36/79/72/PDF/The_Fibonacci_word_fractal.pdf\\\" title=\\\"link: http://hal.archives-ouvertes.fr/docs/00/36/79/72/PDF/The_Fibonacci_word_fractal.pdf\\\">as described here</a>:</p><p>Define  F_Word<sub>1</sub>  as  1</p>\",\"<p>Define  F_Word<sub>2</sub>  as  0</p>\",\"<p>Form   F_Word<sub>3</sub>  as  F_Word<sub>2</sub>   concatenated with  F_Word<sub>1</sub>   i.e.:  01</p>\",\"<p>Form   F_Word<sub>n</sub>  as  F_Word<sub>n-1</sub>  concatenated with  F_word<sub>n-2</sub></p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/fibonacci-word\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>fibWord</code> is a function.\",\"testString\":\"assert(typeof fibWord === 'function', '<code>fibWord</code> is a function.');\"},{\"text\":\"<code>fibWord(5)</code> should return an array.\",\"testString\":\"assert(Array.isArray(fibWord(5)),'<code>fibWord(5)</code> should return an array.');\"},{\"text\":\"<code>fibWord(5)</code> should return <code>'+JSON.stringify(ans)+'</code>.\",\"testString\":\"assert.deepEqual(fibWord(5),ans,'<code>fibWord(5)</code> should return <code>'+JSON.stringify(ans)+'</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function fibWord (n) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"let ans=[ { N: 1, Length: 1, Entropy: 0, Word: '1' },\\n\\n  { N: 2, Length: 1, Entropy: 0, Word: '0' },\\n\\n  { N: 3, Length: 2, Entropy: 1, Word: '01' },\\n\\n  { N: 4, Length: 3, Entropy: 0.9182958340544896, Word: '010' },\\n\\n  { N: 5, Length: 5, Entropy: 0.9709505944546688, Word: '01001' }];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/fractran\",\"id\":\"5992e222d397f00d21122931\"},\"slug\":\"/coding-interview-prep/rosetta-code/fibonacci-word\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-fibonacci-word.json\n// module id = 3389\n// module chunks = 71238377352912"],"sourceRoot":""}