{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-testing-objects-for-properties-5abaeb48988374069c24.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-testing-objects-for-properties.json"],"names":["webpackJsonp","3841","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iCAAAC,aAAA,qVAA6X,qIAAAC,cAAA,EAAAC,QAA2LC,KAAA,6FAAAC,UAAA,mBAAAC,QAA6IC,KAAA,wDAAAC,WAAA,qGAA2LD,KAAA,yDAAAC,WAAA,uGAA8LD,KAAA,8DAAAC,WAAA,iHAA4MC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,iNAA8QC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,2FAAAC,GAAA,4BAA4LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-testing-objects-for-properties-5abaeb48988374069c24.js","sourcesContent":["webpackJsonp([275501867279415],{\n\n/***/ 3841:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Testing Objects for Properties\",\"description\":[\"有时检查一个对象属性是否存在是非常有用的，我们可以用<code>.hasOwnProperty(propname)</code>方法来检查对象是否有该属性。如果有返回<code>true</code>，反之返回<code>false</code>。\",\"<strong>示例</strong>\",\"<blockquote>var myObj = {<br>&nbsp;&nbsp;top: \\\"hat\\\",<br>&nbsp;&nbsp;bottom: \\\"pants\\\"<br>};<br>myObj.hasOwnProperty(\\\"top\\\");    // true<br>myObj.hasOwnProperty(\\\"middle\\\"); // false</blockquote>\",\"<hr>\",\"修改函数<code>checkObj</code>检查<code>myObj</code>是否有<code>checkProp</code>属性，如果属性存在，返回属性对应的值，如果不存在，返回<code>\\\"Not Found\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>checkObj(\\\"gift\\\")</code>应该返回<code>\\\"pony\\\"</code>.\",\"testString\":\"assert(checkObj(\\\"gift\\\") === \\\"pony\\\", '<code>checkObj(\\\"gift\\\")</code>应该返回 <code>\\\"pony\\\"</code>.');\"},{\"text\":\"<code>checkObj(\\\"pet\\\")</code>应该返回<code>\\\"kitten\\\"</code>.\",\"testString\":\"assert(checkObj(\\\"pet\\\") === \\\"kitten\\\", '<code>checkObj(\\\"pet\\\")</code>应该返回 <code>\\\"kitten\\\"</code>.');\"},{\"text\":\"<code>checkObj(\\\"house\\\")</code>应该返回<code>\\\"Not Found\\\"</code>.\",\"testString\":\"assert(checkObj(\\\"house\\\") === \\\"Not Found\\\", '<code>checkObj(\\\"house\\\")</code>应该返回<code>\\\"Not Found\\\"</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nvar myObj = {\\n  gift: \\\"pony\\\",\\n  pet: \\\"kitten\\\",\\n  bed: \\\"sleigh\\\"\\n};\\n\\nfunction checkObj(checkProp) {\\n  // 请把你的代码写在这条注释以下\\n  \\n  return \\\"Change Me!\\\";\\n}\\n\\n// 你可以修改这一行来测试你的代码\\ncheckObj(\\\"gift\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/manipulating-complex-objects\",\"id\":\"567af2437cbaa8c51670a16c\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-testing-objects-for-properties-5abaeb48988374069c24.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Testing Objects for Properties\",\"description\":[\"有时检查一个对象属性是否存在是非常有用的，我们可以用<code>.hasOwnProperty(propname)</code>方法来检查对象是否有该属性。如果有返回<code>true</code>，反之返回<code>false</code>。\",\"<strong>示例</strong>\",\"<blockquote>var myObj = {<br>&nbsp;&nbsp;top: \\\"hat\\\",<br>&nbsp;&nbsp;bottom: \\\"pants\\\"<br>};<br>myObj.hasOwnProperty(\\\"top\\\");    // true<br>myObj.hasOwnProperty(\\\"middle\\\"); // false</blockquote>\",\"<hr>\",\"修改函数<code>checkObj</code>检查<code>myObj</code>是否有<code>checkProp</code>属性，如果属性存在，返回属性对应的值，如果不存在，返回<code>\\\"Not Found\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>checkObj(\\\"gift\\\")</code>应该返回<code>\\\"pony\\\"</code>.\",\"testString\":\"assert(checkObj(\\\"gift\\\") === \\\"pony\\\", '<code>checkObj(\\\"gift\\\")</code>应该返回 <code>\\\"pony\\\"</code>.');\"},{\"text\":\"<code>checkObj(\\\"pet\\\")</code>应该返回<code>\\\"kitten\\\"</code>.\",\"testString\":\"assert(checkObj(\\\"pet\\\") === \\\"kitten\\\", '<code>checkObj(\\\"pet\\\")</code>应该返回 <code>\\\"kitten\\\"</code>.');\"},{\"text\":\"<code>checkObj(\\\"house\\\")</code>应该返回<code>\\\"Not Found\\\"</code>.\",\"testString\":\"assert(checkObj(\\\"house\\\") === \\\"Not Found\\\", '<code>checkObj(\\\"house\\\")</code>应该返回<code>\\\"Not Found\\\"</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nvar myObj = {\\n  gift: \\\"pony\\\",\\n  pet: \\\"kitten\\\",\\n  bed: \\\"sleigh\\\"\\n};\\n\\nfunction checkObj(checkProp) {\\n  // 请把你的代码写在这条注释以下\\n  \\n  return \\\"Change Me!\\\";\\n}\\n\\n// 你可以修改这一行来测试你的代码\\ncheckObj(\\\"gift\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/manipulating-complex-objects\",\"id\":\"567af2437cbaa8c51670a16c\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-testing-objects-for-properties.json\n// module id = 3841\n// module chunks = 275501867279415"],"sourceRoot":""}