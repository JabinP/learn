webpackJsonp([0x712dfd697351],{3978:function(e,o){e.exports={data:{challengeNode:{title:"Verify an Object's Constructor with instanceof",description:["凡是通过构造函数创建出的新对象，都叫做这个构造函数的<code>实例</code>。JavaScript 提供了一种很简便的方法来验证这个事实，那就是通过<code>instanceof</code>操作符。<code>instanceof</code>允许你将对象与构造函数之间进行比较，根据对象是否由这个构造函数创建的返回<code>true</code>或者<code>false</code>。以下是一个示例：",'<blockquote>let Bird = function(name, color) {<br>&nbsp;&nbsp;this.name = name;<br>&nbsp;&nbsp;this.color = color;<br>&nbsp;&nbsp;this.numLegs = 2;<br>}<br><br>let crow = new Bird("Alexis", "black");<br><br>crow instanceof Bird; // => true</blockquote>',"如果一个对象不是使用构造函数创建的，那么<code>instanceof</code>将会验证这个对象不是构造函数的实例：",'<blockquote>let canary = {<br>&nbsp;&nbsp;name: "Mildred",<br>&nbsp;&nbsp;color: "Yellow",<br>&nbsp;&nbsp;numLegs: 2<br>};<br><br>canary instanceof Bird; // => false</blockquote>',"<hr>","给<code>House</code>构造函数创建一个新实例，取名为<code>myHouse</code>并且传递一个数字给<code>bedrooms<code>参数。然后使用<code>instanceof</code>操作符验证这个对象是否为<code>House</code>的实例。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/object-oriented-programming/verify-an-objects-constructor-with-instanceof",blockName:"Object Oriented Programming",tests:[{text:"<code>myHouse</code>应该有一个<code>numBedrooms</code>属性被赋值为一个数字。",testString:"assert(typeof myHouse.numBedrooms === 'number', '<code>myHouse</code>应该有一个<code>numBedrooms</code>属性被赋值为一个数字。');"},{text:"请务必使用<code>instanceof</code>操作符验证<code>myHouse</code>这个对象是<code>House</code>构造函数的一个实例。",testString:"assert(/myHouse\\s*instanceof\\s*House/.test(code), '请务必使用<code>instanceof</code>操作符验证<code>myHouse</code>这个对象是<code>House</code>构造函数的一个实例。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"/* jshint expr: true */\n\nfunction House(numBedrooms) {\n  this.numBedrooms = numBedrooms;\n}\n\n// 请把你的代码写在这条注释以下\n\n\n",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/object-oriented-programming/understand-own-properties",id:"587d7dae367417b2b2512b7a"},slug:"/javascript-algorithms-and-data-structures/object-oriented-programming/verify-an-objects-constructor-with-instanceof"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-object-oriented-programming-verify-an-objects-constructor-with-instanceof-46224e06f8bd14936cb9.js.map