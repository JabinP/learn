{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-418-factorisation-triples-c5d1d5d7a0cc1f8bd444.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-418-factorisation-triples.json"],"names":["webpackJsonp","3215","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qCAAAC,aAAA,4WAAAC,cAAA,EAAAC,QAAocC,KAAA,yEAAAC,UAAA,gBAAAC,QAAsHC,KAAA,6DAAAC,WAAA,wHAAwMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yEAAAC,GAAA,4BAA0KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-418-factorisation-triples-c5d1d5d7a0cc1f8bd444.js","sourcesContent":["webpackJsonp([266542559375888],{\n\n/***/ 3215:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 418: Factorisation triples\",\"description\":[\"Let n be a positive integer. An integer triple (a, b, c) is called a factorisation triple of n if: 1 ≤ a ≤ b ≤ c\",\" a·b·c = n.\",\"\",\"Define f(n) to be a + b + c for the factorisation triple (a, b, c) of n which minimises c / a. One can show that this triple is unique.\",\"\",\"\",\"For example, f(165) = 19, f(100100) = 142 and f(20!) = 4034872.\",\"\",\"\",\"Find f(43!).\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-418-factorisation-triples\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler418()</code> should return 1177163565297340400.\",\"testString\":\"assert.strictEqual(euler418(), 1177163565297340400, '<code>euler418()</code> should return 1177163565297340400.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler418() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler418();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-419-look-and-say-sequence\",\"id\":\"5900f50f1000cf542c510021\"},\"slug\":\"/coding-interview-prep/project-euler/problem-418-factorisation-triples\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-418-factorisation-triples-c5d1d5d7a0cc1f8bd444.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 418: Factorisation triples\",\"description\":[\"Let n be a positive integer. An integer triple (a, b, c) is called a factorisation triple of n if: 1 ≤ a ≤ b ≤ c\",\" a·b·c = n.\",\"\",\"Define f(n) to be a + b + c for the factorisation triple (a, b, c) of n which minimises c / a. One can show that this triple is unique.\",\"\",\"\",\"For example, f(165) = 19, f(100100) = 142 and f(20!) = 4034872.\",\"\",\"\",\"Find f(43!).\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-418-factorisation-triples\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler418()</code> should return 1177163565297340400.\",\"testString\":\"assert.strictEqual(euler418(), 1177163565297340400, '<code>euler418()</code> should return 1177163565297340400.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler418() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler418();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-419-look-and-say-sequence\",\"id\":\"5900f50f1000cf542c510021\"},\"slug\":\"/coding-interview-prep/project-euler/problem-418-factorisation-triples\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-418-factorisation-triples.json\n// module id = 3215\n// module chunks = 266542559375888"],"sourceRoot":""}