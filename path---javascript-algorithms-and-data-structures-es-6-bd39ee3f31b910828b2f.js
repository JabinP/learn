webpackJsonp([45109342032360],{3900:function(t,e){t.exports={data:{markdownRemark:{frontmatter:{block:"ES6"},html:"<h2>Introduction to the ES6 Challenges</h2>\n<p>ECMAScript 是 JavaScript 的标准化版本，它旨在统一语言语言的规范和功能。所有主流的浏览器或者 Javascript 的运行环境都支持这个规范，因此 <i>ECMAScript</i> 和 <i>JavaScript</i> 的术语是通用的。<br><br>在2009年以前，freeCodeCamp 的大多数挑战都是遵循的 ECMAScript 5 (ES5) 的规范。但是 JavaScript 是一门不断发展的语言。随着不断的功能添加及修订，ECMAScript 发布了新的版本供开发者使用。<br><br>在2015年，ECMAScript 发布了被称为 ECMAScript 6 (ES6) 的最新版本。在这个挑战里，我们会学习新版本添加的许多强大的功能，包括：<br><br><ul><li>箭头函数</li><li>类</li><li>模块</li><li>Promises 对象</li><li>异步生成器 Generators</li><li><code>let</code>以及<code>const</code>语法</li></ul><br><br><strong>请注意</strong><br>不是所有的浏览器都支持 ES6 的功能，在浏览器支持 ES6 代码之前，如果你想要在你的项目里使用 ES6 规范，你可能需要一些转译工具将 ES6 代码转换成 ES5 的代码。</p>"},allChallengeNode:{edges:[{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/explore-differences-between-the-var-and-let-keywords"},title:"Explore Differences Between the var and let Keywords"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/compare-scopes-of-the-var-and-let-keywords"},title:"Compare Scopes of the var and let Keywords"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/declare-a-read-only-variable-with-the-const-keyword"},title:"Declare a Read-Only Variable with the const Keyword"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/mutate-an-array-declared-with-const"},title:"Mutate an Array Declared with const"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/prevent-object-mutation"},title:"Prevent Object Mutation"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions"},title:"Use Arrow Functions to Write Concise Anonymous Functions"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/write-arrow-functions-with-parameters"},title:"Write Arrow Functions with Parameters"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/write-higher-order-arrow-functions"},title:"Write Higher Order Arrow Functions"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/set-default-parameters-for-your-functions"},title:"Set Default Parameters for Your Functions"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-the-rest-operator-with-function-parameters"},title:"Use the Rest Operator with Function Parameters"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-the-spread-operator-to-evaluate-arrays-in-place"},title:"Use the Spread Operator to Evaluate Arrays In-Place"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-objects"},title:"Use Destructuring Assignment to Assign Variables from Objects"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-nested-objects"},title:"Use Destructuring Assignment to Assign Variables from Nested Objects"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-arrays"},title:"Use Destructuring Assignment to Assign Variables from Arrays"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements"},title:"Use Destructuring Assignment with the Rest Operator to Reassign Array Elements"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-pass-an-object-as-a-functions-parameters"},title:"Use Destructuring Assignment to Pass an Object as a Function's Parameters"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/create-strings-using-template-literals"},title:"Create Strings using Template Literals"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/write-concise-object-literal-declarations-using-simple-fields"},title:"Write Concise Object Literal Declarations Using Simple Fields"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/write-concise-declarative-functions-with-es6"},title:"Write Concise Declarative Functions with ES6"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-class-syntax-to-define-a-constructor-function"},title:"Use class Syntax to Define a Constructor Function"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-getters-and-setters-to-control-access-to-an-object"},title:"Use getters and setters to Control Access to an Object"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/understand-the-differences-between-import-and-require"},title:"Understand the Differences Between import and require"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-export-to-reuse-a-code-block"},title:"Use export to Reuse a Code Block"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/use--to-import-everything-from-a-file"},title:"Use * to Import Everything from a File"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/create-an-export-fallback-with-export-default"},title:"Create an Export Fallback with export default"}},{node:{fields:{slug:"/javascript-algorithms-and-data-structures/es6/import-a-default-export"},title:"Import a Default Export"}}]}},pathContext:{block:"es6",slug:"/javascript-algorithms-and-data-structures/es6"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-es-6-bd39ee3f31b910828b2f.js.map