{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-functional-programming-2fe3ea7a0675a5d28027.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-functional-programming.json"],"names":["webpackJsonp","3924","module","exports","data","markdownRemark","frontmatter","block","html","allChallengeNode","edges","node","fields","slug","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,aAAeC,MAAA,0BAAiCC,KAAA,8WAAqXC,kBAAqBC,QAAUC,MAAQC,QAAUC,KAAA,wGAA8GC,MAAA,wCAAiDH,MAAQC,QAAUC,KAAA,mHAAyHC,MAAA,mDAA4DH,MAAQC,QAAUC,KAAA,qHAA2HC,MAAA,qDAA8DH,MAAQC,QAAUC,KAAA,mIAAyIC,MAAA,mEAA4EH,MAAQC,QAAUC,KAAA,+HAAqIC,MAAA,+DAAwEH,MAAQC,QAAUC,KAAA,gHAAsHC,MAAA,gDAAyDH,MAAQC,QAAUC,KAAA,sHAA4HC,MAAA,sDAA+DH,MAAQC,QAAUC,KAAA,kGAAwGC,MAAA,kCAA2CH,MAAQC,QAAUC,KAAA,yHAA+HC,MAAA,yDAAkEH,MAAQC,QAAUC,KAAA,gHAAsHC,MAAA,gDAAyDH,MAAQC,QAAUC,KAAA,oHAA0HC,MAAA,oDAA6DH,MAAQC,QAAUC,KAAA,iIAAuIC,MAAA,iEAA0EH,MAAQC,QAAUC,KAAA,gHAAsHC,MAAA,gDAAyDH,MAAQC,QAAUC,KAAA,sIAA4IC,MAAA,sEAA+EH,MAAQC,QAAUC,KAAA,2GAAiHC,MAAA,2CAAoDH,MAAQC,QAAUC,KAAA,wHAA8HC,MAAA,wDAAiEH,MAAQC,QAAUC,KAAA,+HAAqIC,MAAA,+DAAwEH,MAAQC,QAAUC,KAAA,yHAA+HC,MAAA,yDAAkEH,MAAQC,QAAUC,KAAA,0HAAgIC,MAAA,0DAAmEH,MAAQC,QAAUC,KAAA,kIAAwIC,MAAA,kEAA2EH,MAAQC,QAAUC,KAAA,mJAAyJC,MAAA,mFAA4FH,MAAQC,QAAUC,KAAA,gJAAsJC,MAAA,gFAAyFH,MAAQC,QAAUC,KAAA,sHAA4HC,MAAA,wDAAgEC,aAAgBR,MAAA,yBAAAM,KAAA","file":"path---javascript-algorithms-and-data-structures-functional-programming-2fe3ea7a0675a5d28027.js","sourcesContent":["webpackJsonp([140770280412514],{\n\n/***/ 3924:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"frontmatter\":{\"block\":\"Functional Programming\"},\"html\":\"<h2>Introduction to the Functional Programming Challenges</h2>\\n<p>函数式编程是一种基于函数计算的软件开发方法。像数学一样，函数在编程中通过输入产生输出。你可以通过多种方式组合基本功能来构建越来越复杂的程序。</p>\\n<p>函数式编程遵循几个核心原则：</p>\\n<ul>\\n<li>\\n<p>独立于程序状态或全局变量，只依赖于传递给它们的参数进行计算</p>\\n</li>\\n<li>\\n<p>限制更改程序状态，避免更改保存数据的全局对象</p>\\n</li>\\n<li>\\n<p>对程序的副作用尽量小</p>\\n</li>\\n</ul>\\n<p>函数式编程式将程序分成小的、可测试的部分，本节介绍 JavaScript 中函数式编程的基本原则。</p>\"},\"allChallengeNode\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/learn-about-functional-programming\"},\"title\":\"Learn About Functional Programming\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/understand-functional-programming-terminology\"},\"title\":\"Understand Functional Programming Terminology\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/understand-the-hazards-of-using-imperative-code\"},\"title\":\"Understand the Hazards of Using Imperative Code\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/avoid-mutations-and-side-effects-using-functional-programming\"},\"title\":\"Avoid Mutations and Side Effects Using Functional Programming\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/pass-arguments-to-avoid-external-dependence-in-a-function\"},\"title\":\"Pass Arguments to Avoid External Dependence in a Function\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/refactor-global-variables-out-of-functions\"},\"title\":\"Refactor Global Variables Out of Functions\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-map-method-to-extract-data-from-an-array\"},\"title\":\"Use the map Method to Extract Data from an Array\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/implement-map-on-a-prototype\"},\"title\":\"Implement map on a Prototype\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-filter-method-to-extract-data-from-an-array\"},\"title\":\"Use the filter Method to Extract Data from an Array\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/implement-the-filter-method-on-a-prototype\"},\"title\":\"Implement the filter Method on a Prototype\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-part-of-an-array-using-the-slice-method\"},\"title\":\"Return Part of an Array Using the slice Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/remove-elements-from-an-array-using-slice-instead-of-splice\"},\"title\":\"Remove Elements from an Array Using slice Instead of splice\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-two-arrays-using-the-concat-method\"},\"title\":\"Combine Two Arrays Using the concat Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/add-elements-to-the-end-of-an-array-using-concat-instead-of-push\"},\"title\":\"Add Elements to the End of an Array Using concat Instead of push\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-reduce-method-to-analyze-data\"},\"title\":\"Use the reduce Method to Analyze Data\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/sort-an-array-alphabetically-using-the-sort-method\"},\"title\":\"Sort an Array Alphabetically using the sort Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-a-sorted-array-without-changing-the-original-array\"},\"title\":\"Return a Sorted Array Without Changing the Original Array\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/split-a-string-into-an-array-using-the-split-method\"},\"title\":\"Split a String into an Array Using the split Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-an-array-into-a-string-using-the-join-method\"},\"title\":\"Combine an Array into a String Using the join Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\"},\"title\":\"Apply Functional Programming to Convert Strings to URL Slugs\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-every-method-to-check-that-every-element-in-an-array-meets-a-criteria\"},\"title\":\"Use the every Method to Check that Every Element in an Array Meets a Criteria\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-some-method-to-check-that-any-elements-in-an-array-meet-a-criteria\"},\"title\":\"Use the some Method to Check that Any Elements in an Array Meet a Criteria\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/introduction-to-currying-and-partial-application\"},\"title\":\"Introduction to Currying and Partial Application\"}}]}},\"pathContext\":{\"block\":\"functional-programming\",\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-functional-programming-2fe3ea7a0675a5d28027.js","module.exports = {\"data\":{\"markdownRemark\":{\"frontmatter\":{\"block\":\"Functional Programming\"},\"html\":\"<h2>Introduction to the Functional Programming Challenges</h2>\\n<p>函数式编程是一种基于函数计算的软件开发方法。像数学一样，函数在编程中通过输入产生输出。你可以通过多种方式组合基本功能来构建越来越复杂的程序。</p>\\n<p>函数式编程遵循几个核心原则：</p>\\n<ul>\\n<li>\\n<p>独立于程序状态或全局变量，只依赖于传递给它们的参数进行计算</p>\\n</li>\\n<li>\\n<p>限制更改程序状态，避免更改保存数据的全局对象</p>\\n</li>\\n<li>\\n<p>对程序的副作用尽量小</p>\\n</li>\\n</ul>\\n<p>函数式编程式将程序分成小的、可测试的部分，本节介绍 JavaScript 中函数式编程的基本原则。</p>\"},\"allChallengeNode\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/learn-about-functional-programming\"},\"title\":\"Learn About Functional Programming\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/understand-functional-programming-terminology\"},\"title\":\"Understand Functional Programming Terminology\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/understand-the-hazards-of-using-imperative-code\"},\"title\":\"Understand the Hazards of Using Imperative Code\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/avoid-mutations-and-side-effects-using-functional-programming\"},\"title\":\"Avoid Mutations and Side Effects Using Functional Programming\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/pass-arguments-to-avoid-external-dependence-in-a-function\"},\"title\":\"Pass Arguments to Avoid External Dependence in a Function\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/refactor-global-variables-out-of-functions\"},\"title\":\"Refactor Global Variables Out of Functions\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-map-method-to-extract-data-from-an-array\"},\"title\":\"Use the map Method to Extract Data from an Array\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/implement-map-on-a-prototype\"},\"title\":\"Implement map on a Prototype\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-filter-method-to-extract-data-from-an-array\"},\"title\":\"Use the filter Method to Extract Data from an Array\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/implement-the-filter-method-on-a-prototype\"},\"title\":\"Implement the filter Method on a Prototype\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-part-of-an-array-using-the-slice-method\"},\"title\":\"Return Part of an Array Using the slice Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/remove-elements-from-an-array-using-slice-instead-of-splice\"},\"title\":\"Remove Elements from an Array Using slice Instead of splice\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-two-arrays-using-the-concat-method\"},\"title\":\"Combine Two Arrays Using the concat Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/add-elements-to-the-end-of-an-array-using-concat-instead-of-push\"},\"title\":\"Add Elements to the End of an Array Using concat Instead of push\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-reduce-method-to-analyze-data\"},\"title\":\"Use the reduce Method to Analyze Data\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/sort-an-array-alphabetically-using-the-sort-method\"},\"title\":\"Sort an Array Alphabetically using the sort Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-a-sorted-array-without-changing-the-original-array\"},\"title\":\"Return a Sorted Array Without Changing the Original Array\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/split-a-string-into-an-array-using-the-split-method\"},\"title\":\"Split a String into an Array Using the split Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-an-array-into-a-string-using-the-join-method\"},\"title\":\"Combine an Array into a String Using the join Method\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\"},\"title\":\"Apply Functional Programming to Convert Strings to URL Slugs\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-every-method-to-check-that-every-element-in-an-array-meets-a-criteria\"},\"title\":\"Use the every Method to Check that Every Element in an Array Meets a Criteria\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-some-method-to-check-that-any-elements-in-an-array-meet-a-criteria\"},\"title\":\"Use the some Method to Check that Any Elements in an Array Meet a Criteria\"}},{\"node\":{\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/introduction-to-currying-and-partial-application\"},\"title\":\"Introduction to Currying and Partial Application\"}}]}},\"pathContext\":{\"block\":\"functional-programming\",\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-functional-programming.json\n// module id = 3924\n// module chunks = 140770280412514"],"sourceRoot":""}