{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-regular-expressions-specify-only-the-lower-number-of-matches-d0a0c6a7eb7922d852ac.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-specify-only-the-lower-number-of-matches.json"],"names":["webpackJsonp","4008","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,2CAAAC,aAAA,+LAAuP,mQAA0P,yFAAAC,cAAA,EAAAC,QAAsJC,KAAA,0GAAAC,UAAA,sBAAAC,QAA6JC,KAAA,kBAAAC,WAAA,yEAA+GD,KAAA,qCAAAC,WAAA,6EAA0ID,KAAA,sCAAAC,WAAA,+EAA6ID,KAAA,sCAAAC,WAAA,+EAA6ID,KAAA,uCAAAC,WAAA,iFAAgJD,KAAA,wCAAAC,WAAA,mFAAmJD,KAAA,6DAAAC,WAAA,yHAAiNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,+FAAoJC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,iGAAAC,GAAA,4BAAkMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-regular-expressions-specify-only-the-lower-number-of-matches-d0a0c6a7eb7922d852ac.js","sourcesContent":["webpackJsonp([4241824540263],{\n\n/***/ 4008:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Specify Only the Lower Number of Matches\",\"description\":[\"你可以使用带有花括号的<code>数量说明符</code>来指定匹配模式的上下限。但有时候你只想指定匹配模式的下限而不需要指定上限。\",\"为此，在第一个数字后面跟一个逗号即可。\",\"例如，要匹配至少出现<code>3</code>次字母<code>a</code>的字符串<code>\\\"hah\\\"</code>，你的正则表达式应该是<code>/ha{3,}h/</code>。\",\"<blockquote>let A4 = \\\"haaaah\\\";<br>let A2 = \\\"haah\\\";<br>let A100 = \\\"h\\\" + \\\"a\\\".repeat(100) + \\\"h\\\";<br>let multipleA = /ha{3,}h/;<br>multipleA.test(A4); // Returns true<br>multipleA.test(A2); // Returns false<br>multipleA.test(A100); // Returns true</blockquote>\",\"<hr>\",\"修改正则表达式<code>haRegex</code>，匹配包含四个或更多字母<code>z</code>的单词<code>\\\"Hazzah\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-only-the-lower-number-of-matches\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用花括号。\",\"testString\":\"assert(haRegex.source.match(/{.*?}/).length > 0, '你的正则表达式应该使用花括号。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Hazzah\\\"</code>。\",\"testString\":\"assert(!haRegex.test(\\\"Hazzah\\\"), '你的正则表达式不应该匹配<code>\\\"Hazzah\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Hazzzah\\\"</code>。\",\"testString\":\"assert(!haRegex.test(\\\"Hazzzah\\\"), '你的正则表达式不应该匹配<code>\\\"Hazzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Hazzzzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Hazzzzah\\\"), '你的正则表达式应该匹配<code>\\\"Hazzzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Hazzzzzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Hazzzzzah\\\"), '你的正则表达式应该匹配<code>\\\"Hazzzzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Hazzzzzzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Hazzzzzzah\\\"), '你的正则表达式应该匹配<code>\\\"Hazzzzzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配拥有 30 个字母<code>z</code>的<code>\\\"Hazzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Ha\\\" + \\\"z\\\".repeat(30) + \\\"ah\\\"), '你的正则表达式不应该匹配拥有 30 个字母<code>z</code>的<code>\\\"Hazzah\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let haStr = \\\"Hazzzzah\\\";\\nlet haRegex = /change/; // 修改这一行\\nlet result = haRegex.test(haStr);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches\",\"id\":\"587d7db9367417b2b2512ba6\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-only-the-lower-number-of-matches\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-regular-expressions-specify-only-the-lower-number-of-matches-d0a0c6a7eb7922d852ac.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Specify Only the Lower Number of Matches\",\"description\":[\"你可以使用带有花括号的<code>数量说明符</code>来指定匹配模式的上下限。但有时候你只想指定匹配模式的下限而不需要指定上限。\",\"为此，在第一个数字后面跟一个逗号即可。\",\"例如，要匹配至少出现<code>3</code>次字母<code>a</code>的字符串<code>\\\"hah\\\"</code>，你的正则表达式应该是<code>/ha{3,}h/</code>。\",\"<blockquote>let A4 = \\\"haaaah\\\";<br>let A2 = \\\"haah\\\";<br>let A100 = \\\"h\\\" + \\\"a\\\".repeat(100) + \\\"h\\\";<br>let multipleA = /ha{3,}h/;<br>multipleA.test(A4); // Returns true<br>multipleA.test(A2); // Returns false<br>multipleA.test(A100); // Returns true</blockquote>\",\"<hr>\",\"修改正则表达式<code>haRegex</code>，匹配包含四个或更多字母<code>z</code>的单词<code>\\\"Hazzah\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-only-the-lower-number-of-matches\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用花括号。\",\"testString\":\"assert(haRegex.source.match(/{.*?}/).length > 0, '你的正则表达式应该使用花括号。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Hazzah\\\"</code>。\",\"testString\":\"assert(!haRegex.test(\\\"Hazzah\\\"), '你的正则表达式不应该匹配<code>\\\"Hazzah\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Hazzzah\\\"</code>。\",\"testString\":\"assert(!haRegex.test(\\\"Hazzzah\\\"), '你的正则表达式不应该匹配<code>\\\"Hazzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Hazzzzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Hazzzzah\\\"), '你的正则表达式应该匹配<code>\\\"Hazzzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Hazzzzzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Hazzzzzah\\\"), '你的正则表达式应该匹配<code>\\\"Hazzzzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Hazzzzzzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Hazzzzzzah\\\"), '你的正则表达式应该匹配<code>\\\"Hazzzzzzah\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配拥有 30 个字母<code>z</code>的<code>\\\"Hazzah\\\"</code>。\",\"testString\":\"assert(haRegex.test(\\\"Ha\\\" + \\\"z\\\".repeat(30) + \\\"ah\\\"), '你的正则表达式不应该匹配拥有 30 个字母<code>z</code>的<code>\\\"Hazzah\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let haStr = \\\"Hazzzzah\\\";\\nlet haRegex = /change/; // 修改这一行\\nlet result = haRegex.test(haStr);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches\",\"id\":\"587d7db9367417b2b2512ba6\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-only-the-lower-number-of-matches\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-specify-only-the-lower-number-of-matches.json\n// module id = 4008\n// module chunks = 4241824540263"],"sourceRoot":""}