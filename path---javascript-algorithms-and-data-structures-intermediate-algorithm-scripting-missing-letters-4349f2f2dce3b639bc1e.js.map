{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-missing-letters-4349f2f2dce3b639bc1e.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-missing-letters.json"],"names":["webpackJsonp","3934","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,kBAAAC,aAAA,qNAAAC,cAAA,EAAAC,QAA0RC,KAAA,8FAAAC,UAAA,mCAAAC,QAA8JC,KAAA,8CAAAC,WAAA,qGAA2KD,KAAA,wDAAAC,WAAA,yHAAyMD,KAAA,+CAAAC,WAAA,uGAA8KD,KAAA,8CAAAC,WAAA,qGAA2KD,KAAA,sFAAAC,WAAA,+JAA0QC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,4EAAiIC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,2FAAAC,GAAA,4BAA4LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-missing-letters-4349f2f2dce3b639bc1e.js","sourcesContent":["webpackJsonp([39880921698961],{\n\n/***/ 3934:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Missing letters\",\"description\":[\"在这道题目中，我们需要写一个函数，找到传入的字符串里缺失的字母并返回它。\",\"判断缺失的依据是字母顺序，比如 abcdfg 中缺失了 e。而 abcdef 中就没有字母缺失，此时我们需要返回<code>undefined</code>。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/missing-letters\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>fearNotLetter(\\\"abce\\\")</code>应该返回 \\\"d\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('abce'), 'd', '<code>fearNotLetter(\\\"abce\\\")</code>应该返回 \\\"d\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"abcdefghjklmno\\\")</code>应该返回 \\\"i\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('abcdefghjklmno'), 'i', '<code>fearNotLetter(\\\"abcdefghjklmno\\\")</code>应该返回 \\\"i\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"stvwx\\\")</code>应该返回 \\\"u\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('stvwx'), 'u', '<code>fearNotLetter(\\\"stvwx\\\")</code>应该返回 \\\"u\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"bcdf\\\")</code>应该返回 \\\"e\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('bcdf'), 'e', '<code>fearNotLetter(\\\"bcdf\\\")</code>应该返回 \\\"e\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"abcdefghijklmnopqrstuvwxyz\\\")</code>应该返回<code>undefined</code>。\",\"testString\":\"assert.isUndefined(fearNotLetter('abcdefghijklmnopqrstuvwxyz'), '<code>fearNotLetter(\\\"abcdefghijklmnopqrstuvwxyz\\\")</code>应该返回<code>undefined</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function fearNotLetter(str) {\\n  return str;\\n}\\n\\nfearNotLetter(\\\"abce\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union\",\"id\":\"af7588ade1100bde429baf20\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/missing-letters\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-missing-letters-4349f2f2dce3b639bc1e.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Missing letters\",\"description\":[\"在这道题目中，我们需要写一个函数，找到传入的字符串里缺失的字母并返回它。\",\"判断缺失的依据是字母顺序，比如 abcdfg 中缺失了 e。而 abcdef 中就没有字母缺失，此时我们需要返回<code>undefined</code>。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/missing-letters\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>fearNotLetter(\\\"abce\\\")</code>应该返回 \\\"d\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('abce'), 'd', '<code>fearNotLetter(\\\"abce\\\")</code>应该返回 \\\"d\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"abcdefghjklmno\\\")</code>应该返回 \\\"i\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('abcdefghjklmno'), 'i', '<code>fearNotLetter(\\\"abcdefghjklmno\\\")</code>应该返回 \\\"i\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"stvwx\\\")</code>应该返回 \\\"u\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('stvwx'), 'u', '<code>fearNotLetter(\\\"stvwx\\\")</code>应该返回 \\\"u\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"bcdf\\\")</code>应该返回 \\\"e\\\"。\",\"testString\":\"assert.deepEqual(fearNotLetter('bcdf'), 'e', '<code>fearNotLetter(\\\"bcdf\\\")</code>应该返回 \\\"e\\\"。');\"},{\"text\":\"<code>fearNotLetter(\\\"abcdefghijklmnopqrstuvwxyz\\\")</code>应该返回<code>undefined</code>。\",\"testString\":\"assert.isUndefined(fearNotLetter('abcdefghijklmnopqrstuvwxyz'), '<code>fearNotLetter(\\\"abcdefghijklmnopqrstuvwxyz\\\")</code>应该返回<code>undefined</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function fearNotLetter(str) {\\n  return str;\\n}\\n\\nfearNotLetter(\\\"abce\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sorted-union\",\"id\":\"af7588ade1100bde429baf20\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/missing-letters\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-missing-letters.json\n// module id = 3934\n// module chunks = 39880921698961"],"sourceRoot":""}