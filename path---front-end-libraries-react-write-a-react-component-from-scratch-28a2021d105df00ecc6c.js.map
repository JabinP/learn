{"version":3,"sources":["webpack:///path---front-end-libraries-react-write-a-react-component-from-scratch-28a2021d105df00ecc6c.js","webpack:///./.cache/json/front-end-libraries-react-write-a-react-component-from-scratch.json"],"names":["webpackJsonp","3612","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","link","raw","src","files","indexhtml","indexjs","indexjsx","key","ext","name","contents","head","tail","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,uCAAAC,aAAA,4jBAAAC,cAAA,EAAAC,QAAspBC,KAAA,kEAAAC,UAAA,QAAAC,QAAuGC,KAAA,2CAAAC,WAAA,uKAAsOD,KAAA,4GAAAC,WAAA,+RAA+ZD,KAAA,qCAAAC,WAAA,sHAA8KC,WAAcC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGC,OAAWC,UAAA,KAAAC,QAAA,KAAAC,UAA4CC,IAAA,WAAAC,IAAA,MAAAC,KAAA,QAAAC,SAAA,mCAAAC,KAAA,GAAAC,KAAA,OAAiHC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,qFAAsGjB,WAAsBC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGe,kBAAA,4EAAAC,GAAA,4BAAkIxB,KAAA","file":"path---front-end-libraries-react-write-a-react-component-from-scratch-28a2021d105df00ecc6c.js","sourcesContent":["webpackJsonp([191669265798965],{\n\n/***/ 3612:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Write a React Component from Scratch\",\"description\":[\"现在你已经了解了 JSX 和 React 组件的基础知识，现在是时候自己编写一个组件了。React 组件是 React 应用程序的核心组成部分，因此熟练编写它们是非常重要的。记住，典型的 React 组件是 ES6<code>class</code>，它扩展了<code>React.Component</code>。它有一个返回 HTML（从 JSX 返回）或<code>null</code>的渲染方法，这是 React 组件的基本形式。一旦你深刻地理解了这一点，你就可以开始构建更复杂的 React 项目了。\",\"<hr>\",\"定义一个<code>MyComponent</code>类，它是<code>React.Component</code>的扩展。它的渲染方法应该返回一个<code>div</code>，其中包含一个<code>h1</code>标签，标签文本为：<code>My First React Component!</code>。请确保文本内容、大小写和标点符号正确，以及调用了组件的构造函数。\",\"使用<code>ReactDOM.render()</code>把该组件渲染到 DOM 中。有一个<code>id='challenge-node'</code>的<code>div</code>可供你使用。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/write-a-react-component-from-scratch\",\"blockName\":\"React\",\"tests\":[{\"text\":\"应该有一个名为<code>MyComponent</code>的React组件。\",\"testString\":\"getUserInput => assert(getUserInput('index').replace(/\\\\s/g, '').includes('classMyComponentextendsReact.Component{'), '应该有一个名为<code>MyComponent</code>的React组件。');\"},{\"text\":\"<code>MyComponent</code>应该包含一个<code>h1</code>标签，标签的文本为<code>My First React Component!</code>，区分大小写并有标点符号。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(MyComponent)); return mockedComponent.find('h1').text() === 'My First React Component!'; })(), '<code>MyComponent</code>应该包含一个<code>h1</code>标签，标签的文本为<code>My First React Component!</code>，区分大小写并有标点符号。');\"},{\"text\":\"<code>MyComponent</code>应该渲染到 DOM。\",\"testString\":\"assert(document.getElementById('challenge-node').childNodes.length === 1, '<code>MyComponent</code>应该渲染到 DOM。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"// change code below this line\\n\",\"head\":\"\",\"tail\":\"\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/pass-props-to-a-stateless-functional-component\",\"id\":\"5a24c314108439a4d4036168\"},\"slug\":\"/front-end-libraries/react/write-a-react-component-from-scratch\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---front-end-libraries-react-write-a-react-component-from-scratch-28a2021d105df00ecc6c.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Write a React Component from Scratch\",\"description\":[\"现在你已经了解了 JSX 和 React 组件的基础知识，现在是时候自己编写一个组件了。React 组件是 React 应用程序的核心组成部分，因此熟练编写它们是非常重要的。记住，典型的 React 组件是 ES6<code>class</code>，它扩展了<code>React.Component</code>。它有一个返回 HTML（从 JSX 返回）或<code>null</code>的渲染方法，这是 React 组件的基本形式。一旦你深刻地理解了这一点，你就可以开始构建更复杂的 React 项目了。\",\"<hr>\",\"定义一个<code>MyComponent</code>类，它是<code>React.Component</code>的扩展。它的渲染方法应该返回一个<code>div</code>，其中包含一个<code>h1</code>标签，标签文本为：<code>My First React Component!</code>。请确保文本内容、大小写和标点符号正确，以及调用了组件的构造函数。\",\"使用<code>ReactDOM.render()</code>把该组件渲染到 DOM 中。有一个<code>id='challenge-node'</code>的<code>div</code>可供你使用。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/write-a-react-component-from-scratch\",\"blockName\":\"React\",\"tests\":[{\"text\":\"应该有一个名为<code>MyComponent</code>的React组件。\",\"testString\":\"getUserInput => assert(getUserInput('index').replace(/\\\\s/g, '').includes('classMyComponentextendsReact.Component{'), '应该有一个名为<code>MyComponent</code>的React组件。');\"},{\"text\":\"<code>MyComponent</code>应该包含一个<code>h1</code>标签，标签的文本为<code>My First React Component!</code>，区分大小写并有标点符号。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(MyComponent)); return mockedComponent.find('h1').text() === 'My First React Component!'; })(), '<code>MyComponent</code>应该包含一个<code>h1</code>标签，标签的文本为<code>My First React Component!</code>，区分大小写并有标点符号。');\"},{\"text\":\"<code>MyComponent</code>应该渲染到 DOM。\",\"testString\":\"assert(document.getElementById('challenge-node').childNodes.length === 1, '<code>MyComponent</code>应该渲染到 DOM。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"// change code below this line\\n\",\"head\":\"\",\"tail\":\"\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/pass-props-to-a-stateless-functional-component\",\"id\":\"5a24c314108439a4d4036168\"},\"slug\":\"/front-end-libraries/react/write-a-react-component-from-scratch\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/front-end-libraries-react-write-a-react-component-from-scratch.json\n// module id = 3612\n// module chunks = 191669265798965"],"sourceRoot":""}