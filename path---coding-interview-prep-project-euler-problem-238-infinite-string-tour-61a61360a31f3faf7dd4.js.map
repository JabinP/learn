{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-238-infinite-string-tour-61a61360a31f3faf7dd4.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-238-infinite-string-tour.json"],"names":["webpackJsonp","3015","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oCAAAC,aAAA,uxCAAAC,cAAA,EAAAC,QAAg3CC,KAAA,wEAAAC,UAAA,gBAAAC,QAAqHC,KAAA,0DAAAC,WAAA,kHAA+LC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6EAAAC,GAAA,4BAA8KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-238-infinite-string-tour-61a61360a31f3faf7dd4.js","sourcesContent":["webpackJsonp([80287339851745],{\n\n/***/ 3015:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 238: Infinite string tour\",\"description\":[\"Create a sequence of numbers using the \\\"Blum Blum Shub\\\" pseudo-random number generator:\",\"\",\"s0\",\"    =\",\"    14025256\",\"  sn+1\",\"    =\",\"    sn2 mod 20300713\",\"\",\"\",\"Concatenate these numbers  s0s1s2… to create a string w of infinite length.\",\"Then, w = 14025256741014958470038053646…\",\"\",\"For a positive integer k, if no substring of w exists with a sum of digits equal to k, p(k) is defined to be zero. If at least one substring of w exists with a sum of digits equal to k, we define p(k) = z, where z is the starting position of the earliest such substring.\",\"\",\"For instance:\",\"\",\"The substrings 1, 14, 1402, … \",\"with respective sums of digits equal to 1, 5, 7, …\",\"start at position 1, hence p(1) = p(5) = p(7) = … = 1.\",\"\",\"The substrings 4, 402, 4025, …\",\"with respective sums of digits equal to 4, 6, 11, …\",\"start at position 2, hence p(4) = p(6) = p(11) = … = 2.\",\"\",\"The substrings 02, 0252, …\",\"with respective sums of digits equal to 2, 9, …\",\"start at position 3, hence p(2) = p(9) = … = 3.\",\"\",\"Note that substring 025 starting at position 3, has a sum of digits equal to 7, but there was an earlier substring (starting at position 1) with a sum of digits equal to 7, so p(7) = 1, not 3.\",\"\",\"We can verify that, for 0 < k ≤ 103, ∑ p(k) = 4742.\",\"\",\"Find ∑ p(k), for 0 < k ≤ 2·1015.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-238-infinite-string-tour\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler238()</code> should return 9922545104535660.\",\"testString\":\"assert.strictEqual(euler238(), 9922545104535660, '<code>euler238()</code> should return 9922545104535660.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler238() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler238();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-239-twenty-two-foolish-primes\",\"id\":\"5900f45b1000cf542c50ff6d\"},\"slug\":\"/coding-interview-prep/project-euler/problem-238-infinite-string-tour\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-238-infinite-string-tour-61a61360a31f3faf7dd4.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 238: Infinite string tour\",\"description\":[\"Create a sequence of numbers using the \\\"Blum Blum Shub\\\" pseudo-random number generator:\",\"\",\"s0\",\"    =\",\"    14025256\",\"  sn+1\",\"    =\",\"    sn2 mod 20300713\",\"\",\"\",\"Concatenate these numbers  s0s1s2… to create a string w of infinite length.\",\"Then, w = 14025256741014958470038053646…\",\"\",\"For a positive integer k, if no substring of w exists with a sum of digits equal to k, p(k) is defined to be zero. If at least one substring of w exists with a sum of digits equal to k, we define p(k) = z, where z is the starting position of the earliest such substring.\",\"\",\"For instance:\",\"\",\"The substrings 1, 14, 1402, … \",\"with respective sums of digits equal to 1, 5, 7, …\",\"start at position 1, hence p(1) = p(5) = p(7) = … = 1.\",\"\",\"The substrings 4, 402, 4025, …\",\"with respective sums of digits equal to 4, 6, 11, …\",\"start at position 2, hence p(4) = p(6) = p(11) = … = 2.\",\"\",\"The substrings 02, 0252, …\",\"with respective sums of digits equal to 2, 9, …\",\"start at position 3, hence p(2) = p(9) = … = 3.\",\"\",\"Note that substring 025 starting at position 3, has a sum of digits equal to 7, but there was an earlier substring (starting at position 1) with a sum of digits equal to 7, so p(7) = 1, not 3.\",\"\",\"We can verify that, for 0 < k ≤ 103, ∑ p(k) = 4742.\",\"\",\"Find ∑ p(k), for 0 < k ≤ 2·1015.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-238-infinite-string-tour\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler238()</code> should return 9922545104535660.\",\"testString\":\"assert.strictEqual(euler238(), 9922545104535660, '<code>euler238()</code> should return 9922545104535660.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler238() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler238();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-239-twenty-two-foolish-primes\",\"id\":\"5900f45b1000cf542c50ff6d\"},\"slug\":\"/coding-interview-prep/project-euler/problem-238-infinite-string-tour\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-238-infinite-string-tour.json\n// module id = 3015\n// module chunks = 80287339851745"],"sourceRoot":""}