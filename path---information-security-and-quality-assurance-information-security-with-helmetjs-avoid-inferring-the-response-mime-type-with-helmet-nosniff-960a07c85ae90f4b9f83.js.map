{"version":3,"sources":["webpack:///path---information-security-and-quality-assurance-information-security-with-helmetjs-avoid-inferring-the-response-mime-type-with-helmet-nosniff-960a07c85ae90f4b9f83.js","webpack:///./.cache/json/information-security-and-quality-assurance-information-security-with-helmetjs-avoid-inferring-the-response-mime-type-with-helmet-nosniff.json"],"names":["webpackJsonp","3675","module","exports","data","challengeNode","title","guideUrl","description","challengeType","fields","blockName","slug","tests","text","testString","pathContext","challengeMeta","introPath","template","required","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+DAAAC,SAAA,KAAAC,aAAA,qaAAAC,cAAA,EAAAC,QAAuiBC,UAAA,qCAAAC,KAAA,4IAAAC,QAA8MC,KAAA,8BAAAC,WAAA,iPAAkSC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAC,YAAAC,kBAAA,6IAAAC,GAAA,4BAA8OV,KAAA","file":"path---information-security-and-quality-assurance-information-security-with-helmetjs-avoid-inferring-the-response-mime-type-with-helmet-nosniff-960a07c85ae90f4b9f83.js","sourcesContent":["webpackJsonp([51115844453075],{\n\n/***/ 3675:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Avoid Inferring the Response MIME Type with helmet.noSniff()\",\"guideUrl\":null,\"description\":[\"温馨提醒，本项目在 <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-infosec/'>这个 Glitch 项目</a> 的基础上进行开发。你也可以从 <a href='https://github.com/freeCodeCamp/boilerplate-infosec/'>GitHub</a> 上克隆。\",\"浏览器可以通过探查 ``content`` 或者 ``MIME`` 头部来判断不同的响应内容。这两个的优先级比 ``Content-Type`` 还高，浏览器可以通过这两个头部来猜测并处理响应。这个在某些情况下非常实用，但也会造成一定的潜在风险。我们可以通过中间件来设置 ``X-Content-Type-Options`` 头部为 ``nosniff``。 这样，浏览器就不会绕过 ``Content-Type`` 这个头了。\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Information Security with HelmetJS\",\"slug\":\"/information-security-and-quality-assurance/information-security-with-helmetjs/avoid-inferring-the-response-mime-type-with-helmet-nosniff\",\"tests\":[{\"text\":\"helmet.noSniff() 中间件应该被正确加载\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/app-info').then(data => { assert.include(data.appStack, 'nosniff'); assert.equal(data.headers['x-content-type-options'], 'nosniff'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/information-security-with-helmetjs/prevent-ie-from-opening-untrusted-html-with-helmet-ienoopen\",\"id\":\"587d8248367417b2b2512c3a\"},\"slug\":\"/information-security-and-quality-assurance/information-security-with-helmetjs/avoid-inferring-the-response-mime-type-with-helmet-nosniff\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---information-security-and-quality-assurance-information-security-with-helmetjs-avoid-inferring-the-response-mime-type-with-helmet-nosniff-960a07c85ae90f4b9f83.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Avoid Inferring the Response MIME Type with helmet.noSniff()\",\"guideUrl\":null,\"description\":[\"温馨提醒，本项目在 <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-infosec/'>这个 Glitch 项目</a> 的基础上进行开发。你也可以从 <a href='https://github.com/freeCodeCamp/boilerplate-infosec/'>GitHub</a> 上克隆。\",\"浏览器可以通过探查 ``content`` 或者 ``MIME`` 头部来判断不同的响应内容。这两个的优先级比 ``Content-Type`` 还高，浏览器可以通过这两个头部来猜测并处理响应。这个在某些情况下非常实用，但也会造成一定的潜在风险。我们可以通过中间件来设置 ``X-Content-Type-Options`` 头部为 ``nosniff``。 这样，浏览器就不会绕过 ``Content-Type`` 这个头了。\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Information Security with HelmetJS\",\"slug\":\"/information-security-and-quality-assurance/information-security-with-helmetjs/avoid-inferring-the-response-mime-type-with-helmet-nosniff\",\"tests\":[{\"text\":\"helmet.noSniff() 中间件应该被正确加载\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/app-info').then(data => { assert.include(data.appStack, 'nosniff'); assert.equal(data.headers['x-content-type-options'], 'nosniff'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/information-security-with-helmetjs/prevent-ie-from-opening-untrusted-html-with-helmet-ienoopen\",\"id\":\"587d8248367417b2b2512c3a\"},\"slug\":\"/information-security-and-quality-assurance/information-security-with-helmetjs/avoid-inferring-the-response-mime-type-with-helmet-nosniff\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/information-security-and-quality-assurance-information-security-with-helmetjs-avoid-inferring-the-response-mime-type-with-helmet-nosniff.json\n// module id = 3675\n// module chunks = 51115844453075"],"sourceRoot":""}