{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-zeckendorf-number-representation-92014f38edffb23b0031.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-zeckendorf-number-representation.json"],"names":["webpackJsonp","3426","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,mCAAAC,aAAA,qMAAqM,y7BAAAC,cAAA,EAAAC,QAA+gCC,KAAA,uEAAAC,UAAA,eAAAC,QAAmHC,KAAA,8BAAAC,WAAA,gFAAkID,KAAA,yEAAAC,WAAA,qHAAiNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,+CAAkGC,KAAA,GAAAC,KAAA,6WAA+XC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,oEAAAC,GAAA,4BAAqKrB,KAAA","file":"path---coding-interview-prep-rosetta-code-zeckendorf-number-representation-92014f38edffb23b0031.js","sourcesContent":["webpackJsonp([250057935941990],{\n\n/***/ 3426:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Zeckendorf number representation\",\"description\":[\"<p>\",\"Just as numbers can be represented in a\",\"positional notation as sums of multiples of the powers of ten (decimal)\",\"or two (binary); all the positive integers can be represented as the sum\",\"of one or zero times the distinct members of the Fibonacci series.\",\"</p>\",\"<p>\",\"Recall that the first six distinct Fibonacci\",\"numbers are:  <code>1, 2, 3, 5, 8, 13</code>. The decimal number eleven can\",\"be written as <code>0*13 + 1*8 + 0*5 + 1*3 + 0*2 + 0*1</code> or\",\"<code>010100</code> in positional notation where the columns represent\",\"multiplication by a particular member of the sequence. Leading zeroes are\",\"dropped so that 11 decimal becomes <code>10100</code>.\",\"</p>\",\"<p>\",\"10100 is not the only way to make 11 from the Fibonacci numbers however\",\"<code>0*13 + 1*8 + 0*5 + 0*3 + 1*2 + 1*1</code> or 010011 would also\",\"represent decimal 11. For a true Zeckendorf number there is the added\",\"restriction that ''no two consecutive Fibonacci numbers can be used''\",\"which leads to the former unique solution.\",\"</p>\",\"<p>\",\" Task:\",\" Write a function that generates and returns an array of first N Zeckendorf numbers in order.\",\"</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/zeckendorf-number-representation\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"zeckendorf must be function\",\"testString\":\"assert.equal(typeof zeckendorf, 'function', 'zeckendorf must be function');\"},{\"text\":\"Your <code>zeckendorf</code> function should return the correct answer\",\"testString\":\"assert.deepEqual(answer, solution20, 'Your <code>zeckendorf</code> function should return the correct answer');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function zeckendorf(n) {\\n  // good luck!\\n}\",\"head\":\"\",\"tail\":\"const range = (m, n) => (\\n  Array.from({\\n    length: Math.floor(n - m) + 1\\n  }, (_, i) => m + i)\\n);\\n\\nconst solution20 = [\\n  '1', '10', '100', '101', '1000', '1001', '1010', '10000', '10001',\\n  '10010', '10100', '10101', '100000', '100001', '100010', '100100', '100101',\\n  '101000', '101001', '101010'\\n];\\n\\nconst answer = range(1, 20).map(zeckendorf);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/zhang-suen-thinning-algorithm\",\"id\":\"594810f028c0303b75339ad6\"},\"slug\":\"/coding-interview-prep/rosetta-code/zeckendorf-number-representation\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-zeckendorf-number-representation-92014f38edffb23b0031.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Zeckendorf number representation\",\"description\":[\"<p>\",\"Just as numbers can be represented in a\",\"positional notation as sums of multiples of the powers of ten (decimal)\",\"or two (binary); all the positive integers can be represented as the sum\",\"of one or zero times the distinct members of the Fibonacci series.\",\"</p>\",\"<p>\",\"Recall that the first six distinct Fibonacci\",\"numbers are:  <code>1, 2, 3, 5, 8, 13</code>. The decimal number eleven can\",\"be written as <code>0*13 + 1*8 + 0*5 + 1*3 + 0*2 + 0*1</code> or\",\"<code>010100</code> in positional notation where the columns represent\",\"multiplication by a particular member of the sequence. Leading zeroes are\",\"dropped so that 11 decimal becomes <code>10100</code>.\",\"</p>\",\"<p>\",\"10100 is not the only way to make 11 from the Fibonacci numbers however\",\"<code>0*13 + 1*8 + 0*5 + 0*3 + 1*2 + 1*1</code> or 010011 would also\",\"represent decimal 11. For a true Zeckendorf number there is the added\",\"restriction that ''no two consecutive Fibonacci numbers can be used''\",\"which leads to the former unique solution.\",\"</p>\",\"<p>\",\" Task:\",\" Write a function that generates and returns an array of first N Zeckendorf numbers in order.\",\"</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/zeckendorf-number-representation\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"zeckendorf must be function\",\"testString\":\"assert.equal(typeof zeckendorf, 'function', 'zeckendorf must be function');\"},{\"text\":\"Your <code>zeckendorf</code> function should return the correct answer\",\"testString\":\"assert.deepEqual(answer, solution20, 'Your <code>zeckendorf</code> function should return the correct answer');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function zeckendorf(n) {\\n  // good luck!\\n}\",\"head\":\"\",\"tail\":\"const range = (m, n) => (\\n  Array.from({\\n    length: Math.floor(n - m) + 1\\n  }, (_, i) => m + i)\\n);\\n\\nconst solution20 = [\\n  '1', '10', '100', '101', '1000', '1001', '1010', '10000', '10001',\\n  '10010', '10100', '10101', '100000', '100001', '100010', '100100', '100101',\\n  '101000', '101001', '101010'\\n];\\n\\nconst answer = range(1, 20).map(zeckendorf);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/zhang-suen-thinning-algorithm\",\"id\":\"594810f028c0303b75339ad6\"},\"slug\":\"/coding-interview-prep/rosetta-code/zeckendorf-number-representation\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-zeckendorf-number-representation.json\n// module id = 3426\n// module chunks = 250057935941990"],"sourceRoot":""}