webpackJsonp([0x702126618822],{3723:function(t,e){t.exports={data:{challengeNode:{title:"Mutations",description:["输入参数是一个有两个字符串元素的数组。如果第一个字符串中包含了第二个字符串中的所有字母，则返回 true。",'例如，<code>["hello", "Hello"]</code> 应该返回 true 因为第一个字符串中包含了第二个字符串中出现的所有字母（忽略大小写）。','而 <code>["hello", "hey"]</code> 应该返回 false 因为第一个字符串 "hello" 没有包含字母 "y"。','最后，<code>["Alien", "line"]</code>, 应该返回 true，因为 "line" 中的所有字母都被包含在 "Alien" 中。','如果你有任何疑问，可以访问 <a href="https://forum.freecodecamp.one/t/topic/157" target="_blank">Read-Search-Ask</a> 。请你独立解决挑战中的问题。'],challengeType:5,fields:{slug:"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/mutations",blockName:"Basic Algorithm Scripting",tests:[{text:'<code>mutation(["hello", "hey"])</code> 应该返回 false。',testString:'assert(mutation(["hello", "hey"]) === false, \'<code>mutation(["hello", "hey"])</code> 应该返回 false。\');'},{text:'<code>mutation(["hello", "Hello"])</code> 应该返回 true。',testString:'assert(mutation(["hello", "Hello"]) === true, \'<code>mutation(["hello", "Hello"])</code> 应该返回 true。\');'},{text:'<code>mutation(["zyxwvutsrqponmlkjihgfedcba", "qrstu"])</code> 应该返回 true。',testString:'assert(mutation(["zyxwvutsrqponmlkjihgfedcba", "qrstu"]) === true, \'<code>mutation(["zyxwvutsrqponmlkjihgfedcba", "qrstu"])</code> 应该返回 true。\');'},{text:'<code>mutation(["Mary", "Army"])</code> 应该返回 true。',testString:'assert(mutation(["Mary", "Army"]) === true, \'<code>mutation(["Mary", "Army"])</code> 应该返回 true。\');'},{text:'<code>mutation(["Mary", "Aarmy"])</code> 应该返回 true。',testString:'assert(mutation(["Mary", "Aarmy"]) === true, \'<code>mutation(["Mary", "Aarmy"])</code> 应该返回 true。\');'},{text:'<code>mutation(["Alien", "line"])</code> 应该返回 true。',testString:'assert(mutation(["Alien", "line"]) === true, \'<code>mutation(["Alien", "line"])</code> 应该返回 true。\');'},{text:'<code>mutation(["floor", "for"])</code> 应该返回 true。',testString:'assert(mutation(["floor", "for"]) === true, \'<code>mutation(["floor", "for"])</code> 应该返回 true。\');'},{text:'<code>mutation(["hello", "neo"])</code> 应该返回 false。',testString:'assert(mutation(["hello", "neo"]) === false, \'<code>mutation(["hello", "neo"])</code> 应该返回 false。\');'},{text:'<code>mutation(["voodoo", "no"])</code> 应该返回 false。',testString:'assert(mutation(["voodoo", "no"]) === false, \'<code>mutation(["voodoo", "no"])</code> 应该返回 false。\');'}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'function mutation(arr) {\n  return arr;\n}\n\nmutation(["hello", "hey"]);',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/chunky-monkey",id:"af2170cad53daa0770fabdea"},slug:"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/mutations"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-algorithm-scripting-mutations-6b6b5b24ef3349da38b8.js.map