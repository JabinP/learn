webpackJsonp([0xe345e07429f7],{2972:function(e,t){e.exports={data:{challengeNode:{title:"Problem 2: Even Fibonacci Numbers",description:["斐波那契数列中的每一项都是前两项的和。 由 1 和 2 开始生成的斐波那契数列的前 10 项为：","<div style='text-align: center;'>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</div>","考虑该斐波那契数列中不超过四百万的项，求其中为偶数的项之和。"],challengeType:5,fields:{slug:"/coding-interview-prep/project-euler/problem-2-even-fibonacci-numbers",blockName:"Project Euler",tests:[{text:"<code>fiboEvenSum(10)</code>应该返回 188。",testString:"assert.strictEqual(fiboEvenSum(10), 188, '<code>fiboEvenSum(10)</code>应该返回 188。');"},{text:"<code>fiboEvenSum(23)</code>应该返回 60696。",testString:"assert.strictEqual(fiboEvenSum(23), 60696, '<code>fiboEvenSum(23)</code>应该返回 60696。');"},{text:"<code>fiboEvenSum(43)</code>应该返回 1485607536。",testString:"assert.strictEqual(fiboEvenSum(43), 1485607536, '<code>fiboEvenSum(43)</code>应该返回 1485607536。');"},{text:"在我们提供的测试用例中，你的函数没有返回预期的结果。",testString:"assert.strictEqual(fiboEvenSum(18), 3382, '在我们提供的测试用例中，你的函数没有返回预期的结果。');"},{text:"你的函数应该返回一个 <code>奇数</code> 值。",testString:"assert.equal(fiboEvenSum(31) % 2 === 0, true, '你的函数应该返回一个 <code>奇数</code> 值。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function fiboEvenSum(number) {\n  // 你可以做到的！\n  return true;\n}\n\nfiboEvenSum(10);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/project-euler/problem-3-largest-prime-factor",id:"5900f36e1000cf542c50fe81"},slug:"/coding-interview-prep/project-euler/problem-2-even-fibonacci-numbers"}}}});
//# sourceMappingURL=path---coding-interview-prep-project-euler-problem-2-even-fibonacci-numbers-8d11cedd54a7c65cf3a9.js.map