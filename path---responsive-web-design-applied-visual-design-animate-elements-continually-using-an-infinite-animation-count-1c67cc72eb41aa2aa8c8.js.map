{"version":3,"sources":["webpack:///path---responsive-web-design-applied-visual-design-animate-elements-continually-using-an-infinite-animation-count-1c67cc72eb41aa2aa8c8.js","webpack:///./.cache/json/responsive-web-design-applied-visual-design-animate-elements-continually-using-an-infinite-animation-count.json"],"names":["webpackJsonp","4047","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iEAAAC,aAAA,0KAAyP,2HAAAC,cAAA,EAAAC,QAAgKC,KAAA,8GAAAC,UAAA,wBAAAC,QAAmKC,KAAA,yDAAAC,WAAA,kIAA8MC,YAAAC,OAAwBC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,ohBAA0iBC,KAAA,GAAAC,KAAA,IAAyDC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,sGAAAC,GAAA,4BAAuMrB,KAAA","file":"path---responsive-web-design-applied-visual-design-animate-elements-continually-using-an-infinite-animation-count-1c67cc72eb41aa2aa8c8.js","sourcesContent":["webpackJsonp([209258811136419],{\n\n/***/ 4047:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Animate Elements Continually Using an Infinite Animation Count\",\"description\":[\"之前的关卡里介绍了一些动画属性以及<code>@keyframes</code>规则的用法。还有一个常用的动画属性是<code>animation-iteration-count</code>，这个属性允许你控制动画循环的次数。下面是一个例子：\",\"<code>animation-iteration-count: 3;</code>\",\"在这里动画会在运行 3 次后停止，如果想让动画一直运行，可以把值设置成 infinite。\",\"<hr>\",\"把<code>animation-iteration-count</code>属性改成 infinite，以使右边的球持续跳跃。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/applied-visual-design/animate-elements-continually-using-an-infinite-animation-count\",\"blockName\":\"Applied Visual Design\",\"tests\":[{\"text\":\"<code>animation-iteration-count</code>属性值应该为 infinite。\",\"testString\":\"assert($('#ball').css('animation-iteration-count') == 'infinite', '<code>animation-iteration-count</code>属性值应该为 infinite。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n\\n  #ball {\\n    width: 100px;\\n    height: 100px;\\n    margin: 50px auto;\\n    position: relative;\\n    border-radius: 50%;\\n    background: linear-gradient(\\n      35deg,\\n      #ccffff,\\n      #ffcccc\\n    );\\n    animation-name: bounce;\\n    animation-duration: 1s;\\n    animation-iteration-count: 3;\\n  }\\n\\n  @keyframes bounce{\\n    0% {\\n      top: 0px;\\n    }\\n    50% {\\n      top: 249px;\\n      width: 130px;\\n      height: 70px;\\n    }\\n    100% {\\n      top: 0px;\\n    }\\n  }\\n</style>\\n<div id=\\\"ball\\\"></div>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/applied-visual-design/make-a-css-heartbeat-using-an-infinite-animation-count\",\"id\":\"587d78a8367417b2b2512ae3\"},\"slug\":\"/responsive-web-design/applied-visual-design/animate-elements-continually-using-an-infinite-animation-count\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-web-design-applied-visual-design-animate-elements-continually-using-an-infinite-animation-count-1c67cc72eb41aa2aa8c8.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Animate Elements Continually Using an Infinite Animation Count\",\"description\":[\"之前的关卡里介绍了一些动画属性以及<code>@keyframes</code>规则的用法。还有一个常用的动画属性是<code>animation-iteration-count</code>，这个属性允许你控制动画循环的次数。下面是一个例子：\",\"<code>animation-iteration-count: 3;</code>\",\"在这里动画会在运行 3 次后停止，如果想让动画一直运行，可以把值设置成 infinite。\",\"<hr>\",\"把<code>animation-iteration-count</code>属性改成 infinite，以使右边的球持续跳跃。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/applied-visual-design/animate-elements-continually-using-an-infinite-animation-count\",\"blockName\":\"Applied Visual Design\",\"tests\":[{\"text\":\"<code>animation-iteration-count</code>属性值应该为 infinite。\",\"testString\":\"assert($('#ball').css('animation-iteration-count') == 'infinite', '<code>animation-iteration-count</code>属性值应该为 infinite。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n\\n  #ball {\\n    width: 100px;\\n    height: 100px;\\n    margin: 50px auto;\\n    position: relative;\\n    border-radius: 50%;\\n    background: linear-gradient(\\n      35deg,\\n      #ccffff,\\n      #ffcccc\\n    );\\n    animation-name: bounce;\\n    animation-duration: 1s;\\n    animation-iteration-count: 3;\\n  }\\n\\n  @keyframes bounce{\\n    0% {\\n      top: 0px;\\n    }\\n    50% {\\n      top: 249px;\\n      width: 130px;\\n      height: 70px;\\n    }\\n    100% {\\n      top: 0px;\\n    }\\n  }\\n</style>\\n<div id=\\\"ball\\\"></div>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/applied-visual-design/make-a-css-heartbeat-using-an-infinite-animation-count\",\"id\":\"587d78a8367417b2b2512ae3\"},\"slug\":\"/responsive-web-design/applied-visual-design/animate-elements-continually-using-an-infinite-animation-count\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-web-design-applied-visual-design-animate-elements-continually-using-an-infinite-animation-count.json\n// module id = 4047\n// module chunks = 209258811136419"],"sourceRoot":""}