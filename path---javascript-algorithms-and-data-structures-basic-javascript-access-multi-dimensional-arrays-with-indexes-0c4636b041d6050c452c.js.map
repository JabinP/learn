{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-access-multi-dimensional-arrays-with-indexes-0c4636b041d6050c452c.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-access-multi-dimensional-arrays-with-indexes.json"],"names":["webpackJsonp","3754","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+CAAAC,aAAA,yZAAuc,gPAAAC,cAAA,EAAAC,QAAoSC,KAAA,2GAAAC,UAAA,mBAAAC,QAA2JC,KAAA,yCAAAC,WAAA,oEAAiID,KAAA,mCAAAC,WAAA,yIAA+LC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,iIAAkLC,KAAA,GAAAC,KAAA,6HAAuJC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,0FAAAC,GAAA,4BAA2LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-access-multi-dimensional-arrays-with-indexes-0c4636b041d6050c452c.js","sourcesContent":["webpackJsonp([92741731139161],{\n\n/***/ 3754:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Access Multi-Dimensional Arrays With Indexes\",\"description\":[\"可以把 <dfn>多维</dfn> 数组看作成是一个 <em>数组中的数组</em>。当使用方括号去访问数组的时候，第一个<code>[index]</code>访问的是第 N 个子数组，第二个<code>[index]</code>访问的是第 N 个子数组的第N个元素。\",\"<strong>示例</strong>\",\"<blockquote>var arr = [<br>&nbsp;&nbsp;[1,2,3],<br>&nbsp;&nbsp;[4,5,6],<br>&nbsp;&nbsp;[7,8,9],<br>&nbsp;&nbsp;[[10,11,12], 13, 14]<br>];<br>arr[3]; // 等于 [[10,11,12], 13, 14]<br>arr[3][0]; // 等于 [10,11,12]<br>arr[3][0][1]; // 等于 11</blockquote>\",\"<strong>提示</strong><br>数组名称和方括号之间不应该有任何空格，如<code>array [0][0]</code>甚至是这样<code>array [0] [0]</code>尽管 JavaScript 能够正确处理，但可能会让看你代码的其他程序员感到困惑。\",\"<hr>\",\"使用恰当的<code>[index]</code>访问<code>myArray</code>，使得<code>myData</code>的值为<code>8</code>\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-multi-dimensional-arrays-with-indexes\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>myData</code>应该等于<code>8</code>.\",\"testString\":\"assert(myData === 8, '<code>myData</code>应该等于<code>8</code>.');\"},{\"text\":\"你应该使用方括号从<code>myArray</code>中取值\",\"testString\":\"assert(/myArray\\\\[2\\\\]\\\\[1\\\\]/g.test(code) && !/myData\\\\s*=\\\\s*(?:.*[-+*/%]|\\\\d)/g.test(code), '你应该使用方括号从<code>myArray</code>中取值');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nvar myArray = [[1,2,3], [4,5,6], [7,8,9], [[10,11,12], 13, 14]];\\n\\n// 请把你的代码写在这条注释以下\\nvar myData = myArray[0][0];\\n\",\"head\":\"\",\"tail\":\"if(typeof myArray !== \\\"undefined\\\"){(function(){return \\\"myData: \\\" + myData + \\\" myArray: \\\" + JSON.stringify(myArray);})();}\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-push\",\"id\":\"56592a60ddddeae28f7aa8e1\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-multi-dimensional-arrays-with-indexes\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-access-multi-dimensional-arrays-with-indexes-0c4636b041d6050c452c.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Access Multi-Dimensional Arrays With Indexes\",\"description\":[\"可以把 <dfn>多维</dfn> 数组看作成是一个 <em>数组中的数组</em>。当使用方括号去访问数组的时候，第一个<code>[index]</code>访问的是第 N 个子数组，第二个<code>[index]</code>访问的是第 N 个子数组的第N个元素。\",\"<strong>示例</strong>\",\"<blockquote>var arr = [<br>&nbsp;&nbsp;[1,2,3],<br>&nbsp;&nbsp;[4,5,6],<br>&nbsp;&nbsp;[7,8,9],<br>&nbsp;&nbsp;[[10,11,12], 13, 14]<br>];<br>arr[3]; // 等于 [[10,11,12], 13, 14]<br>arr[3][0]; // 等于 [10,11,12]<br>arr[3][0][1]; // 等于 11</blockquote>\",\"<strong>提示</strong><br>数组名称和方括号之间不应该有任何空格，如<code>array [0][0]</code>甚至是这样<code>array [0] [0]</code>尽管 JavaScript 能够正确处理，但可能会让看你代码的其他程序员感到困惑。\",\"<hr>\",\"使用恰当的<code>[index]</code>访问<code>myArray</code>，使得<code>myData</code>的值为<code>8</code>\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-multi-dimensional-arrays-with-indexes\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>myData</code>应该等于<code>8</code>.\",\"testString\":\"assert(myData === 8, '<code>myData</code>应该等于<code>8</code>.');\"},{\"text\":\"你应该使用方括号从<code>myArray</code>中取值\",\"testString\":\"assert(/myArray\\\\[2\\\\]\\\\[1\\\\]/g.test(code) && !/myData\\\\s*=\\\\s*(?:.*[-+*/%]|\\\\d)/g.test(code), '你应该使用方括号从<code>myArray</code>中取值');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nvar myArray = [[1,2,3], [4,5,6], [7,8,9], [[10,11,12], 13, 14]];\\n\\n// 请把你的代码写在这条注释以下\\nvar myData = myArray[0][0];\\n\",\"head\":\"\",\"tail\":\"if(typeof myArray !== \\\"undefined\\\"){(function(){return \\\"myData: \\\" + myData + \\\" myArray: \\\" + JSON.stringify(myArray);})();}\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-push\",\"id\":\"56592a60ddddeae28f7aa8e1\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-multi-dimensional-arrays-with-indexes\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-access-multi-dimensional-arrays-with-indexes.json\n// module id = 3754\n// module chunks = 92741731139161"],"sourceRoot":""}