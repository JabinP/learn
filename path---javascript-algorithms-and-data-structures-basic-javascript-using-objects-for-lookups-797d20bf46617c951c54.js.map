{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-using-objects-for-lookups-797d20bf46617c951c54.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-using-objects-for-lookups.json"],"names":["webpackJsonp","3857","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,4BAAAC,aAAA,saAAqd,oGAAAC,cAAA,EAAAC,QAAwJC,KAAA,wFAAAC,UAAA,mBAAAC,QAAwIC,KAAA,+DAAAC,WAAA,qHAA8MD,KAAA,gEAAAC,WAAA,uHAAiND,KAAA,mEAAAC,WAAA,6HAA0ND,KAAA,gEAAAC,WAAA,uHAAiND,KAAA,6DAAAC,WAAA,iHAAwMD,KAAA,iEAAAC,WAAA,yHAAoND,KAAA,4DAAAC,WAAA,wHAA0MD,KAAA,6BAAAC,WAAA,0EAA2HD,KAAA,gEAAAC,WAAA,8GAAiMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,oiBAAmnBC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6FAAAC,GAAA,4BAA8LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-using-objects-for-lookups-797d20bf46617c951c54.js","sourcesContent":["webpackJsonp([179572664057744],{\n\n/***/ 3857:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Using Objects for Lookups\",\"description\":[\"对象和字典一样，可以用来存储键/值对。如果你的数据跟对象一样，你可以用对象来查找你想要的值，而不是使用switch或if/else语句。当你知道你的输入数据在某个范围时，这种查找方式极为有效。\",\"这是简单的反向字母表：\",\"<blockquote>var alpha = {<br>&nbsp;&nbsp;1:\\\"Z\\\",<br>&nbsp;&nbsp;2:\\\"Y\\\",<br>&nbsp;&nbsp;3:\\\"X\\\",<br>&nbsp;&nbsp;4:\\\"W\\\",<br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;24:\\\"C\\\",<br>&nbsp;&nbsp;25:\\\"B\\\",<br>&nbsp;&nbsp;26:\\\"A\\\"<br>};<br>alpha[2]; // \\\"Y\\\"<br>alpha[24]; // \\\"C\\\"<br><br>var value = 2;<br>alpha[value]; // \\\"Y\\\"</blockquote>\",\"<hr>\",\"把 switch 语句转化为<code>lookup</code>对象。使用它来查找<code>val</code>属性的值，并赋值给<code>result</code>变量。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/using-objects-for-lookups\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>phoneticLookup(\\\"alpha\\\")</code>应该等于<code>\\\"Adams\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"alpha\\\") === 'Adams', '<code>phoneticLookup(\\\"alpha\\\")</code>应该等于<code>\\\"Adams\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"bravo\\\")</code>应该等于<code>\\\"Boston\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"bravo\\\") === 'Boston', '<code>phoneticLookup(\\\"bravo\\\")</code>应该等于<code>\\\"Boston\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"charlie\\\")</code>应该等于<code>\\\"Chicago\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"charlie\\\") === 'Chicago', '<code>phoneticLookup(\\\"charlie\\\")</code>应该等于<code>\\\"Chicago\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"delta\\\")</code>应该等于<code>\\\"Denver\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"delta\\\") === 'Denver', '<code>phoneticLookup(\\\"delta\\\")</code>应该等于<code>\\\"Denver\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"echo\\\")</code>应该等于<code>\\\"Easy\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"echo\\\") === 'Easy', '<code>phoneticLookup(\\\"echo\\\")</code>应该等于<code>\\\"Easy\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"foxtrot\\\")</code>应该等于<code>\\\"Frank\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"foxtrot\\\") === 'Frank', '<code>phoneticLookup(\\\"foxtrot\\\")</code>应该等于<code>\\\"Frank\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"\\\")</code>应该等于<code>undefined</code>\",\"testString\":\"assert(typeof phoneticLookup(\\\"\\\") === 'undefined', '<code>phoneticLookup(\\\"\\\")</code>应该等于<code>undefined</code>');\"},{\"text\":\"请不要修改<code>return</code>语句\",\"testString\":\"assert(code.match(/return\\\\sresult;/), '请不要修改<code>return</code>语句');\"},{\"text\":\"请不要使用<code>case</code>，<code>switch</code>，或<code>if</code>语句\",\"testString\":\"assert(!/case|switch|if/g.test(code), '请不要使用<code>case</code>，<code>switch</code>,或<code>if</code>语句'); \"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nfunction phoneticLookup(val) {\\n  var result = \\\"\\\";\\n\\n  // 请把你的代码写在这条注释以下\\n  switch(val) {\\n    case \\\"alpha\\\": \\n      result = \\\"Adams\\\";\\n      break;\\n    case \\\"bravo\\\": \\n      result = \\\"Boston\\\";\\n      break;\\n    case \\\"charlie\\\": \\n      result = \\\"Chicago\\\";\\n      break;\\n    case \\\"delta\\\": \\n      result = \\\"Denver\\\";\\n      break;\\n    case \\\"echo\\\": \\n      result = \\\"Easy\\\";\\n      break;\\n    case \\\"foxtrot\\\": \\n      result = \\\"Frank\\\";\\n  }\\n\\n  // 请把你的代码写在这条注释以上\\n  return result;\\n}\\n\\n// 你可以修改这一行来测试你的代码\\nphoneticLookup(\\\"charlie\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties\",\"id\":\"56533eb9ac21ba0edf2244ca\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/using-objects-for-lookups\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-using-objects-for-lookups-797d20bf46617c951c54.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Using Objects for Lookups\",\"description\":[\"对象和字典一样，可以用来存储键/值对。如果你的数据跟对象一样，你可以用对象来查找你想要的值，而不是使用switch或if/else语句。当你知道你的输入数据在某个范围时，这种查找方式极为有效。\",\"这是简单的反向字母表：\",\"<blockquote>var alpha = {<br>&nbsp;&nbsp;1:\\\"Z\\\",<br>&nbsp;&nbsp;2:\\\"Y\\\",<br>&nbsp;&nbsp;3:\\\"X\\\",<br>&nbsp;&nbsp;4:\\\"W\\\",<br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;24:\\\"C\\\",<br>&nbsp;&nbsp;25:\\\"B\\\",<br>&nbsp;&nbsp;26:\\\"A\\\"<br>};<br>alpha[2]; // \\\"Y\\\"<br>alpha[24]; // \\\"C\\\"<br><br>var value = 2;<br>alpha[value]; // \\\"Y\\\"</blockquote>\",\"<hr>\",\"把 switch 语句转化为<code>lookup</code>对象。使用它来查找<code>val</code>属性的值，并赋值给<code>result</code>变量。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/using-objects-for-lookups\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>phoneticLookup(\\\"alpha\\\")</code>应该等于<code>\\\"Adams\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"alpha\\\") === 'Adams', '<code>phoneticLookup(\\\"alpha\\\")</code>应该等于<code>\\\"Adams\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"bravo\\\")</code>应该等于<code>\\\"Boston\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"bravo\\\") === 'Boston', '<code>phoneticLookup(\\\"bravo\\\")</code>应该等于<code>\\\"Boston\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"charlie\\\")</code>应该等于<code>\\\"Chicago\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"charlie\\\") === 'Chicago', '<code>phoneticLookup(\\\"charlie\\\")</code>应该等于<code>\\\"Chicago\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"delta\\\")</code>应该等于<code>\\\"Denver\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"delta\\\") === 'Denver', '<code>phoneticLookup(\\\"delta\\\")</code>应该等于<code>\\\"Denver\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"echo\\\")</code>应该等于<code>\\\"Easy\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"echo\\\") === 'Easy', '<code>phoneticLookup(\\\"echo\\\")</code>应该等于<code>\\\"Easy\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"foxtrot\\\")</code>应该等于<code>\\\"Frank\\\"</code>\",\"testString\":\"assert(phoneticLookup(\\\"foxtrot\\\") === 'Frank', '<code>phoneticLookup(\\\"foxtrot\\\")</code>应该等于<code>\\\"Frank\\\"</code>');\"},{\"text\":\"<code>phoneticLookup(\\\"\\\")</code>应该等于<code>undefined</code>\",\"testString\":\"assert(typeof phoneticLookup(\\\"\\\") === 'undefined', '<code>phoneticLookup(\\\"\\\")</code>应该等于<code>undefined</code>');\"},{\"text\":\"请不要修改<code>return</code>语句\",\"testString\":\"assert(code.match(/return\\\\sresult;/), '请不要修改<code>return</code>语句');\"},{\"text\":\"请不要使用<code>case</code>，<code>switch</code>，或<code>if</code>语句\",\"testString\":\"assert(!/case|switch|if/g.test(code), '请不要使用<code>case</code>，<code>switch</code>,或<code>if</code>语句'); \"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nfunction phoneticLookup(val) {\\n  var result = \\\"\\\";\\n\\n  // 请把你的代码写在这条注释以下\\n  switch(val) {\\n    case \\\"alpha\\\": \\n      result = \\\"Adams\\\";\\n      break;\\n    case \\\"bravo\\\": \\n      result = \\\"Boston\\\";\\n      break;\\n    case \\\"charlie\\\": \\n      result = \\\"Chicago\\\";\\n      break;\\n    case \\\"delta\\\": \\n      result = \\\"Denver\\\";\\n      break;\\n    case \\\"echo\\\": \\n      result = \\\"Easy\\\";\\n      break;\\n    case \\\"foxtrot\\\": \\n      result = \\\"Frank\\\";\\n  }\\n\\n  // 请把你的代码写在这条注释以上\\n  return result;\\n}\\n\\n// 你可以修改这一行来测试你的代码\\nphoneticLookup(\\\"charlie\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/testing-objects-for-properties\",\"id\":\"56533eb9ac21ba0edf2244ca\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/using-objects-for-lookups\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-using-objects-for-lookups.json\n// module id = 3857\n// module chunks = 179572664057744"],"sourceRoot":""}