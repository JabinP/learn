{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-39-integer-right-triangles-2d82e709c892975e2bab.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-39-integer-right-triangles.json"],"names":["webpackJsonp","3183","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,sCAAAC,aAAA,yDAA4E,2CAAmF,+BAAAC,cAAA,EAAAC,QAA6DC,KAAA,0EAAAC,UAAA,gBAAAC,QAAuHC,KAAA,+CAAAC,WAAA,2FAA8JD,KAAA,+CAAAC,WAAA,2FAA8JD,KAAA,+CAAAC,WAAA,2FAA8JD,KAAA,gDAAAC,WAAA,8FAAiKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,0FAA6IC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yEAAAC,GAAA,4BAA0KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-39-integer-right-triangles-2d82e709c892975e2bab.js","sourcesContent":["webpackJsonp([39275854156256],{\n\n/***/ 3183:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 39: Integer right triangles\",\"description\":[\"若三边长 {a, b, c} 均为整数的直角三角形周长为 p，当 p = 120 时，恰好存在三个不同的解：\",\"{20, 48, 52}, {24, 45, 51}, {30, 40, 50}\",\"在所有的 p ≤ n 中，p 取何值时有解的数目最多？\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-39-integer-right-triangles\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>intRightTriangles(500)</code>应该返回 420。\",\"testString\":\"assert(intRightTriangles(500) == 420, '<code>intRightTriangles(500)</code>应该返回 420。');\"},{\"text\":\"<code>intRightTriangles(800)</code>应该返回 420。\",\"testString\":\"assert(intRightTriangles(800) == 420, '<code>intRightTriangles(800)</code>应该返回 420。');\"},{\"text\":\"<code>intRightTriangles(900)</code>应该返回 840。\",\"testString\":\"assert(intRightTriangles(900) == 840, '<code>intRightTriangles(900)</code>应该返回 840。');\"},{\"text\":\"<code>intRightTriangles(1000)</code>应该返回 840。\",\"testString\":\"assert(intRightTriangles(1000) == 840, '<code>intRightTriangles(1000)</code>应该返回 840。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function intRightTriangles(n) {\\n  // 祝你好运！\\n  return n;\\n}\\n\\nintRightTriangles(1000);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-40-champernownes-constant\",\"id\":\"5900f3931000cf542c50fea6\"},\"slug\":\"/coding-interview-prep/project-euler/problem-39-integer-right-triangles\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-39-integer-right-triangles-2d82e709c892975e2bab.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 39: Integer right triangles\",\"description\":[\"若三边长 {a, b, c} 均为整数的直角三角形周长为 p，当 p = 120 时，恰好存在三个不同的解：\",\"{20, 48, 52}, {24, 45, 51}, {30, 40, 50}\",\"在所有的 p ≤ n 中，p 取何值时有解的数目最多？\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-39-integer-right-triangles\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>intRightTriangles(500)</code>应该返回 420。\",\"testString\":\"assert(intRightTriangles(500) == 420, '<code>intRightTriangles(500)</code>应该返回 420。');\"},{\"text\":\"<code>intRightTriangles(800)</code>应该返回 420。\",\"testString\":\"assert(intRightTriangles(800) == 420, '<code>intRightTriangles(800)</code>应该返回 420。');\"},{\"text\":\"<code>intRightTriangles(900)</code>应该返回 840。\",\"testString\":\"assert(intRightTriangles(900) == 840, '<code>intRightTriangles(900)</code>应该返回 840。');\"},{\"text\":\"<code>intRightTriangles(1000)</code>应该返回 840。\",\"testString\":\"assert(intRightTriangles(1000) == 840, '<code>intRightTriangles(1000)</code>应该返回 840。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function intRightTriangles(n) {\\n  // 祝你好运！\\n  return n;\\n}\\n\\nintRightTriangles(1000);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-40-champernownes-constant\",\"id\":\"5900f3931000cf542c50fea6\"},\"slug\":\"/coding-interview-prep/project-euler/problem-39-integer-right-triangles\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-39-integer-right-triangles.json\n// module id = 3183\n// module chunks = 39275854156256"],"sourceRoot":""}