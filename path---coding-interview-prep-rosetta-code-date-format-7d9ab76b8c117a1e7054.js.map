{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-date-format-7d9ab76b8c117a1e7054.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-date-format.json"],"names":["webpackJsonp","3365","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,cAAAC,aAAA,gOAAAC,cAAA,EAAAC,QAAiSC,KAAA,kDAAAC,UAAA,eAAAC,QAA8FC,KAAA,6CAAAC,WAAA,gGAAiKD,KAAA,2BAAAC,WAAA,8EAA6HD,KAAA,4CAAAC,WAAA,wFAAwJD,KAAA,qDAAAC,WAAA,+DAAuIC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,mEAAsHC,KAAA,GAAAC,KAAA,wrBAA0sBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,wDAAAC,GAAA,4BAAyJrB,KAAA","file":"path---coding-interview-prep-rosetta-code-date-format-7d9ab76b8c117a1e7054.js","sourcesContent":["webpackJsonp([163876417210834],{\n\n/***/ 3365:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Date format\",\"description\":[\"Task:\",\"<p>Return an array with the current date in the formats:</p>\",\"<p>-   2007-11-23   and </p>\",\"<p>-   Sunday, November 23, 2007</p>\",\"<p>Example output: <code>['2007-11-23', 'Sunday, November 23, 2007']</code></p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/date-format\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>getDateFormats</code> is a function.\",\"testString\":\"assert(typeof getDateFormats === 'function', '<code>getDateFormats</code> is a function.');\"},{\"text\":\"Should return an object.\",\"testString\":\"assert(typeof getDateFormats() === 'object', 'Should return an object.');\"},{\"text\":\"Should returned an array with 2 elements.\",\"testString\":\"assert(getDateFormats().length === 2, 'Should returned an array with 2 elements.');\"},{\"text\":\"Should return the correct date in the right format\",\"testString\":\"assert.deepEqual(getDateFormats(), dates, equalsMessage);\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function getDateFormats () {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const getDateSolution = () => {\\n  const date = new Date();\\n  const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\\n  const fmt1 = `${date.getFullYear()}-${(1 + date.getMonth())}-${date.getDate()}`;\\n  const fmt2 = `${weekdays[date.getDay()]}, ${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\\n  return [fmt1, fmt2];\\n};\\n\\nconst dates = getDateSolution();\\nconst equalsMessage = `message: <code>getDataFormats()</code> should return <code>[\\\"${dates[0]}\\\", \\\"${dates[1]}\\\"]</code>.`;\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/date-manipulation\",\"id\":\"59669d08d75b60482359409f\"},\"slug\":\"/coding-interview-prep/rosetta-code/date-format\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-date-format-7d9ab76b8c117a1e7054.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Date format\",\"description\":[\"Task:\",\"<p>Return an array with the current date in the formats:</p>\",\"<p>-   2007-11-23   and </p>\",\"<p>-   Sunday, November 23, 2007</p>\",\"<p>Example output: <code>['2007-11-23', 'Sunday, November 23, 2007']</code></p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/date-format\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>getDateFormats</code> is a function.\",\"testString\":\"assert(typeof getDateFormats === 'function', '<code>getDateFormats</code> is a function.');\"},{\"text\":\"Should return an object.\",\"testString\":\"assert(typeof getDateFormats() === 'object', 'Should return an object.');\"},{\"text\":\"Should returned an array with 2 elements.\",\"testString\":\"assert(getDateFormats().length === 2, 'Should returned an array with 2 elements.');\"},{\"text\":\"Should return the correct date in the right format\",\"testString\":\"assert.deepEqual(getDateFormats(), dates, equalsMessage);\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function getDateFormats () {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const getDateSolution = () => {\\n  const date = new Date();\\n  const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\\n  const fmt1 = `${date.getFullYear()}-${(1 + date.getMonth())}-${date.getDate()}`;\\n  const fmt2 = `${weekdays[date.getDay()]}, ${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\\n  return [fmt1, fmt2];\\n};\\n\\nconst dates = getDateSolution();\\nconst equalsMessage = `message: <code>getDataFormats()</code> should return <code>[\\\"${dates[0]}\\\", \\\"${dates[1]}\\\"]</code>.`;\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/date-manipulation\",\"id\":\"59669d08d75b60482359409f\"},\"slug\":\"/coding-interview-prep/rosetta-code/date-format\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-date-format.json\n// module id = 3365\n// module chunks = 163876417210834"],"sourceRoot":""}