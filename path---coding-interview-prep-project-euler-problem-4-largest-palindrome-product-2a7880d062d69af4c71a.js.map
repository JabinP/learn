{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-4-largest-palindrome-product-2a7880d062d69af4c71a.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-4-largest-palindrome-product.json"],"names":["webpackJsonp","3194","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wCAAAC,aAAA,sFAAAC,cAAA,EAAAC,QAAiLC,KAAA,4EAAAC,UAAA,gBAAAC,QAAyHC,KAAA,qDAAAC,WAAA,iHAA0LD,KAAA,uDAAAC,WAAA,sHAAgMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,4GAA+JC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,mEAAAC,GAAA,4BAAoKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-4-largest-palindrome-product-2a7880d062d69af4c71a.js","sourcesContent":["webpackJsonp([138099760557931],{\n\n/***/ 3194:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 4: Largest palindrome product\",\"description\":[\"回文数就是从前往后和从后往前读都一样的数。由两个 2 位数相乘得到的最大回文乘积是 9009 = 91 × 99。\",\"找出由两个 3 位数相乘得到的最大回文乘积。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-4-largest-palindrome-product\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>largestPalindromeProduct(2)</code>应该返回 9009。\",\"testString\":\"assert.strictEqual(largestPalindromeProduct(2), 9009, '<code>largestPalindromeProduct(2)</code>应该返回 9009。');\"},{\"text\":\"<code>largestPalindromeProduct(3)</code>应该返回 906609。\",\"testString\":\"assert.strictEqual(largestPalindromeProduct(3), 906609, '<code>largestPalindromeProduct(3)</code>应该返回 906609。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function largestPalindromeProduct(digit) {\\n  // 祝你好运！\\n  return true;\\n}\\n\\nlargestPalindromeProduct(3);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-5-smallest-multiple\",\"id\":\"5900f3701000cf542c50fe83\"},\"slug\":\"/coding-interview-prep/project-euler/problem-4-largest-palindrome-product\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-4-largest-palindrome-product-2a7880d062d69af4c71a.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 4: Largest palindrome product\",\"description\":[\"回文数就是从前往后和从后往前读都一样的数。由两个 2 位数相乘得到的最大回文乘积是 9009 = 91 × 99。\",\"找出由两个 3 位数相乘得到的最大回文乘积。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-4-largest-palindrome-product\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>largestPalindromeProduct(2)</code>应该返回 9009。\",\"testString\":\"assert.strictEqual(largestPalindromeProduct(2), 9009, '<code>largestPalindromeProduct(2)</code>应该返回 9009。');\"},{\"text\":\"<code>largestPalindromeProduct(3)</code>应该返回 906609。\",\"testString\":\"assert.strictEqual(largestPalindromeProduct(3), 906609, '<code>largestPalindromeProduct(3)</code>应该返回 906609。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function largestPalindromeProduct(digit) {\\n  // 祝你好运！\\n  return true;\\n}\\n\\nlargestPalindromeProduct(3);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-5-smallest-multiple\",\"id\":\"5900f3701000cf542c50fe83\"},\"slug\":\"/coding-interview-prep/project-euler/problem-4-largest-palindrome-product\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-4-largest-palindrome-product.json\n// module id = 3194\n// module chunks = 138099760557931"],"sourceRoot":""}