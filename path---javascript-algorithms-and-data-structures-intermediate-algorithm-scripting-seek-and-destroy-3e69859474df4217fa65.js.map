{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-seek-and-destroy-3e69859474df4217fa65.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-seek-and-destroy.json"],"names":["webpackJsonp","3937","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,mBAAAC,aAAA,uUAAAC,cAAA,EAAAC,QAA6YC,KAAA,+FAAAC,UAAA,mCAAAC,QAA+JC,KAAA,2EAAAC,WAAA,+IAA8OD,KAAA,iFAAAC,WAAA,2JAAgQD,KAAA,wEAAAC,WAAA,yIAAqOD,KAAA,iEAAAC,WAAA,2HAAgND,KAAA,+FAAAC,WAAA,yLAAkUD,KAAA,mOAAAC,WAAA,kcAAsxBC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,kGAAqJC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,iGAAAC,GAAA,4BAAkMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-seek-and-destroy-3e69859474df4217fa65.js","sourcesContent":["webpackJsonp([158401491427299],{\n\n/***/ 3937:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Seek and Destroy\",\"description\":[\"在这道题目中，我们要写一个叫<code>destroyer</code>的函数。传给它的第一个参数是数组，我们称他为初始数组。后续的参数数量是不确定的，可能有一个或多个。你需要做的是，从初始数组中移除所有与后续参数相等的元素，并返回移除元素后的数组。\",\"<strong>注意：</strong><br> 你可以使用<code>arguments</code>对象，也可以使用<code>...</code>，即“剩余参数”（Rest Parameters）语法。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/seek-and-destroy\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>destroyer([1, 2, 3, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 1]</code>。\",\"testString\":\"assert.deepEqual(destroyer([1, 2, 3, 1, 2, 3], 2, 3), [1, 1], '<code>destroyer([1, 2, 3, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 1]</code>。');\"},{\"text\":\"<code>destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 5, 1]</code>。\",\"testString\":\"assert.deepEqual(destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3), [1, 5, 1], '<code>destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 5, 1]</code>。');\"},{\"text\":\"<code>destroyer([3, 5, 1, 2, 2], 2, 3, 5)</code>应该返回<code>[1]</code>。\",\"testString\":\"assert.deepEqual(destroyer([3, 5, 1, 2, 2], 2, 3, 5), [1], '<code>destroyer([3, 5, 1, 2, 2], 2, 3, 5)</code>应该返回<code>[1]</code>。');\"},{\"text\":\"<code>destroyer([2, 3, 2, 3], 2, 3)</code>应该返回<code>[]</code>。\",\"testString\":\"assert.deepEqual(destroyer([2, 3, 2, 3], 2, 3), [], '<code>destroyer([2, 3, 2, 3], 2, 3)</code>应该返回<code>[]</code>。');\"},{\"text\":\"<code>destroyer([\\\"tree\\\", \\\"hamburger\\\", 53], \\\"tree\\\", 53)</code>应该返回<code>[\\\"hamburger\\\"]</code>。\",\"testString\":\"assert.deepEqual(destroyer([\\\"tree\\\", \\\"hamburger\\\", 53], \\\"tree\\\", 53), [\\\"hamburger\\\"], '<code>destroyer([\\\"tree\\\", \\\"hamburger\\\", 53], \\\"tree\\\", 53)</code>应该返回<code>[\\\"hamburger\\\"]</code>。');\"},{\"text\":\"<code>destroyer([\\\"possum\\\", \\\"trollo\\\", 12, \\\"safari\\\", \\\"hotdog\\\", 92, 65, \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\", \\\"yacht\\\"], \\\"yacht\\\", \\\"possum\\\", \\\"trollo\\\", \\\"safari\\\", \\\"hotdog\\\", \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\")</code>应该返回<code>[12,92,65]</code>。\",\"testString\":\"assert.deepEqual(destroyer([\\\"possum\\\", \\\"trollo\\\", 12, \\\"safari\\\", \\\"hotdog\\\", 92, 65, \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\", \\\"yacht\\\"], \\\"yacht\\\", \\\"possum\\\", \\\"trollo\\\", \\\"safari\\\", \\\"hotdog\\\", \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\"), [12,92,65], '<code>destroyer([\\\"possum\\\", \\\"trollo\\\", 12, \\\"safari\\\", \\\"hotdog\\\", 92, 65, \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\", \\\"yacht\\\"], \\\"yacht\\\", \\\"possum\\\", \\\"trollo\\\", \\\"safari\\\", \\\"hotdog\\\", \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\")</code>应该返回<code>[12,92,65]</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function destroyer(arr) {\\n  // 删掉那些值\\n  return arr;\\n}\\n\\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/wherefore-art-thou\",\"id\":\"a39963a4c10bc8b4d4f06d7e\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/seek-and-destroy\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-seek-and-destroy-3e69859474df4217fa65.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Seek and Destroy\",\"description\":[\"在这道题目中，我们要写一个叫<code>destroyer</code>的函数。传给它的第一个参数是数组，我们称他为初始数组。后续的参数数量是不确定的，可能有一个或多个。你需要做的是，从初始数组中移除所有与后续参数相等的元素，并返回移除元素后的数组。\",\"<strong>注意：</strong><br> 你可以使用<code>arguments</code>对象，也可以使用<code>...</code>，即“剩余参数”（Rest Parameters）语法。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/seek-and-destroy\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>destroyer([1, 2, 3, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 1]</code>。\",\"testString\":\"assert.deepEqual(destroyer([1, 2, 3, 1, 2, 3], 2, 3), [1, 1], '<code>destroyer([1, 2, 3, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 1]</code>。');\"},{\"text\":\"<code>destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 5, 1]</code>。\",\"testString\":\"assert.deepEqual(destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3), [1, 5, 1], '<code>destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3)</code>应该返回<code>[1, 5, 1]</code>。');\"},{\"text\":\"<code>destroyer([3, 5, 1, 2, 2], 2, 3, 5)</code>应该返回<code>[1]</code>。\",\"testString\":\"assert.deepEqual(destroyer([3, 5, 1, 2, 2], 2, 3, 5), [1], '<code>destroyer([3, 5, 1, 2, 2], 2, 3, 5)</code>应该返回<code>[1]</code>。');\"},{\"text\":\"<code>destroyer([2, 3, 2, 3], 2, 3)</code>应该返回<code>[]</code>。\",\"testString\":\"assert.deepEqual(destroyer([2, 3, 2, 3], 2, 3), [], '<code>destroyer([2, 3, 2, 3], 2, 3)</code>应该返回<code>[]</code>。');\"},{\"text\":\"<code>destroyer([\\\"tree\\\", \\\"hamburger\\\", 53], \\\"tree\\\", 53)</code>应该返回<code>[\\\"hamburger\\\"]</code>。\",\"testString\":\"assert.deepEqual(destroyer([\\\"tree\\\", \\\"hamburger\\\", 53], \\\"tree\\\", 53), [\\\"hamburger\\\"], '<code>destroyer([\\\"tree\\\", \\\"hamburger\\\", 53], \\\"tree\\\", 53)</code>应该返回<code>[\\\"hamburger\\\"]</code>。');\"},{\"text\":\"<code>destroyer([\\\"possum\\\", \\\"trollo\\\", 12, \\\"safari\\\", \\\"hotdog\\\", 92, 65, \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\", \\\"yacht\\\"], \\\"yacht\\\", \\\"possum\\\", \\\"trollo\\\", \\\"safari\\\", \\\"hotdog\\\", \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\")</code>应该返回<code>[12,92,65]</code>。\",\"testString\":\"assert.deepEqual(destroyer([\\\"possum\\\", \\\"trollo\\\", 12, \\\"safari\\\", \\\"hotdog\\\", 92, 65, \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\", \\\"yacht\\\"], \\\"yacht\\\", \\\"possum\\\", \\\"trollo\\\", \\\"safari\\\", \\\"hotdog\\\", \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\"), [12,92,65], '<code>destroyer([\\\"possum\\\", \\\"trollo\\\", 12, \\\"safari\\\", \\\"hotdog\\\", 92, 65, \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\", \\\"yacht\\\"], \\\"yacht\\\", \\\"possum\\\", \\\"trollo\\\", \\\"safari\\\", \\\"hotdog\\\", \\\"grandma\\\", \\\"bugati\\\", \\\"trojan\\\")</code>应该返回<code>[12,92,65]</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function destroyer(arr) {\\n  // 删掉那些值\\n  return arr;\\n}\\n\\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/wherefore-art-thou\",\"id\":\"a39963a4c10bc8b4d4f06d7e\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/seek-and-destroy\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-seek-and-destroy.json\n// module id = 3937\n// module chunks = 158401491427299"],"sourceRoot":""}