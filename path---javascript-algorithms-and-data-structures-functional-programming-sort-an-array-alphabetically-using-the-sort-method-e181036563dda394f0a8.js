webpackJsonp([0xb24da2298a23],{3915:function(a,e){a.exports={data:{challengeNode:{title:"Sort an Array Alphabetically using the sort Method",description:["<code>sort</code>方法可以根据回调函数对数组元素进行排序。","举个例子：","<blockquote>function ascendingOrder(arr) {<br>&nbsp;&nbsp;return arr.sort(function(a, b) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return a - b;<br>&nbsp;&nbsp;});<br>}<br>ascendingOrder([1, 5, 2, 3, 4]);<br>// Returns [1, 2, 3, 4, 5]<br><br>function reverseAlpha(arr) {<br>&nbsp;&nbsp;return arr.sort(function(a, b) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return a < b;<br>&nbsp;&nbsp;});<br>}<br>reverseAlpha(['l', 'h', 'z', 'b', 's']);<br>// 返回 ['z', 's', 'l', 'h', 'b']</blockquote>","注意：提倡使用回调函数来指定如何对数组项进行排序。JavaScript 的默认排序算法是按照 Unicode 字符编码排序的，所以可能会返回意料之外的结果。","<hr>","在<code>alphabeticalOrder</code>函数中使用<code>sort</code>方法对<code>arr</code>中的元素按照字母顺序排列。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/functional-programming/sort-an-array-alphabetically-using-the-sort-method",blockName:"Functional Programming",tests:[{text:"应该使用<code>sort</code>方法。",testString:"assert(code.match(/\\.sort/g), '应该使用<code>sort</code>方法。');"},{text:'<code>alphabeticalOrder(["a", "d", "c", "a", "z", "g"])</code>应返回<code>["a", "a", "c", "d", "g", "z"]</code>。',testString:'assert(JSON.stringify(alphabeticalOrder(["a", "d", "c", "a", "z", "g"])) === JSON.stringify(["a", "a", "c", "d", "g", "z"]), \'<code>alphabeticalOrder(["a", "d", "c", "a", "z", "g"])</code>应返回<code>["a", "a", "c", "d", "g", "z"]</code>。\');'},{text:'<code>alphabeticalOrder(["x", "h", "a", "m", "n", "m"])</code>应返回<code>["a", "h", "m", "m", "n", "x"]</code>。',testString:'assert(JSON.stringify(alphabeticalOrder(["x", "h", "a", "m", "n", "m"])) === JSON.stringify(["a", "h", "m", "m", "n", "x"]), \'<code>alphabeticalOrder(["x", "h", "a", "m", "n", "m"])</code>应返回<code>["a", "h", "m", "m", "n", "x"]</code>。\');'},{text:'<code>alphabeticalOrder(["a", "a", "a", "a", "x", "t"])</code>应返回<code>["a", "a", "a", "a", "t", "x"]</code>。',testString:'assert(JSON.stringify(alphabeticalOrder(["a", "a", "a", "a", "x", "t"])) === JSON.stringify(["a", "a", "a", "a", "t", "x"]), \'<code>alphabeticalOrder(["a", "a", "a", "a", "x", "t"])</code>应返回<code>["a", "a", "a", "a", "t", "x"]</code>。\');'}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'function alphabeticalOrder(arr) {\n  // 请在本行以下添加你的代码\n  \n  \n  // 请在本行以上添加你的代码\n}\nalphabeticalOrder(["a", "d", "c", "a", "z", "g"]);',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/functional-programming/return-a-sorted-array-without-changing-the-original-array",id:"587d7da9367417b2b2512b69"},slug:"/javascript-algorithms-and-data-structures/functional-programming/sort-an-array-alphabetically-using-the-sort-method"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-functional-programming-sort-an-array-alphabetically-using-the-sort-method-e181036563dda394f0a8.js.map