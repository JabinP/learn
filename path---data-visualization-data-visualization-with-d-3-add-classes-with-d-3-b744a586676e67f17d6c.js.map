{"version":3,"sources":["webpack:///path---data-visualization-data-visualization-with-d-3-add-classes-with-d-3-b744a586676e67f17d6c.js","webpack:///./.cache/json/data-visualization-data-visualization-with-d-3-add-classes-with-d-3.json"],"names":["webpackJsonp","3461","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","link","raw","src","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,sBAAAC,aAAA,gRAA0T,gFAAAC,cAAA,EAAAC,QAAqHC,KAAA,qEAAAC,UAAA,6BAAAC,QAA+HC,KAAA,8CAAAC,WAAA,8FAAgKD,KAAA,8BAAAC,WAAA,oEAAqHC,WAAcC,KAAA,KAAAC,IAAA,KAAAC,IAAA,8DAAyFC,OAAWC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,gZAAuQC,KAAA,GAAAC,KAAA,IAA4NC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAjB,WAA4CC,KAAA,KAAAC,IAAA,KAAAC,IAAA,8DAAyFe,kBAAA,6FAAAC,GAAA,4BAAmJxB,KAAA","file":"path---data-visualization-data-visualization-with-d-3-add-classes-with-d-3-b744a586676e67f17d6c.js","sourcesContent":["webpackJsonp([167318731681345],{\n\n/***/ 3461:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Add Classes with D3\",\"description\":[\"即使对小型 app 来说在 HTML 元素中大量使用内联样式表也十分难以管理。更方便的是给元素添加遵守 CSS 规则的类。D3 中的<code>attr()</code>方法可以给元素添加任何 HTML 属性，包括类名称。\",\"<code>attr()</code>方法和<code>style()</code>的使用方法一样。它以逗号分隔的键值对为参数使用回调函数。这里是一个给选中元素添加类名为 \\\"container\\\" 的例子：\",\"<code>selection.attr(\\\"class\\\", \\\"container\\\");</code>\",\"<hr>\",\"在编辑器中添加<code>attr()</code>方法，给<code>div</code>元素添加类名<code>bar</code>。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/data-visualization/data-visualization-with-d3/add-classes-with-d3\",\"blockName\":\"Data Visualization with D3\",\"tests\":[{\"text\":\"你的<code>div</code>元素应该有一个<code>bar</code>类。\",\"testString\":\"assert($('div').attr('class') == \\\"bar\\\", '你的<code>div</code>元素应该有一个<code>bar</code>类。');\"},{\"text\":\"你应该使用<code>attr()</code>方法。\",\"testString\":\"assert(code.match(/\\\\.attr/g), '你应该使用<code>attr()</code>方法。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://cdnjs.cloudflare.com/ajax/libs/d3/4.3.0/d3.min.js\"}],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  .bar {\\n    width: 25px;\\n    height: 100px;\\n    display: inline-block;\\n    background-color: blue;\\n  }\\n</style>\\n<body>\\n  <script>\\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\\n    \\n    d3.select(\\\"body\\\").selectAll(\\\"div\\\")\\n      .data(dataset)\\n      .enter()\\n      .append(\\\"div\\\")\\n      // 在下面添加你的代码\\n      \\n      \\n      \\n      // 在上面添加你的代码\\n  </script>\\n</body>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://cdnjs.cloudflare.com/ajax/libs/d3/4.3.0/d3.min.js\"}],\"nextChallengePath\":\"/data-visualization/data-visualization-with-d3/update-the-height-of-an-element-dynamically\",\"id\":\"587d7fa7367417b2b2512bc8\"},\"slug\":\"/data-visualization/data-visualization-with-d3/add-classes-with-d3\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---data-visualization-data-visualization-with-d-3-add-classes-with-d-3-b744a586676e67f17d6c.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Add Classes with D3\",\"description\":[\"即使对小型 app 来说在 HTML 元素中大量使用内联样式表也十分难以管理。更方便的是给元素添加遵守 CSS 规则的类。D3 中的<code>attr()</code>方法可以给元素添加任何 HTML 属性，包括类名称。\",\"<code>attr()</code>方法和<code>style()</code>的使用方法一样。它以逗号分隔的键值对为参数使用回调函数。这里是一个给选中元素添加类名为 \\\"container\\\" 的例子：\",\"<code>selection.attr(\\\"class\\\", \\\"container\\\");</code>\",\"<hr>\",\"在编辑器中添加<code>attr()</code>方法，给<code>div</code>元素添加类名<code>bar</code>。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/data-visualization/data-visualization-with-d3/add-classes-with-d3\",\"blockName\":\"Data Visualization with D3\",\"tests\":[{\"text\":\"你的<code>div</code>元素应该有一个<code>bar</code>类。\",\"testString\":\"assert($('div').attr('class') == \\\"bar\\\", '你的<code>div</code>元素应该有一个<code>bar</code>类。');\"},{\"text\":\"你应该使用<code>attr()</code>方法。\",\"testString\":\"assert(code.match(/\\\\.attr/g), '你应该使用<code>attr()</code>方法。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://cdnjs.cloudflare.com/ajax/libs/d3/4.3.0/d3.min.js\"}],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  .bar {\\n    width: 25px;\\n    height: 100px;\\n    display: inline-block;\\n    background-color: blue;\\n  }\\n</style>\\n<body>\\n  <script>\\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\\n    \\n    d3.select(\\\"body\\\").selectAll(\\\"div\\\")\\n      .data(dataset)\\n      .enter()\\n      .append(\\\"div\\\")\\n      // 在下面添加你的代码\\n      \\n      \\n      \\n      // 在上面添加你的代码\\n  </script>\\n</body>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://cdnjs.cloudflare.com/ajax/libs/d3/4.3.0/d3.min.js\"}],\"nextChallengePath\":\"/data-visualization/data-visualization-with-d3/update-the-height-of-an-element-dynamically\",\"id\":\"587d7fa7367417b2b2512bc8\"},\"slug\":\"/data-visualization/data-visualization-with-d3/add-classes-with-d3\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/data-visualization-data-visualization-with-d-3-add-classes-with-d-3.json\n// module id = 3461\n// module chunks = 167318731681345"],"sourceRoot":""}