{"version":3,"sources":["webpack:///path---front-end-libraries-react-learn-about-self-closing-jsx-tags-f589617d6c229a6c35a6.js","webpack:///./.cache/json/front-end-libraries-react-learn-about-self-closing-jsx-tags.json"],"names":["webpackJsonp","3584","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","link","raw","src","files","indexhtml","indexjs","indexjsx","key","ext","name","contents","head","tail","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oCAAAC,aAAA,6QAAiP,sHAAwL,qRAAuP,oEAAAC,cAAA,EAAAC,QAAmJC,KAAA,+DAAAC,UAAA,QAAAC,QAAoGC,KAAA,8CAAAC,WAAA,wFAA0JD,KAAA,2CAAAC,WAAA,qGAAoKD,KAAA,2CAAAC,WAAA,sGAAoKC,WAAcC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGC,OAAWC,UAAA,KAAAC,QAAA,KAAAC,UAA4CC,IAAA,WAAAC,IAAA,MAAAC,KAAA,QAAAC,SAAA,iPAAoSC,KAAA,GAAAC,KAAA,4DAAgFC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,qFAAsGjB,WAAsBC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGe,kBAAA,qEAAAC,GAAA,4BAA2HxB,KAAA","file":"path---front-end-libraries-react-learn-about-self-closing-jsx-tags-f589617d6c229a6c35a6.js","sourcesContent":["webpackJsonp([265121037206001],{\n\n/***/ 3584:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Learn About Self-Closing JSX Tags\",\"description\":[\"到目前为止，你已经看到 JSX 与 HTML 的不同之处在于使用<code>className</code>和使用<code>class</code>来定义 HTML 的 class。\",\"JSX 不同于 HTML 的另一个重要方面是自闭合标签。\",\"在HTML中，几乎所有的标签都有一个开始和结束标签：<code>&lt;div&gt;&lt;/div&gt;</code>，结束标签在你要关闭的标签名之前始终具有正斜杠。但是，HTML 中有一些称为“自闭合标签”的特殊实例，它们在另一个标签开始之前，不需要开始和结束标签都存在。\",\"例如，换行标签可以写成<code>&lt;br&gt;</code>或者<code>&lt;br /&gt;</code>，但是不应该写成<code>&lt;br&gt;&lt;/br&gt;</code>，因为它不包含任何内容。\",\"在 JSX 中，规则略有不同。任何 JSX 元素都可以使用自闭合标签编写，并且每个元素都必须关闭。例如，换行标签必须始终编写为<code>&lt;br /&gt;</code>。另一方面<code>&lt;div&gt;</code>可以写成<code>&lt;div /&gt;</code>或者<code>&lt;div&gt;&lt;/div&gt;</code>。不同之处在于，在第一个语法版本中，无法在<code>&lt;div /&gt;</code>中包含任何内容。在后面的挑战中你会发现，这种语法在渲染 React 组件时非常有用。\",\"<hr>\",\"修复代码编辑器中的错误，使其成为有效的 JSX 并成功转换。确保你不更改任何内容--你只需要在需要的地方关闭标签。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/learn-about-self-closing-jsx-tags\",\"blockName\":\"React\",\"tests\":[{\"text\":\"常量<code>JSX</code>应该返回一个<code>div</code>元素。\",\"testString\":\"assert.strictEqual(JSX.type, 'div', '常量<code>JSX</code>应该返回一个<code>div</code>元素。');\"},{\"text\":\"<code>div</code>应该包含一个<code>br</code>标签。\",\"testString\":\"assert(Enzyme.shallow(JSX).find('br').length === 1, '<code>div</code>应该包含一个<code>br</code>标签。');\"},{\"text\":\"<code>div</code>应该包含一个<code>hr</code>标签。\",\"testString\":\"assert(Enzyme.shallow(JSX).find('hr').length === 1, '<code>div</code>应该包含一个<code>hr</code>标签。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"const JSX = (\\n  <div>\\n    {/* remove comment and change code below this line\\n    <h2>Welcome to React!</h2> <br >\\n    <p>Be sure to close all tags!</p>\\n    <hr >\\n    remove comment and change code above this line */}\\n  </div>\\n);\\n\",\"head\":\"\",\"tail\":\"ReactDOM.render(JSX, document.getElementById('root'))\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/create-a-stateless-functional-component\",\"id\":\"5a24c314108439a4d4036161\"},\"slug\":\"/front-end-libraries/react/learn-about-self-closing-jsx-tags\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---front-end-libraries-react-learn-about-self-closing-jsx-tags-f589617d6c229a6c35a6.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Learn About Self-Closing JSX Tags\",\"description\":[\"到目前为止，你已经看到 JSX 与 HTML 的不同之处在于使用<code>className</code>和使用<code>class</code>来定义 HTML 的 class。\",\"JSX 不同于 HTML 的另一个重要方面是自闭合标签。\",\"在HTML中，几乎所有的标签都有一个开始和结束标签：<code>&lt;div&gt;&lt;/div&gt;</code>，结束标签在你要关闭的标签名之前始终具有正斜杠。但是，HTML 中有一些称为“自闭合标签”的特殊实例，它们在另一个标签开始之前，不需要开始和结束标签都存在。\",\"例如，换行标签可以写成<code>&lt;br&gt;</code>或者<code>&lt;br /&gt;</code>，但是不应该写成<code>&lt;br&gt;&lt;/br&gt;</code>，因为它不包含任何内容。\",\"在 JSX 中，规则略有不同。任何 JSX 元素都可以使用自闭合标签编写，并且每个元素都必须关闭。例如，换行标签必须始终编写为<code>&lt;br /&gt;</code>。另一方面<code>&lt;div&gt;</code>可以写成<code>&lt;div /&gt;</code>或者<code>&lt;div&gt;&lt;/div&gt;</code>。不同之处在于，在第一个语法版本中，无法在<code>&lt;div /&gt;</code>中包含任何内容。在后面的挑战中你会发现，这种语法在渲染 React 组件时非常有用。\",\"<hr>\",\"修复代码编辑器中的错误，使其成为有效的 JSX 并成功转换。确保你不更改任何内容--你只需要在需要的地方关闭标签。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/learn-about-self-closing-jsx-tags\",\"blockName\":\"React\",\"tests\":[{\"text\":\"常量<code>JSX</code>应该返回一个<code>div</code>元素。\",\"testString\":\"assert.strictEqual(JSX.type, 'div', '常量<code>JSX</code>应该返回一个<code>div</code>元素。');\"},{\"text\":\"<code>div</code>应该包含一个<code>br</code>标签。\",\"testString\":\"assert(Enzyme.shallow(JSX).find('br').length === 1, '<code>div</code>应该包含一个<code>br</code>标签。');\"},{\"text\":\"<code>div</code>应该包含一个<code>hr</code>标签。\",\"testString\":\"assert(Enzyme.shallow(JSX).find('hr').length === 1, '<code>div</code>应该包含一个<code>hr</code>标签。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"const JSX = (\\n  <div>\\n    {/* remove comment and change code below this line\\n    <h2>Welcome to React!</h2> <br >\\n    <p>Be sure to close all tags!</p>\\n    <hr >\\n    remove comment and change code above this line */}\\n  </div>\\n);\\n\",\"head\":\"\",\"tail\":\"ReactDOM.render(JSX, document.getElementById('root'))\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/create-a-stateless-functional-component\",\"id\":\"5a24c314108439a4d4036161\"},\"slug\":\"/front-end-libraries/react/learn-about-self-closing-jsx-tags\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/front-end-libraries-react-learn-about-self-closing-jsx-tags.json\n// module id = 3584\n// module chunks = 265121037206001"],"sourceRoot":""}