webpackJsonp([19639127888118],{3929:function(e,t){e.exports={data:{challengeNode:{title:"DNA Pairing",description:["在这道题目中，我们需要写一个函数，为 DNA 中的碱基配对。这个函数只接收一个表示碱基的字符串为参数，最后返回完成配对的二维数组。",'<a href="http://en.wikipedia.org/wiki/Base_pair" target="_blank">碱基对</a> 由一对碱基组成。碱基有四种，分别为 A（腺嘌呤）、T（胸腺嘧啶）、G（鸟嘌呤）和 C（胞嘧啶）。配对原则是：A 与 T 配对，C 与 G 配对。我们需要根据这个原则对传入的所有碱基进行配对。',"对于每个传入的碱基，我们应采用数组的形式展示配对结果。其中，传入的碱基需要作为数组的第一个元素出现。最终返回的数组中应当包含参数中每一个碱基的配对结果。",'比如，传入的参数是 GCG，那么函数的返回值应为 [["G", "C"], ["C","G"],["G", "C"]]',"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。"],challengeType:5,fields:{slug:"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing",blockName:"Intermediate Algorithm Scripting",tests:[{text:'<code>pairElement("ATCGA")</code>应该返回<code>[["A","T"],["T","A"],["C","G"],["G","C"],["A","T"]]</code>。',testString:'assert.deepEqual(pairElement("ATCGA"),[["A","T"],["T","A"],["C","G"],["G","C"],["A","T"]], \'<code>pairElement("ATCGA")</code>应该返回<code>[["A","T"],["T","A"],["C","G"],["G","C"],["A","T"]]</code>。\');'},{text:'<code>pairElement("TTGAG")</code>应该返回<code>[["T","A"],["T","A"],["G","C"],["A","T"],["G","C"]]</code>。',testString:'assert.deepEqual(pairElement("TTGAG"),[["T","A"],["T","A"],["G","C"],["A","T"],["G","C"]], \'<code>pairElement("TTGAG")</code>应该返回<code>[["T","A"],["T","A"],["G","C"],["A","T"],["G","C"]]</code>。\');'},{text:'<code>pairElement("CTCTA")</code>应该返回<code>[["C","G"],["T","A"],["C","G"],["T","A"],["A","T"]]</code>。',testString:'assert.deepEqual(pairElement("CTCTA"),[["C","G"],["T","A"],["C","G"],["T","A"],["A","T"]], \'<code>pairElement("CTCTA")</code>应该返回<code>[["C","G"],["T","A"],["C","G"],["T","A"],["A","T"]]</code>。\');'}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'function pairElement(str) {\n  return str;\n}\n\npairElement("GCG");',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/missing-letters",id:"afd15382cdfb22c9efe8b7de"},slug:"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-dna-pairing-54b9d22b459ab7ea10ae.js.map