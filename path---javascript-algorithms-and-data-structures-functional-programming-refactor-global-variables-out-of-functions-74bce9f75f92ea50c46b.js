webpackJsonp([0x9bac9342c357],{3911:function(i,e){i.exports={data:{challengeNode:{title:"Refactor Global Variables Out of Functions",description:["目前为止，我们已经看到了函数式编程的两个原则：","1) 不要更改变量或对象——创建新变量和对象，并在需要时从函数返回它们。","2) 声明函数参数——函数内的任何计算仅取决于参数，而不取决于任何全局对象或变量。","给数字增加 1 不够刺激，我们可以在处理数组或更复杂的对象时应用这些原则。","<hr>","重构代码，使全局数组<code>bookList</code>在函数内部不会被改变。<code>add</code>函数可以将指定的<code>bookName</code>增加到数组末尾。<code>remove</code>函数可以从数组中移除指定<code>bookName</code>。两个函数都返回数组，并且任何参数都应该添加到<code>bookName</code>前面。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/functional-programming/refactor-global-variables-out-of-functions",blockName:"Functional Programming",tests:[{text:'<code>bookList</code>不应该改变，应等于<code>["The Hound of the Baskervilles", "On The Electrodynamics of Moving Bodies", "Philosophiæ Naturalis Principia Mathematica", "Disquisitiones Arithmeticae"]</code>.',testString:'assert(JSON.stringify(bookList) === JSON.stringify(["The Hound of the Baskervilles", "On The Electrodynamics of Moving Bodies", "Philosophiæ Naturalis Principia Mathematica", "Disquisitiones Arithmeticae"]), \'<code>bookList</code>不应该改变，应等于<code>["The Hound of the Baskervilles", "On The Electrodynamics of Moving Bodies", "Philosophiæ Naturalis Principia Mathematica", "Disquisitiones Arithmeticae"]</code>.\');'},{text:'<code>newBookList</code>应等于<code>["The Hound of the Baskervilles", "On The Electrodynamics of Moving Bodies", "Philosophiæ Naturalis Principia Mathematica", "Disquisitiones Arithmeticae", "A Brief History of Time"]</code>.',testString:"assert(JSON.stringify(newBookList) === JSON.stringify(['The Hound of the Baskervilles', 'On The Electrodynamics of Moving Bodies', 'Philosophiæ Naturalis Principia Mathematica', 'Disquisitiones Arithmeticae', 'A Brief History of Time']), '<code>newBookList</code>应等于<code>[\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\", \"A Brief History of Time\"]</code>.');"},{text:'<code>newerBookList</code>应等于<code>["The Hound of the Baskervilles", "Philosophiæ Naturalis Principia Mathematica", "Disquisitiones Arithmeticae"]</code>.',testString:"assert(JSON.stringify(newerBookList) === JSON.stringify(['The Hound of the Baskervilles', 'Philosophiæ Naturalis Principia Mathematica', 'Disquisitiones Arithmeticae']), '<code>newerBookList</code>应等于<code>[\"The Hound of the Baskervilles\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\"]</code>.');"},{text:'<code>newestBookList</code>应等于<code>["The Hound of the Baskervilles", "Philosophiæ Naturalis Principia Mathematica", "Disquisitiones Arithmeticae", "A Brief History of Time"]</code>.',testString:"assert(JSON.stringify(newestBookList) === JSON.stringify(['The Hound of the Baskervilles', 'Philosophiæ Naturalis Principia Mathematica', 'Disquisitiones Arithmeticae', 'A Brief History of Time']), '<code>newestBookList</code>应等于<code>[\"The Hound of the Baskervilles\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\", \"A Brief History of Time\"]</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"// 全局变量\nvar bookList = [\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"Philosophiæ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\"];\n\n/* 这个函数应该增加一本书到列表中，并返回这个列表 */\n// 新参数应在 bookName 之前\n\n// 请在本行以下添加你的代码\nfunction add (bookName) {\n  \n  return bookList.push(bookName);\n  \n  // 请在本行以上添加你的代码\n}\n\n/* 这个函数应该移除一本书到列表中，并返回这个列表 */\n// 新参数应在 bookName 之前\n\n// 请在本行以下添加你的代码\nfunction remove (bookName) {\n  if (bookList.indexOf(bookName) >= 0) {\n    \n    return bookList.splice(0, 1, bookName);\n    \n    // 请在本行以上添加你的代码\n    }\n}\n\nvar newBookList = add(bookList, 'A Brief History of Time');\nvar newerBookList = remove(bookList, 'On The Electrodynamics of Moving Bodies');\nvar newestBookList = remove(add(bookList, 'A Brief History of Time'), 'On The Electrodynamics of Moving Bodies');\n\nconsole.log(bookList);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/functional-programming/use-the-map-method-to-extract-data-from-an-array",id:"587d7b8f367417b2b2512b60"},slug:"/javascript-algorithms-and-data-structures/functional-programming/refactor-global-variables-out-of-functions"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-functional-programming-refactor-global-variables-out-of-functions-74bce9f75f92ea50c46b.js.map