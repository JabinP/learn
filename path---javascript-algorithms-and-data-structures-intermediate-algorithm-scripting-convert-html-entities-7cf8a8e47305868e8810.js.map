{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-convert-html-entities-7cf8a8e47305868e8810.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-convert-html-entities.json"],"names":["webpackJsonp","3927","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wBAAAC,aAAA,uUAAAC,cAAA,EAAAC,QAAkZC,KAAA,oGAAAC,UAAA,mCAAAC,QAAoKC,KAAA,0FAAiFC,WAAA,sKAAuMD,KAAA,yHAAkHC,WAAA,6NAA4PD,KAAA,uFAA+EC,WAAA,gKAAgMD,KAAA,uIAAsIC,WAAA,iPAAwQD,KAAA,kGAA2FC,WAAA,kLAAgND,KAAA,yEAAwEC,WAAA,6HAAoJD,KAAA,uDAAAC,WAAA,8GAA0LC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,uGAA4JC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,4GAAAC,GAAA,4BAA6MrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-convert-html-entities-7cf8a8e47305868e8810.js","sourcesContent":["webpackJsonp([131045695868635],{\n\n/***/ 3927:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Convert HTML Entities\",\"description\":[\"在这道题目中，我们需要写一个转换 HTML entity 的函数。需要转换的 HTML entity 有<code>&</code>、<code><</code>、<code>></code>、<code>\\\"</code>（双引号）和<code>'</code>（单引号）。转换的规则你可以在 <a href='https://dev.w3.org/html5/html-author/charref' target='_blank'>W3C</a> 官网找到。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/convert-html-entities\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>convertHTML(\\\"Dolce & Gabbana\\\")</code>应该返回<code>Dolce &&#8203;amp; Gabbana</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Dolce & Gabbana\\\"), /Dolce &amp; Gabbana/, '<code>convertHTML(\\\"Dolce & Gabbana\\\")</code>应该返回<code>Dolce &&#8203;amp; Gabbana</code>。');\"},{\"text\":\"<code>convertHTML(\\\"Hamburgers < Pizza < Tacos\\\")</code>应该返回<code>Hamburgers &&#8203;lt; Pizza &&#8203;lt; Tacos</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Hamburgers < Pizza < Tacos\\\"), /Hamburgers &lt; Pizza &lt; Tacos/, '<code>convertHTML(\\\"Hamburgers < Pizza < Tacos\\\")</code>应该返回<code>Hamburgers &&#8203;lt; Pizza &&#8203;lt; Tacos</code>。');\"},{\"text\":\"<code>convertHTML(\\\"Sixty > twelve\\\")</code>应该返回<code>Sixty &&#8203;gt; twelve</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Sixty > twelve\\\"), /Sixty &gt; twelve/, '<code>convertHTML(\\\"Sixty > twelve\\\")</code>应该返回<code>Sixty &&#8203;gt; twelve</code>。');\"},{\"text\":\"<code>convertHTML(&apos;Stuff in \\\"quotation marks\\\"&apos;)</code>应该返回<code>Stuff in &&#8203;quot;quotation marks&&#8203;quot;</code>。\",\"testString\":\"assert.match(convertHTML('Stuff in \\\"quotation marks\\\"'), /Stuff in &quot;quotation marks&quot;/, '<code>convertHTML(&apos;Stuff in \\\"quotation marks\\\"&apos;)</code>应该返回<code>Stuff in &&#8203;quot;quotation marks&&#8203;quot;</code>。');\"},{\"text\":\"<code>convertHTML(\\\"Schindler&apos;s List\\\")</code>应该返回<code>Schindler&&#8203;apos;s List</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Schindler's List\\\"), /Schindler&apos;s List/, '<code>convertHTML(\\\"Schindler&apos;s List\\\")</code>应该返回<code>Schindler&&#8203;apos;s List</code>。');\"},{\"text\":\"<code>convertHTML(\\\"<>\\\")</code>应该返回<code>&&#8203;lt;&&#8203;gt;</code>。\",\"testString\":\"assert.match(convertHTML('<>'), /&lt;&gt;/, '<code>convertHTML(\\\"<>\\\")</code>应该返回<code>&&#8203;lt;&&#8203;gt;</code>。');\"},{\"text\":\"<code>convertHTML(\\\"abc\\\")</code>应该返回<code>abc</code>。\",\"testString\":\"assert.strictEqual(convertHTML('abc'), 'abc', '<code>convertHTML(\\\"abc\\\")</code>应该返回<code>abc</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function convertHTML(str) {\\n  // &colon;&rpar;\\n  return str;\\n}\\n\\nconvertHTML(\\\"Dolce & Gabbana\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers\",\"id\":\"a6b0bb188d873cb2c8729495\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/convert-html-entities\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-convert-html-entities-7cf8a8e47305868e8810.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Convert HTML Entities\",\"description\":[\"在这道题目中，我们需要写一个转换 HTML entity 的函数。需要转换的 HTML entity 有<code>&</code>、<code><</code>、<code>></code>、<code>\\\"</code>（双引号）和<code>'</code>（单引号）。转换的规则你可以在 <a href='https://dev.w3.org/html5/html-author/charref' target='_blank'>W3C</a> 官网找到。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/convert-html-entities\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>convertHTML(\\\"Dolce & Gabbana\\\")</code>应该返回<code>Dolce &&#8203;amp; Gabbana</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Dolce & Gabbana\\\"), /Dolce &amp; Gabbana/, '<code>convertHTML(\\\"Dolce & Gabbana\\\")</code>应该返回<code>Dolce &&#8203;amp; Gabbana</code>。');\"},{\"text\":\"<code>convertHTML(\\\"Hamburgers < Pizza < Tacos\\\")</code>应该返回<code>Hamburgers &&#8203;lt; Pizza &&#8203;lt; Tacos</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Hamburgers < Pizza < Tacos\\\"), /Hamburgers &lt; Pizza &lt; Tacos/, '<code>convertHTML(\\\"Hamburgers < Pizza < Tacos\\\")</code>应该返回<code>Hamburgers &&#8203;lt; Pizza &&#8203;lt; Tacos</code>。');\"},{\"text\":\"<code>convertHTML(\\\"Sixty > twelve\\\")</code>应该返回<code>Sixty &&#8203;gt; twelve</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Sixty > twelve\\\"), /Sixty &gt; twelve/, '<code>convertHTML(\\\"Sixty > twelve\\\")</code>应该返回<code>Sixty &&#8203;gt; twelve</code>。');\"},{\"text\":\"<code>convertHTML(&apos;Stuff in \\\"quotation marks\\\"&apos;)</code>应该返回<code>Stuff in &&#8203;quot;quotation marks&&#8203;quot;</code>。\",\"testString\":\"assert.match(convertHTML('Stuff in \\\"quotation marks\\\"'), /Stuff in &quot;quotation marks&quot;/, '<code>convertHTML(&apos;Stuff in \\\"quotation marks\\\"&apos;)</code>应该返回<code>Stuff in &&#8203;quot;quotation marks&&#8203;quot;</code>。');\"},{\"text\":\"<code>convertHTML(\\\"Schindler&apos;s List\\\")</code>应该返回<code>Schindler&&#8203;apos;s List</code>。\",\"testString\":\"assert.match(convertHTML(\\\"Schindler's List\\\"), /Schindler&apos;s List/, '<code>convertHTML(\\\"Schindler&apos;s List\\\")</code>应该返回<code>Schindler&&#8203;apos;s List</code>。');\"},{\"text\":\"<code>convertHTML(\\\"<>\\\")</code>应该返回<code>&&#8203;lt;&&#8203;gt;</code>。\",\"testString\":\"assert.match(convertHTML('<>'), /&lt;&gt;/, '<code>convertHTML(\\\"<>\\\")</code>应该返回<code>&&#8203;lt;&&#8203;gt;</code>。');\"},{\"text\":\"<code>convertHTML(\\\"abc\\\")</code>应该返回<code>abc</code>。\",\"testString\":\"assert.strictEqual(convertHTML('abc'), 'abc', '<code>convertHTML(\\\"abc\\\")</code>应该返回<code>abc</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function convertHTML(str) {\\n  // &colon;&rpar;\\n  return str;\\n}\\n\\nconvertHTML(\\\"Dolce & Gabbana\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers\",\"id\":\"a6b0bb188d873cb2c8729495\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/convert-html-entities\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-convert-html-entities.json\n// module id = 3927\n// module chunks = 131045695868635"],"sourceRoot":""}