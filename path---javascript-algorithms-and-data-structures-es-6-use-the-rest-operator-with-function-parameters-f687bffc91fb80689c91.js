webpackJsonp([0x831413f41f81],{3893:function(e,t){e.exports={data:{challengeNode:{title:"Use the Rest Operator with Function Parameters",description:["ES6 推出了用于函数参数的<dfn> rest 操作符</dfn>帮助我们创建更加灵活的函数。在<code>rest</code>操作符的帮助下，你可以创建有一个变量来接受多个参数的函数。这些参数被储存在一个可以在函数内部读取的数组中。","请看以下代码：",'<blockquote>function howMany(...args) {<br>&nbsp;&nbsp;return "You have passed " + args.length + " arguments.";<br>}<br>console.log(howMany(0, 1, 2)); // 输出：You have passed 3 arguments.<br>console.log(howMany("string", null, [1, 2, 3], { })); // 输出：You have passed 4 arguments.</blockquote>',"<code>rest</code>操作符可以避免查看<code>args</code>数组的需求，并且允许我们在参数数组上使用<code>map()</code>,<code>fiter()</code>，和<code>reduce()</code>。","<hr>","修改<code>sum</code>函数，来让它使用<code>rest</code>操作符，并且它可以在有任何数量的参数时以相同的形式工作。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/es6/use-the-rest-operator-with-function-parameters",blockName:"ES6",tests:[{text:"<code>sum(0,1,2)</code>的返回结果应该为3。",testString:"assert(sum(0,1,2) === 3, '<code>sum(0,1,2)</code>的返回结果应该为3。');"},{text:"<code>sum(1,2,3,4)</code>的返回结果应该为10。",testString:"assert(sum(1,2,3,4) === 10, '<code>sum(1,2,3,4)</code>的返回结果应该为10。');"},{text:"<code>sum(5)</code>的返回结果应该为5。",testString:"assert(sum(5) === 5, '<code>sum(5)</code>的返回结果应该为5。');"},{text:"<code>sum()</code>的返回结果应该为 0。",testString:"assert(sum() === 0, '<code>sum()</code>的返回结果应该为 0。');"},{text:"对<code>sum</code>函数的<code>args</code>参数使用了<code>...</code>展开操作符。",testString:"getUserInput => assert(getUserInput('index').match(/function\\s+sum\\s*\\(\\s*...args\\s*\\)\\s*{/g), '对<code>sum</code>函数的<code>args</code>参数使用了<code>...</code>展开操作符。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'const sum = (function() {\n  "use strict";\n  return function sum(x, y, z) {\n    const args = [ x, y, z ];\n    return args.reduce((a, b) => a + b, 0);\n  };\n})();\nconsole.log(sum(1, 2, 3)); // 6',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/es6/use-the-spread-operator-to-evaluate-arrays-in-place",id:"587d7b88367417b2b2512b47"},slug:"/javascript-algorithms-and-data-structures/es6/use-the-rest-operator-with-function-parameters"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-es-6-use-the-rest-operator-with-function-parameters-f687bffc91fb80689c91.js.map