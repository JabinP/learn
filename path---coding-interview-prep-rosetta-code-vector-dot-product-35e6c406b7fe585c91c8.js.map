{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-vector-dot-product-35e6c406b7fe585c91c8.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-vector-dot-product.json"],"names":["webpackJsonp","3423","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,cAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qBAAAC,aAAA,yIAAwK,qPAAAC,cAAA,EAAAC,QAA8RC,KAAA,yDAAAC,UAAA,eAAAC,QAAqGC,KAAA,gCAAAC,WAAA,kFAAsID,KAAA,gCAAAC,WAAA,uEAA2HD,KAAA,wCAAAC,WAAA,oFAAgJD,KAAA,8CAAAC,WAAA,gGAAkKD,KAAA,qDAAAC,WAAA,gHAAyLD,KAAA,4DAAAC,WAAA,yMAAwRC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,gDAAmGC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,gDAAAC,GAAA,4BAAiJrB,KAAA","file":"path---coding-interview-prep-rosetta-code-vector-dot-product-35e6c406b7fe585c91c8.js","sourcesContent":["webpackJsonp([62265277156],{\n\n/***/ 3423:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Vector dot product\",\"description\":[\"<p>\",\"A vector is defined as having three dimensions as being represented by an ordered collection of three numbers: &nbsp; (X, Y, Z).\",\"</p>\",\"<p>\",\"Task:\",\"\",\"    Write a function that takes any numbers of vectors (arrays) as input and computes their dot product.\",\"\",\"Your function should return <code>null</code> on\",\"invalid inputs (ie vectors of different lengths).\",\"</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/vector-dot-product\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"dotProduct must be a function\",\"testString\":\"assert.equal(typeof dotProduct, 'function', 'dotProduct must be a function');\"},{\"text\":\"dotProduct() must return null\",\"testString\":\"assert.equal(dotProduct(), null, 'dotProduct() must return null');\"},{\"text\":\"dotProduct([[1], [1]]) must return 1.\",\"testString\":\"assert.equal(dotProduct([1], [1]), 1, 'dotProduct([[1], [1]]) must return 1.');\"},{\"text\":\"dotProduct([[1], [1, 2]]) must return null.\",\"testString\":\"assert.equal(dotProduct([1], [1, 2]), null, 'dotProduct([[1], [1, 2]]) must return null.');\"},{\"text\":\"dotProduct([1, 3, -5], [4, -2, -1]) must return 3.\",\"testString\":\"assert.equal(dotProduct([1, 3, -5], [4, -2, -1]), 3, 'dotProduct([1, 3, -5], [4, -2, -1]) must return 3.');\"},{\"text\":\"<code>dotProduct(...nVectors)</code> should return 156000\",\"testString\":\"assert.equal(dotProduct([ 0, 1, 2, 3, 4 ], [ 0, 2, 4, 6, 8 ], [ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ], [ 0, 5, 10, 15, 20 ]), 156000, '<code>dotProduct(...nVectors)</code> should return 156000');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function dotProduct() {\\n    // Good luck!\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/word-wrap\",\"id\":\"594810f028c0303b75339ad3\"},\"slug\":\"/coding-interview-prep/rosetta-code/vector-dot-product\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-vector-dot-product-35e6c406b7fe585c91c8.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Vector dot product\",\"description\":[\"<p>\",\"A vector is defined as having three dimensions as being represented by an ordered collection of three numbers: &nbsp; (X, Y, Z).\",\"</p>\",\"<p>\",\"Task:\",\"\",\"    Write a function that takes any numbers of vectors (arrays) as input and computes their dot product.\",\"\",\"Your function should return <code>null</code> on\",\"invalid inputs (ie vectors of different lengths).\",\"</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/vector-dot-product\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"dotProduct must be a function\",\"testString\":\"assert.equal(typeof dotProduct, 'function', 'dotProduct must be a function');\"},{\"text\":\"dotProduct() must return null\",\"testString\":\"assert.equal(dotProduct(), null, 'dotProduct() must return null');\"},{\"text\":\"dotProduct([[1], [1]]) must return 1.\",\"testString\":\"assert.equal(dotProduct([1], [1]), 1, 'dotProduct([[1], [1]]) must return 1.');\"},{\"text\":\"dotProduct([[1], [1, 2]]) must return null.\",\"testString\":\"assert.equal(dotProduct([1], [1, 2]), null, 'dotProduct([[1], [1, 2]]) must return null.');\"},{\"text\":\"dotProduct([1, 3, -5], [4, -2, -1]) must return 3.\",\"testString\":\"assert.equal(dotProduct([1, 3, -5], [4, -2, -1]), 3, 'dotProduct([1, 3, -5], [4, -2, -1]) must return 3.');\"},{\"text\":\"<code>dotProduct(...nVectors)</code> should return 156000\",\"testString\":\"assert.equal(dotProduct([ 0, 1, 2, 3, 4 ], [ 0, 2, 4, 6, 8 ], [ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ], [ 0, 5, 10, 15, 20 ]), 156000, '<code>dotProduct(...nVectors)</code> should return 156000');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function dotProduct() {\\n    // Good luck!\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/word-wrap\",\"id\":\"594810f028c0303b75339ad3\"},\"slug\":\"/coding-interview-prep/rosetta-code/vector-dot-product\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-vector-dot-product.json\n// module id = 3423\n// module chunks = 62265277156"],"sourceRoot":""}