{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-accessing-nested-arrays-404e220765ab0d81be93.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-accessing-nested-arrays.json"],"names":["webpackJsonp","3755","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,0BAAAC,aAAA,ywBAAmzB,wDAAAC,cAAA,EAAAC,QAA+GC,KAAA,sFAAAC,UAAA,mBAAAC,QAAsIC,KAAA,qCAAAC,WAAA,2EAAwID,KAAA,0CAAAC,WAAA,uGAAoKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,kSAA2VC,KAAA,GAAAC,KAAA,mJAAmLC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,gFAAAC,GAAA,4BAAiLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-accessing-nested-arrays-404e220765ab0d81be93.js","sourcesContent":["webpackJsonp([64497901878730],{\n\n/***/ 3755:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Accessing Nested Arrays\",\"description\":[\"正如我们在前面的例子所见，对象可以嵌套对象和数组。与访问嵌套对象一样，用中括号操作符同样可以访问嵌套数组。\",\"下面是如何访问嵌套数组的例子：\",\"<blockquote>var ourPets = [<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;animalType: \\\"cat\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;names: [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Meowzer\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Fluffy\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Kit-Cat\\\"<br>&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;},<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;animalType: \\\"dog\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;names: [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Spot\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Bowser\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Frankie\\\"<br>&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;}<br>];<br>ourPets[0].names[1]; // \\\"Fluffy\\\"<br>ourPets[1].names[0]; // \\\"Spot\\\"</blockquote>\",\"<hr>\",\"使用点操作符和中括号操作符来检索变量<code>myPlants</code>的第二棵树。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>secondTree</code>应该等于 \\\"pine\\\"\",\"testString\":\"assert(secondTree === \\\"pine\\\", '<code>secondTree</code>应该等于 \\\"pine\\\"');\"},{\"text\":\"使用点操作符和中括号操作符来检索变量<code>myPlants</code>\",\"testString\":\"assert(/=\\\\s*myPlants\\\\[1\\\\].list\\\\[1\\\\]/.test(code), '使用点操作符和中括号操作符来检索变量<code>myPlants</code>');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nvar myPlants = [\\n  { \\n    type: \\\"flowers\\\",\\n    list: [\\n      \\\"rose\\\",\\n      \\\"tulip\\\",\\n      \\\"dandelion\\\"\\n    ]\\n  },\\n  {\\n    type: \\\"trees\\\",\\n    list: [\\n      \\\"fir\\\",\\n      \\\"pine\\\",\\n      \\\"birch\\\"\\n    ]\\n  }  \\n];\\n\\n// 请把你的代码写在这条注释以下\\n\\nvar secondTree = \\\"\\\"; // 请修改这一行\\n\",\"head\":\"\",\"tail\":\"(function(x) { \\n  if(typeof x != 'undefined') { \\n    return \\\"secondTree = \\\" + x;\\n  }\\n  return \\\"secondTree is undefined\\\";\\n})(secondTree);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/record-collection\",\"id\":\"56533eb9ac21ba0edf2244cd\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-accessing-nested-arrays-404e220765ab0d81be93.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Accessing Nested Arrays\",\"description\":[\"正如我们在前面的例子所见，对象可以嵌套对象和数组。与访问嵌套对象一样，用中括号操作符同样可以访问嵌套数组。\",\"下面是如何访问嵌套数组的例子：\",\"<blockquote>var ourPets = [<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;animalType: \\\"cat\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;names: [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Meowzer\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Fluffy\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Kit-Cat\\\"<br>&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;},<br>&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;animalType: \\\"dog\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;names: [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Spot\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Bowser\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\"Frankie\\\"<br>&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;}<br>];<br>ourPets[0].names[1]; // \\\"Fluffy\\\"<br>ourPets[1].names[0]; // \\\"Spot\\\"</blockquote>\",\"<hr>\",\"使用点操作符和中括号操作符来检索变量<code>myPlants</code>的第二棵树。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>secondTree</code>应该等于 \\\"pine\\\"\",\"testString\":\"assert(secondTree === \\\"pine\\\", '<code>secondTree</code>应该等于 \\\"pine\\\"');\"},{\"text\":\"使用点操作符和中括号操作符来检索变量<code>myPlants</code>\",\"testString\":\"assert(/=\\\\s*myPlants\\\\[1\\\\].list\\\\[1\\\\]/.test(code), '使用点操作符和中括号操作符来检索变量<code>myPlants</code>');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 初始化变量\\nvar myPlants = [\\n  { \\n    type: \\\"flowers\\\",\\n    list: [\\n      \\\"rose\\\",\\n      \\\"tulip\\\",\\n      \\\"dandelion\\\"\\n    ]\\n  },\\n  {\\n    type: \\\"trees\\\",\\n    list: [\\n      \\\"fir\\\",\\n      \\\"pine\\\",\\n      \\\"birch\\\"\\n    ]\\n  }  \\n];\\n\\n// 请把你的代码写在这条注释以下\\n\\nvar secondTree = \\\"\\\"; // 请修改这一行\\n\",\"head\":\"\",\"tail\":\"(function(x) { \\n  if(typeof x != 'undefined') { \\n    return \\\"secondTree = \\\" + x;\\n  }\\n  return \\\"secondTree is undefined\\\";\\n})(secondTree);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/record-collection\",\"id\":\"56533eb9ac21ba0edf2244cd\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/accessing-nested-arrays\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-accessing-nested-arrays.json\n// module id = 3755\n// module chunks = 64497901878730"],"sourceRoot":""}