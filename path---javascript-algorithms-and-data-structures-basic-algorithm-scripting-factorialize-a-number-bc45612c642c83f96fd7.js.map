{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-algorithm-scripting-factorialize-a-number-bc45612c642c83f96fd7.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-algorithm-scripting-factorialize-a-number.json"],"names":["webpackJsonp","3719","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wBAAAC,aAAA,oRAAAC,cAAA,EAAAC,QAAmWC,KAAA,6FAAAC,UAAA,4BAAAC,QAAsJC,KAAA,yCAAAC,WAAA,2FAAwJD,KAAA,yCAAAC,WAAA,+EAA4ID,KAAA,8CAAAC,WAAA,yFAA2JD,KAAA,0DAAAC,WAAA,iHAA+LD,KAAA,uCAAAC,WAAA,4EAAsIC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,qEAAwHC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yGAAAC,GAAA,4BAA0MrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-algorithm-scripting-factorialize-a-number-bc45612c642c83f96fd7.js","sourcesContent":["webpackJsonp([134625150371805],{\n\n/***/ 3719:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Factorialize a Number\",\"description\":[\"返回一个给定整数的阶乘。\",\"若 n 是一个整数，n 的阶乘就是所有小于等于 n 的正整数的乘积。\",\"n 的阶乘通常用符号 <code>n!</code> 来表示。\",\"例如： <code>5! = 1 * 2 * 3 * 4 * 5 = 120</code>\",\"只有非负整数会被作为函数的输入参数。\",\"如果你有任何疑问，可以访问 <a href=\\\"https://forum.freecodecamp.one/t/topic/157\\\" target=\\\"_blank\\\">Read-Search-Ask</a> 。请你独立解决挑战中的问题。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/factorialize-a-number\",\"blockName\":\"Basic Algorithm Scripting\",\"tests\":[{\"text\":\"<code>factorialize(5)</code> 应该返回一个数字。\",\"testString\":\"assert(typeof factorialize(5) === 'number', '<code>factorialize(5)</code> 应该返回一个数字。');\"},{\"text\":\"<code>factorialize(5)</code> 应该返回 120。\",\"testString\":\"assert(factorialize(5) === 120, '<code>factorialize(5)</code> 应该返回 120。');\"},{\"text\":\"<code>factorialize(10)</code> 应该返回 3628800。\",\"testString\":\"assert(factorialize(10) === 3628800, '<code>factorialize(10)</code> 应该返回 3628800。');\"},{\"text\":\"<code>factorialize(20)</code> 应该返回 2432902008176640000。\",\"testString\":\"assert(factorialize(20) === 2432902008176640000, '<code>factorialize(20)</code> 应该返回 2432902008176640000。');\"},{\"text\":\"<code>factorialize(0)</code> 应该返回 1。\",\"testString\":\"assert(factorialize(0) === 1, '<code>factorialize(0)</code> 应该返回 1。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function factorialize(num) {\\n  return num;\\n}\\n\\nfactorialize(5);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/find-the-longest-word-in-a-string\",\"id\":\"a302f7aae1aa3152a5b413bc\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/factorialize-a-number\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-algorithm-scripting-factorialize-a-number-bc45612c642c83f96fd7.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Factorialize a Number\",\"description\":[\"返回一个给定整数的阶乘。\",\"若 n 是一个整数，n 的阶乘就是所有小于等于 n 的正整数的乘积。\",\"n 的阶乘通常用符号 <code>n!</code> 来表示。\",\"例如： <code>5! = 1 * 2 * 3 * 4 * 5 = 120</code>\",\"只有非负整数会被作为函数的输入参数。\",\"如果你有任何疑问，可以访问 <a href=\\\"https://forum.freecodecamp.one/t/topic/157\\\" target=\\\"_blank\\\">Read-Search-Ask</a> 。请你独立解决挑战中的问题。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/factorialize-a-number\",\"blockName\":\"Basic Algorithm Scripting\",\"tests\":[{\"text\":\"<code>factorialize(5)</code> 应该返回一个数字。\",\"testString\":\"assert(typeof factorialize(5) === 'number', '<code>factorialize(5)</code> 应该返回一个数字。');\"},{\"text\":\"<code>factorialize(5)</code> 应该返回 120。\",\"testString\":\"assert(factorialize(5) === 120, '<code>factorialize(5)</code> 应该返回 120。');\"},{\"text\":\"<code>factorialize(10)</code> 应该返回 3628800。\",\"testString\":\"assert(factorialize(10) === 3628800, '<code>factorialize(10)</code> 应该返回 3628800。');\"},{\"text\":\"<code>factorialize(20)</code> 应该返回 2432902008176640000。\",\"testString\":\"assert(factorialize(20) === 2432902008176640000, '<code>factorialize(20)</code> 应该返回 2432902008176640000。');\"},{\"text\":\"<code>factorialize(0)</code> 应该返回 1。\",\"testString\":\"assert(factorialize(0) === 1, '<code>factorialize(0)</code> 应该返回 1。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function factorialize(num) {\\n  return num;\\n}\\n\\nfactorialize(5);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/find-the-longest-word-in-a-string\",\"id\":\"a302f7aae1aa3152a5b413bc\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-algorithm-scripting/factorialize-a-number\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-algorithm-scripting-factorialize-a-number.json\n// module id = 3719\n// module chunks = 134625150371805"],"sourceRoot":""}