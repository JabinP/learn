webpackJsonp([0xf8e24f2ef799],{3862:function(e,t){e.exports={data:{challengeNode:{title:"Catch Missing Open and Closing Parenthesis After a Function Call",description:["当函数或方法不接受任何参数时，你可能忘记在调用它时加上（）左括号和右括号。通常，函数调用的结果会保存在变量中，供其他代码使用。可以通过将变量值（或其类型）打印到控制台，查看输出究竟是一个函数引用还是函数调用的返回值来检测这类错误","下面示例中的两个变量是不同的:",'<blockquote>function myFunction() {<br>&nbsp;&nbsp;return "You rock!";<br>}<br>let varOne = myFunction; // 将函数赋值给变量<br>let varTwo = myFunction(); // 将函数返回值 "You rock!"赋给变量</blockquote>',"<hr>","修复代码，把调用函数<code>getNin​​e</code>的返回值赋给变量<code>result</code>。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/debugging/catch-missing-open-and-closing-parenthesis-after-a-function-call",blockName:"Debugging",tests:[{text:"你应该修复变量<code>result</code>使其为函数<code>getNine</code>的返回值。",testString:"assert(result == 9, '你应该修复变量<code>result</code>使其为函数<code>getNine</code>的返回值。');"},{text:"你应该调用<code>getNine</code>函数。",testString:"assert(code.match(/getNine\\(\\)/g).length == 2, '你应该调用<code>getNine</code>函数。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function getNine() {\n  let x = 6;\n  let y = 3;\n  return x + y;\n}\n\nlet result = getNine;\nconsole.log(result);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/debugging/catch-arguments-passed-in-the-wrong-order-when-calling-a-function",id:"587d7b85367417b2b2512b39"},slug:"/javascript-algorithms-and-data-structures/debugging/catch-missing-open-and-closing-parenthesis-after-a-function-call"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-debugging-catch-missing-open-and-closing-parenthesis-after-a-function-call-4d5c6c81e78f904c895e.js.map