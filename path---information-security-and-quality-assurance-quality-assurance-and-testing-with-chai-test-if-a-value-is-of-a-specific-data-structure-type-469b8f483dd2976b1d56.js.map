{"version":3,"sources":["webpack:///path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-is-of-a-specific-data-structure-type-469b8f483dd2976b1d56.js","webpack:///./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-is-of-a-specific-data-structure-type.json"],"names":["webpackJsonp","3703","module","exports","data","challengeNode","title","guideUrl","description","challengeType","fields","blockName","slug","tests","text","testString","pathContext","challengeMeta","introPath","template","required","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,uDAAAC,SAAA,KAAAC,aAAA,iaAAAC,cAAA,EAAAC,QAA2hBC,UAAA,0CAAAC,KAAA,2IAAAC,QAAkNC,KAAA,wBAAAC,WAAA,sLAAkOD,KAAA,oDAAAC,WAAA,gOAAwSD,KAAA,oDAAAC,WAAA,+NAAuSD,KAAA,oDAAAC,WAAA,mPAA2TD,KAAA,oDAAAC,WAAA,mOAA2SD,KAAA,oDAAAC,WAAA,mOAA0SC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAC,YAAAC,kBAAA,wIAAAC,GAAA,4BAAyOV,KAAA","file":"path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-is-of-a-specific-data-structure-type-469b8f483dd2976b1d56.js","sourcesContent":["webpackJsonp([176397484331860],{\n\n/***/ 3703:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Test if a Value is of a Specific Data Structure Type\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\"#typeOf asserts that value’s type is the given string, as determined by Object.prototype.toString.\",\"Use #typeOf or #notTypeOf where appropriate\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-is-of-a-specific-data-structure-type\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[0].method, 'typeOf', 'myCar is typeOf Object'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[1].method, 'typeOf', 'Car.model is a String'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[2].method, 'notTypeOf', 'Plane.wings is a Number (not a String)'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[3].method, 'typeOf', 'Plane.engines is an Array'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[4].method, 'typeOf', 'Car.wheels is a Number'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-an-object-is-an-instance-of-a-constructor\",\"id\":\"587d824e367417b2b2512c56\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-is-of-a-specific-data-structure-type\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-is-of-a-specific-data-structure-type-469b8f483dd2976b1d56.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Test if a Value is of a Specific Data Structure Type\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\"#typeOf asserts that value’s type is the given string, as determined by Object.prototype.toString.\",\"Use #typeOf or #notTypeOf where appropriate\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-is-of-a-specific-data-structure-type\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[0].method, 'typeOf', 'myCar is typeOf Object'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[1].method, 'typeOf', 'Car.model is a String'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[2].method, 'notTypeOf', 'Plane.wings is a Number (not a String)'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[3].method, 'typeOf', 'Plane.engines is an Array'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - typeOf vs. notTypeOf\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=16').then(data => { assert.equal(data.assertions[4].method, 'typeOf', 'Car.wheels is a Number'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-an-object-is-an-instance-of-a-constructor\",\"id\":\"587d824e367417b2b2512c56\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-is-of-a-specific-data-structure-type\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-is-of-a-specific-data-structure-type.json\n// module id = 3703\n// module chunks = 176397484331860"],"sourceRoot":""}