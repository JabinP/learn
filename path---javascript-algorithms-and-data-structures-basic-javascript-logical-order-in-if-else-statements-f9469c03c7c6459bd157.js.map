{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-logical-order-in-if-else-statements-f9469c03c7c6459bd157.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-logical-order-in-if-else-statements.json"],"names":["webpackJsonp","3814","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,sCAAAC,aAAA,4bAAgf,qVAA2V,sJAAAC,cAAA,EAAAC,QAAqMC,KAAA,kGAAAC,UAAA,mBAAAC,QAAkJC,KAAA,iDAAAC,WAAA,mGAA4KD,KAAA,kDAAAC,WAAA,qGAA+KD,KAAA,kEAAAC,WAAA,sIAA+NC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,yOAAkSC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,0FAAAC,GAAA,4BAA2LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-logical-order-in-if-else-statements-f9469c03c7c6459bd157.js","sourcesContent":["webpackJsonp([213177262396114],{\n\n/***/ 3814:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Logical Order in If Else Statements\",\"description\":[\"<code>if</code>、<code>else if</code>语句中代码的执行顺序是很重要的。\",\"在条件判断语句中，代码的执行顺序是从上到下，所以你需要考虑清楚先执行哪一句，后执行哪一句。\",\"这有两个例子。\",\"第一个例子：\",\"<blockquote>function foo(x) {<br>&nbsp;&nbsp;if (x < 1) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than one\\\";<br>&nbsp;&nbsp;} else if (x < 2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than two\\\";<br>&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Greater than or equal to two\\\";<br>&nbsp;&nbsp;}<br>}</blockquote>\",\"第二个例子更改了代码的执行顺序：\",\"<blockquote>function bar(x) {<br>&nbsp;&nbsp;if (x < 2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than two\\\";<br>&nbsp;&nbsp;} else if (x < 1) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than one\\\";<br>&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Greater than or equal to two\\\";<br>&nbsp;&nbsp;}<br>}</blockquote>\",\"这两个函数看起来几乎一模一样，我们传一个值进去看看它们有什么区别。\",\"<blockquote>foo(0) // \\\"Less than one\\\"<br>bar(0) // \\\"Less than two\\\"</blockquote>\",\"<hr>\",\"更改函数的逻辑顺序以便通过所有的测试用例。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/logical-order-in-if-else-statements\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>orderMyLogic(4)</code>应该返回 \\\"Less than 5\\\"\",\"testString\":\"assert(orderMyLogic(4) === \\\"Less than 5\\\", '<code>orderMyLogic(4)</code>应该返回 \\\"Less than 5\\\"');\"},{\"text\":\"<code>orderMyLogic(6)</code>应该返回 \\\"Less than 10\\\"\",\"testString\":\"assert(orderMyLogic(6) === \\\"Less than 10\\\", '<code>orderMyLogic(6)</code>应该返回 \\\"Less than 10\\\"');\"},{\"text\":\"<code>orderMyLogic(11)</code>应该返回 \\\"Greater than or equal to 10\\\"\",\"testString\":\"assert(orderMyLogic(11) === \\\"Greater than or equal to 10\\\", '<code>orderMyLogic(11)</code>应该返回 \\\"Greater than or equal to 10\\\"');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function orderMyLogic(val) {\\n  if (val < 10) {\\n    return \\\"Less than 10\\\";\\n  } else if (val < 5) {\\n    return \\\"Less than 5\\\";\\n  } else {\\n    return \\\"Greater than or equal to 10\\\";\\n  }\\n}\\n\\n// 你可以修改这一行来测试你的代码\\norderMyLogic(7);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/chaining-if-else-statements\",\"id\":\"5690307fddb111c6084545d7\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/logical-order-in-if-else-statements\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-logical-order-in-if-else-statements-f9469c03c7c6459bd157.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Logical Order in If Else Statements\",\"description\":[\"<code>if</code>、<code>else if</code>语句中代码的执行顺序是很重要的。\",\"在条件判断语句中，代码的执行顺序是从上到下，所以你需要考虑清楚先执行哪一句，后执行哪一句。\",\"这有两个例子。\",\"第一个例子：\",\"<blockquote>function foo(x) {<br>&nbsp;&nbsp;if (x < 1) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than one\\\";<br>&nbsp;&nbsp;} else if (x < 2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than two\\\";<br>&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Greater than or equal to two\\\";<br>&nbsp;&nbsp;}<br>}</blockquote>\",\"第二个例子更改了代码的执行顺序：\",\"<blockquote>function bar(x) {<br>&nbsp;&nbsp;if (x < 2) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than two\\\";<br>&nbsp;&nbsp;} else if (x < 1) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Less than one\\\";<br>&nbsp;&nbsp;} else {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"Greater than or equal to two\\\";<br>&nbsp;&nbsp;}<br>}</blockquote>\",\"这两个函数看起来几乎一模一样，我们传一个值进去看看它们有什么区别。\",\"<blockquote>foo(0) // \\\"Less than one\\\"<br>bar(0) // \\\"Less than two\\\"</blockquote>\",\"<hr>\",\"更改函数的逻辑顺序以便通过所有的测试用例。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/logical-order-in-if-else-statements\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>orderMyLogic(4)</code>应该返回 \\\"Less than 5\\\"\",\"testString\":\"assert(orderMyLogic(4) === \\\"Less than 5\\\", '<code>orderMyLogic(4)</code>应该返回 \\\"Less than 5\\\"');\"},{\"text\":\"<code>orderMyLogic(6)</code>应该返回 \\\"Less than 10\\\"\",\"testString\":\"assert(orderMyLogic(6) === \\\"Less than 10\\\", '<code>orderMyLogic(6)</code>应该返回 \\\"Less than 10\\\"');\"},{\"text\":\"<code>orderMyLogic(11)</code>应该返回 \\\"Greater than or equal to 10\\\"\",\"testString\":\"assert(orderMyLogic(11) === \\\"Greater than or equal to 10\\\", '<code>orderMyLogic(11)</code>应该返回 \\\"Greater than or equal to 10\\\"');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function orderMyLogic(val) {\\n  if (val < 10) {\\n    return \\\"Less than 10\\\";\\n  } else if (val < 5) {\\n    return \\\"Less than 5\\\";\\n  } else {\\n    return \\\"Greater than or equal to 10\\\";\\n  }\\n}\\n\\n// 你可以修改这一行来测试你的代码\\norderMyLogic(7);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/chaining-if-else-statements\",\"id\":\"5690307fddb111c6084545d7\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/logical-order-in-if-else-statements\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-logical-order-in-if-else-statements.json\n// module id = 3814\n// module chunks = 213177262396114"],"sourceRoot":""}