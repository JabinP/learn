{"version":3,"sources":["webpack:///path---coding-interview-prep-algorithms-pairwise-72efd65f4bab8341b157.js","webpack:///./.cache/json/coding-interview-prep-algorithms-pairwise.json"],"names":["webpackJsonp","2811","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,WAAAC,aAAA,q0BAAAC,cAAA,EAAAC,QAAq4BC,KAAA,6CAAAC,UAAA,aAAAC,QAAuFC,KAAA,uDAAAC,WAAA,kHAA6LD,KAAA,gDAAAC,WAAA,oGAAwKD,KAAA,6CAAAC,WAAA,8FAA+JD,KAAA,uDAAAC,WAAA,kHAA6LD,KAAA,wCAAAC,WAAA,qFAAgJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,iFAAoIC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,0DAAAC,GAAA,4BAA2JrB,KAAA","file":"path---coding-interview-prep-algorithms-pairwise-72efd65f4bab8341b157.js","sourcesContent":["webpackJsonp([35927478260841],{\n\n/***/ 2811:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Pairwise\",\"description\":[\"给定一个数组<code>arr</code>，查找其总和等于第二个参数“<code> arg </code>”的元素对，并返回其索引的总和。\",\"你可以使用多个具有相同数字元素但不同索引的对。每对应该使用尽可能低的可用索引。一旦一个元素被使用，它就不能被重用来与另一个元素配对。例如，<code>pairwise([1, 1, 2], 3)</code>使用索引为 0 的元素 1 而不是索引为 1 的元素 1 创建一对<code>[ 2，1 ]</code>，因为 0 + 2 < 1 + 2。\",\"例如：<code>pairwise([7, 9, 11, 13, 15], 20)</code>返回<code>6</code>。满足和为 20 的一组数组是：<code>[7, 13]</code>和<code>[9, 11]</code>，然后我们可以写出对应的数组，以及他们的索引与他们的值。\",\"<table class=\\\"table\\\"><tr><th><strong>索引</strong></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr><tr><td>值</td><td>7</td><td>9</td><td>11</td><td>13</td><td>15</td></tr></table>\",\"然后我们将对应的索引相加，\",\"7 + 13 = 20 &#8594；索引 0 + 3 = 3<br>9 + 11 = 20 &#8594； 索引 1 + 2 = 3<br>3 + 3 = 6 &#8594 应该返回<code>6</code>。\",\"如果你遇到了困难，请点击 <a href='https://forum.freecodecamp.one/t/topic/157'target='_blank'> 帮助 </a>。你可以找人 “结对编程”，但不要因此放弃思考。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/algorithms/pairwise\",\"blockName\":\"Algorithms\",\"tests\":[{\"text\":\"<code>pairwise([1, 4, 2, 3, 0, 5], 7)</code>应该返回 11。\",\"testString\":\"assert.deepEqual(pairwise([1, 4, 2, 3, 0, 5], 7), 11,'<code>pairwise([1, 4, 2, 3, 0, 5], 7)</code>应该返回 11。');\"},{\"text\":\"<code>pairwise([1, 3, 2, 4], 4)</code>应该返回 1。\",\"testString\":\"assert.deepEqual(pairwise([1, 3, 2, 4], 4), 1,'<code>pairwise([1, 3, 2, 4], 4)</code>应该返回 1。');\"},{\"text\":\"<code>pairwise([1, 1, 1], 2)</code>应该返回 1。\",\"testString\":\"assert.deepEqual(pairwise([1, 1, 1], 2), 1,'<code>pairwise([1, 1, 1], 2)</code>应该返回 1。');\"},{\"text\":\"<code>pairwise([0, 0, 0, 0, 1, 1], 1)</code>应该返回 1。.\",\"testString\":\"assert.deepEqual(pairwise([0, 0, 0, 0, 1, 1], 1), 10,'<code>pairwise([0, 0, 0, 0, 1, 1], 1)</code>应该返回 1。.');\"},{\"text\":\"<code>pairwise([], 100)</code>应该返回 0。\",\"testString\":\"assert.deepEqual(pairwise([], 100), 0,'<code>pairwise([], 100)</code>应该返回 0。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function pairwise(arr, arg) {\\n  return arg;\\n}\\n\\npairwise([1,4,2,3,0,5], 7);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/algorithms/implement-bubble-sort\",\"id\":\"a3f503de51cfab748ff001aa\"},\"slug\":\"/coding-interview-prep/algorithms/pairwise\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-algorithms-pairwise-72efd65f4bab8341b157.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Pairwise\",\"description\":[\"给定一个数组<code>arr</code>，查找其总和等于第二个参数“<code> arg </code>”的元素对，并返回其索引的总和。\",\"你可以使用多个具有相同数字元素但不同索引的对。每对应该使用尽可能低的可用索引。一旦一个元素被使用，它就不能被重用来与另一个元素配对。例如，<code>pairwise([1, 1, 2], 3)</code>使用索引为 0 的元素 1 而不是索引为 1 的元素 1 创建一对<code>[ 2，1 ]</code>，因为 0 + 2 < 1 + 2。\",\"例如：<code>pairwise([7, 9, 11, 13, 15], 20)</code>返回<code>6</code>。满足和为 20 的一组数组是：<code>[7, 13]</code>和<code>[9, 11]</code>，然后我们可以写出对应的数组，以及他们的索引与他们的值。\",\"<table class=\\\"table\\\"><tr><th><strong>索引</strong></th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th></tr><tr><td>值</td><td>7</td><td>9</td><td>11</td><td>13</td><td>15</td></tr></table>\",\"然后我们将对应的索引相加，\",\"7 + 13 = 20 &#8594；索引 0 + 3 = 3<br>9 + 11 = 20 &#8594； 索引 1 + 2 = 3<br>3 + 3 = 6 &#8594 应该返回<code>6</code>。\",\"如果你遇到了困难，请点击 <a href='https://forum.freecodecamp.one/t/topic/157'target='_blank'> 帮助 </a>。你可以找人 “结对编程”，但不要因此放弃思考。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/algorithms/pairwise\",\"blockName\":\"Algorithms\",\"tests\":[{\"text\":\"<code>pairwise([1, 4, 2, 3, 0, 5], 7)</code>应该返回 11。\",\"testString\":\"assert.deepEqual(pairwise([1, 4, 2, 3, 0, 5], 7), 11,'<code>pairwise([1, 4, 2, 3, 0, 5], 7)</code>应该返回 11。');\"},{\"text\":\"<code>pairwise([1, 3, 2, 4], 4)</code>应该返回 1。\",\"testString\":\"assert.deepEqual(pairwise([1, 3, 2, 4], 4), 1,'<code>pairwise([1, 3, 2, 4], 4)</code>应该返回 1。');\"},{\"text\":\"<code>pairwise([1, 1, 1], 2)</code>应该返回 1。\",\"testString\":\"assert.deepEqual(pairwise([1, 1, 1], 2), 1,'<code>pairwise([1, 1, 1], 2)</code>应该返回 1。');\"},{\"text\":\"<code>pairwise([0, 0, 0, 0, 1, 1], 1)</code>应该返回 1。.\",\"testString\":\"assert.deepEqual(pairwise([0, 0, 0, 0, 1, 1], 1), 10,'<code>pairwise([0, 0, 0, 0, 1, 1], 1)</code>应该返回 1。.');\"},{\"text\":\"<code>pairwise([], 100)</code>应该返回 0。\",\"testString\":\"assert.deepEqual(pairwise([], 100), 0,'<code>pairwise([], 100)</code>应该返回 0。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function pairwise(arr, arg) {\\n  return arg;\\n}\\n\\npairwise([1,4,2,3,0,5], 7);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/algorithms/implement-bubble-sort\",\"id\":\"a3f503de51cfab748ff001aa\"},\"slug\":\"/coding-interview-prep/algorithms/pairwise\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-algorithms-pairwise.json\n// module id = 2811\n// module chunks = 35927478260841"],"sourceRoot":""}