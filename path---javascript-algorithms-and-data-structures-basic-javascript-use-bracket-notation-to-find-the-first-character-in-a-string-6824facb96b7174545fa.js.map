{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-use-bracket-notation-to-find-the-first-character-in-a-string-6824facb96b7174545fa.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-use-bracket-notation-to-find-the-first-character-in-a-string.json"],"names":["webpackJsonp","3848","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+DAAAC,aAAA,qaAAAC,cAAA,EAAAC,QAA6hBC,KAAA,2HAAAC,UAAA,mBAAAC,QAA2KC,KAAA,wDAAAC,WAAA,oGAAgLD,KAAA,WAAAC,WAAA,0FAAwHC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,+OAAsSC,KAAA,GAAAC,KAAA,oDAA0EC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6FAAAC,GAAA,4BAA8LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-use-bracket-notation-to-find-the-first-character-in-a-string-6824facb96b7174545fa.js","sourcesContent":["webpackJsonp([208551361897162],{\n\n/***/ 3848:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Bracket Notation to Find the First Character in a String\",\"description\":[\"方括号表示法是一种在字符串中的特定<code>index</code>（索引）处获取字符的方法。\",\"大多数现代编程语言，如JavaScript，不同于人类从 1 开始计数。它们是从 0 开始计数，这被称为 <dfn>基于零</dfn> 的索引。\",\"例如, 在单词 \\\"Charles\\\" 中索引 0 上的字符为 \\\"C\\\"，所以在<code>var firstName = \\\"Charles\\\"</code>中，你可以使用<code>firstName[0]</code>来获得第一个位置上的字符。\",\"<hr>\",\"使用方括号获取变量<code>lastName</code>中的第一个字符，并赋给变量<code>firstLetterOfLastName</code>。\",\"<strong>提示</strong><br>如果你遇到困难了，不妨看看变量<code>firstLetterOfFirstName</code>是如何赋值的。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-bracket-notation-to-find-the-first-character-in-a-string\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>firstLetterOfLastName</code>的值应该是<code>L</code>\",\"testString\":\"assert(firstLetterOfLastName === 'L', '<code>firstLetterOfLastName</code>的值应该是<code>L</code>');\"},{\"text\":\"你应该使用中括号\",\"testString\":\"assert(code.match(/firstLetterOfLastName\\\\s*?=\\\\s*?lastName\\\\[.*?\\\\]/), '你应该使用中括号');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 示例\\nvar firstLetterOfFirstName = \\\"\\\";\\nvar firstName = \\\"Ada\\\";\\n\\nfirstLetterOfFirstName = firstName[0];\\n\\n// 初始化\\nvar firstLetterOfLastName = \\\"\\\";\\nvar lastName = \\\"Lovelace\\\";\\n\\n// 请把你的代码写在这条注释以下\\nfirstLetterOfLastName = lastName;\\n\\n\",\"head\":\"\",\"tail\":\"(function(v){return v;})(firstLetterOfLastName);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/understand-string-immutability\",\"id\":\"bd7123c9c549eddfaeb5bdef\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-bracket-notation-to-find-the-first-character-in-a-string\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-use-bracket-notation-to-find-the-first-character-in-a-string-6824facb96b7174545fa.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Bracket Notation to Find the First Character in a String\",\"description\":[\"方括号表示法是一种在字符串中的特定<code>index</code>（索引）处获取字符的方法。\",\"大多数现代编程语言，如JavaScript，不同于人类从 1 开始计数。它们是从 0 开始计数，这被称为 <dfn>基于零</dfn> 的索引。\",\"例如, 在单词 \\\"Charles\\\" 中索引 0 上的字符为 \\\"C\\\"，所以在<code>var firstName = \\\"Charles\\\"</code>中，你可以使用<code>firstName[0]</code>来获得第一个位置上的字符。\",\"<hr>\",\"使用方括号获取变量<code>lastName</code>中的第一个字符，并赋给变量<code>firstLetterOfLastName</code>。\",\"<strong>提示</strong><br>如果你遇到困难了，不妨看看变量<code>firstLetterOfFirstName</code>是如何赋值的。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-bracket-notation-to-find-the-first-character-in-a-string\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>firstLetterOfLastName</code>的值应该是<code>L</code>\",\"testString\":\"assert(firstLetterOfLastName === 'L', '<code>firstLetterOfLastName</code>的值应该是<code>L</code>');\"},{\"text\":\"你应该使用中括号\",\"testString\":\"assert(code.match(/firstLetterOfLastName\\\\s*?=\\\\s*?lastName\\\\[.*?\\\\]/), '你应该使用中括号');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 示例\\nvar firstLetterOfFirstName = \\\"\\\";\\nvar firstName = \\\"Ada\\\";\\n\\nfirstLetterOfFirstName = firstName[0];\\n\\n// 初始化\\nvar firstLetterOfLastName = \\\"\\\";\\nvar lastName = \\\"Lovelace\\\";\\n\\n// 请把你的代码写在这条注释以下\\nfirstLetterOfLastName = lastName;\\n\\n\",\"head\":\"\",\"tail\":\"(function(v){return v;})(firstLetterOfLastName);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/understand-string-immutability\",\"id\":\"bd7123c9c549eddfaeb5bdef\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-bracket-notation-to-find-the-first-character-in-a-string\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-use-bracket-notation-to-find-the-first-character-in-a-string.json\n// module id = 3848\n// module chunks = 208551361897162"],"sourceRoot":""}