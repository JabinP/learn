{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-use-the-conditional-ternary-operator-cd21e5e2488313751bba.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-use-the-conditional-ternary-operator.json"],"names":["webpackJsonp","3854","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,yCAAAC,aAAA,qHAA4K,8QAA4Q,gJAAoJ,2EAAAC,cAAA,EAAAC,QAAsHC,KAAA,mGAAAC,UAAA,mBAAAC,QAAmJC,KAAA,mCAAAC,WAAA,kGAAyJD,KAAA,0CAAAC,WAAA,mFAAiJD,KAAA,yCAAAC,WAAA,iFAA8ID,KAAA,2CAAAC,WAAA,sFAAoJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,0DAA6GC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yGAAAC,GAAA,4BAA0MrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-use-the-conditional-ternary-operator-cd21e5e2488313751bba.js","sourcesContent":["webpackJsonp([10725846635361],{\n\n/***/ 3854:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use the Conditional (Ternary) Operator\",\"description\":[\"条件运算符（也称为三元运算符）的用处就像写成一行的 if-else 表达式\",\"语法如下所示：\",\"<code>condition ? statement-if-true : statement-if-false;</code>\",\"以下函数使用 if-else 语句来检查条件：\",\"<blockquote>function findGreater(a, b) {<br>&nbsp;&nbsp;if(a > b) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"a is greater\\\";<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;else {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"b is greater\\\";<br>&nbsp;&nbsp;}<br>}</blockquote>\",\"上面的函数使用条件运算符写法如下：\",\"<blockquote>function findGreater(a, b) {<br>&nbsp;&nbsp;return a > b ? \\\"a is greater\\\" : \\\"b is greater\\\";<br>}</blockquote>\",\"<hr>\",\"在<code>checkEqual</code>函数中使用条件运算符检查两个数字是否相等，函数应该返回 true 或 false\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>checkEqual</code>应该使用条件运算符\",\"testString\":\"assert(/.+?\\\\s*?\\\\?\\\\s*?.+?\\\\s*?:\\\\s*?.+?/gi.test(code), '<code>checkEqual</code>应该使用条件运算符');\"},{\"text\":\"<code>checkEqual(1, 2)</code>应该返回 false\",\"testString\":\"assert(checkEqual(1, 2) === false, '<code>checkEqual(1, 2)</code>应该返回 false');\"},{\"text\":\"<code>checkEqual(1, 1)</code>应该返回 true\",\"testString\":\"assert(checkEqual(1, 1) === true, '<code>checkEqual(1, 1)</code>应该返回 true');\"},{\"text\":\"<code>checkEqual(1, -1)</code>应该返回 false\",\"testString\":\"assert(checkEqual(1, -1) === false, '<code>checkEqual(1, -1)</code>应该返回 false');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function checkEqual(a, b) {\\n  \\n}\\n\\ncheckEqual(1, 2);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-multiple-conditional-ternary-operators\",\"id\":\"587d7b7e367417b2b2512b24\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-use-the-conditional-ternary-operator-cd21e5e2488313751bba.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use the Conditional (Ternary) Operator\",\"description\":[\"条件运算符（也称为三元运算符）的用处就像写成一行的 if-else 表达式\",\"语法如下所示：\",\"<code>condition ? statement-if-true : statement-if-false;</code>\",\"以下函数使用 if-else 语句来检查条件：\",\"<blockquote>function findGreater(a, b) {<br>&nbsp;&nbsp;if(a > b) {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"a is greater\\\";<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;else {<br>&nbsp;&nbsp;&nbsp;&nbsp;return \\\"b is greater\\\";<br>&nbsp;&nbsp;}<br>}</blockquote>\",\"上面的函数使用条件运算符写法如下：\",\"<blockquote>function findGreater(a, b) {<br>&nbsp;&nbsp;return a > b ? \\\"a is greater\\\" : \\\"b is greater\\\";<br>}</blockquote>\",\"<hr>\",\"在<code>checkEqual</code>函数中使用条件运算符检查两个数字是否相等，函数应该返回 true 或 false\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>checkEqual</code>应该使用条件运算符\",\"testString\":\"assert(/.+?\\\\s*?\\\\?\\\\s*?.+?\\\\s*?:\\\\s*?.+?/gi.test(code), '<code>checkEqual</code>应该使用条件运算符');\"},{\"text\":\"<code>checkEqual(1, 2)</code>应该返回 false\",\"testString\":\"assert(checkEqual(1, 2) === false, '<code>checkEqual(1, 2)</code>应该返回 false');\"},{\"text\":\"<code>checkEqual(1, 1)</code>应该返回 true\",\"testString\":\"assert(checkEqual(1, 1) === true, '<code>checkEqual(1, 1)</code>应该返回 true');\"},{\"text\":\"<code>checkEqual(1, -1)</code>应该返回 false\",\"testString\":\"assert(checkEqual(1, -1) === false, '<code>checkEqual(1, -1)</code>应该返回 false');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function checkEqual(a, b) {\\n  \\n}\\n\\ncheckEqual(1, 2);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-multiple-conditional-ternary-operators\",\"id\":\"587d7b7e367417b2b2512b24\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-use-the-conditional-ternary-operator.json\n// module id = 3854\n// module chunks = 10725846635361"],"sourceRoot":""}