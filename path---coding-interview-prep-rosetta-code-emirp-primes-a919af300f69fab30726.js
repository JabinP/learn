webpackJsonp([0xefad8b7adfbc],{3374:function(e,r){e.exports={data:{challengeNode:{title:"Emirp primes",description:["<p>An  emirp  (prime spelled backwards)  are primes that when reversed  (in their decimal representation)  are a different prime.</p>","<p>Write a function that should be able to : Show the first <b>n</b> eprimes numbers.Show the eprimes numbers in a range.Show the number of eprimes in a range.Show the <b>n<sup>th</sup></b> eprimes number.<p>The function should have two parameters. The first will receive <b>n</b> or the range as an array. The second will receive a boolean, that specifies if the function returns the eprimes as an array or a single number(the number of primes in the range or the <b>n<sup>th</sup></b> prime). According to the parameters the function should return an array or a number."],challengeType:5,fields:{slug:"/coding-interview-prep/rosetta-code/emirp-primes",blockName:"Rosetta Code",tests:[{text:"<code>emirps</code> is a function.",testString:"assert(typeof emirps === 'function', '<code>emirps</code> is a function.');"},{text:"<code>emirps(20,true)</code> should return <code>[13,17,31,37,71,73,79,97,107,113,149,157,167,179,199,311,337,347,359,389]</code>",testString:"assert.deepEqual(emirps(20, true), [13, 17, 31, 37, 71, 73, 79, 97, 107, 113, 149, 157, 167, 179, 199, 311, 337, 347, 359, 389], '<code>emirps(20,true)</code> should return <code>[13,17,31,37,71,73,79,97,107,113,149,157,167,179,199,311,337,347,359,389]</code>');"},{text:"<code>emirps(10000)</code> should return <code>948349</code>",testString:"assert.deepEqual(emirps(10000), 948349, '<code>emirps(10000)</code> should return <code>948349</code>');"},{text:"<code>emirps([7700,8000],true)</code> should return <code>[7717,7757,7817,7841,7867,7879,7901,7927,7949,7951,7963]</code>",testString:"assert.deepEqual(emirps([7700, 8000], true), [7717, 7757, 7817, 7841, 7867, 7879, 7901, 7927, 7949, 7951, 7963], '<code>emirps([7700,8000],true)</code> should return <code>[7717,7757,7817,7841,7867,7879,7901,7927,7949,7951,7963]</code>');"},{text:"<code>emirps([7700,8000],true)</code> should return <code>11</code>",testString:"assert.deepEqual(emirps([7700, 8000], false), 11, '<code>emirps([7700,8000],true)</code> should return <code>11</code>');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function emirps(n) {\n  // Good luck!\n}",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/rosetta-code/entropy",id:"599d0ba974141b0f508b37d5"},slug:"/coding-interview-prep/rosetta-code/emirp-primes"}}}});
//# sourceMappingURL=path---coding-interview-prep-rosetta-code-emirp-primes-a919af300f69fab30726.js.map