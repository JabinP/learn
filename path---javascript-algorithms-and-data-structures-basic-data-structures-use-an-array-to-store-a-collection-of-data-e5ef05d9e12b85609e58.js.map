{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-data-structures-use-an-array-to-store-a-collection-of-data-e5ef05d9e12b85609e58.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-data-structures-use-an-array-to-store-a-collection-of-data.json"],"names":["webpackJsonp","3750","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,6CAAAC,aAAA,2WAAqZ,u+BAAw/B,kMAAAC,cAAA,EAAAC,QAA6OC,KAAA,8GAAAC,UAAA,wBAAAC,QAAmKC,KAAA,qBAAAC,WAAA,8EAAuHD,KAAA,qCAAAC,WAAA,iFAA0ID,KAAA,sDAAAC,WAAA,iIAA2MD,KAAA,qDAAAC,WAAA,+HAAwMD,KAAA,qDAAAC,WAAA,gIAAwMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,qCAAoEC,KAAA,GAAAC,KAAA,IAA0CC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,oHAAAC,GAAA,4BAAqNrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-data-structures-use-an-array-to-store-a-collection-of-data-e5ef05d9e12b85609e58.js","sourcesContent":["webpackJsonp([100941927991781],{\n\n/***/ 3750:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use an Array to Store a Collection of Data\",\"description\":[\"以下是<dfn>数组（Array）</dfn>数据结构的最简单的实现例子。这是一个<dfn>一维数组（one-dimensional array）</dfn>，它只有一层，或者说在它里面没有包含其它的数组结构。你可以看到它里面包含了<dfn>布尔值（booleans）</dfn>、<dfn>字符串（strings）</dfn>、<dfn>数字（numbers）</dfn>以及一些其他的 JavaScript 语言中合法的数据类型：\",\"<blockquote>let simpleArray = ['one', 2, 'three’, true, false, undefined, null];<br>console.log(simpleArray.length);<br>// 输出 7</blockquote>\",\"你可以在上述例子中看到，所有数组都有一个<dfn>长度（length）</dfn>属性。你可以简单地使用<code>Array.length</code>方法来访问它。\",\"下面是一个关于数组的更复杂的例子。这是一个<dfn>多维数组（multi-dimensional Array</dfn>），或者说是一个包含了其他数组的数组。你可以注意到，在它的内部还包含了 JavaScript 中的<dfn>对象（objects）</dfn>结构。我们会在后面的小节中讨论该数据结构，但现在你只需要知道数组能够存储复杂的对象类型数据。\",\"<blockquote>let complexArray = [<br>&nbsp;&nbsp;[<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one: 1,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;two: 2<br>&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;three: 3,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;four: 4<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;],<br>&nbsp;&nbsp;[<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a: \\\"a\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b: \\\"b\\\"<br>&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c: \\\"c\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d: “d”<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;]<br>];</blockquote>\",\"<hr>\",\"我们已经定义了一个名为<code>yourArray</code>的变量。请修改题目中的语句，将一个含有至少 5 个元素的数组赋值给<code>yourArray</code>变量。你的数组应该包含至少一个 <dfn>string</dfn> 类型的数据、一个 <dfn>number</dfn> 类型的数据和一个 <dfn>boolean</dfn> 类型的数据。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/use-an-array-to-store-a-collection-of-data\",\"blockName\":\"Basic Data Structures\",\"tests\":[{\"text\":\"yourArray 应该是一个数组。\",\"testString\":\"assert.strictEqual(Array.isArray(yourArray), true, 'yourArray 应该是一个数组。');\"},{\"text\":\"<code>yourArray</code>至少要包含 5 个元素。\",\"testString\":\"assert.isAtLeast(yourArray.length, 5, '<code>yourArray</code>至少要包含 5 个元素。');\"},{\"text\":\"<code>yourArray</code>应该包含至少一个<code>boolean</code>。\",\"testString\":\"assert(yourArray.filter( el => typeof el === 'boolean').length >= 1, '<code>yourArray</code>应该包含至少一个<code>boolean</code>。');\"},{\"text\":\"<code>yourArray</code>应该包含至少一个<code>number</code>。\",\"testString\":\"assert(yourArray.filter( el => typeof el === 'number').length >= 1, '<code>yourArray</code>应该包含至少一个<code>number</code>。');\"},{\"text\":\"<code>yourArray</code>应该包含至少一个<code>string</code>。\",\"testString\":\"assert(yourArray.filter( el => typeof el === 'string').length >= 1, '<code>yourArray</code>应该包含至少一个<code>string</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let yourArray; // change this line\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-data-structures/access-an-arrays-contents-using-bracket-notation\",\"id\":\"587d7b7e367417b2b2512b20\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/use-an-array-to-store-a-collection-of-data\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-data-structures-use-an-array-to-store-a-collection-of-data-e5ef05d9e12b85609e58.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use an Array to Store a Collection of Data\",\"description\":[\"以下是<dfn>数组（Array）</dfn>数据结构的最简单的实现例子。这是一个<dfn>一维数组（one-dimensional array）</dfn>，它只有一层，或者说在它里面没有包含其它的数组结构。你可以看到它里面包含了<dfn>布尔值（booleans）</dfn>、<dfn>字符串（strings）</dfn>、<dfn>数字（numbers）</dfn>以及一些其他的 JavaScript 语言中合法的数据类型：\",\"<blockquote>let simpleArray = ['one', 2, 'three’, true, false, undefined, null];<br>console.log(simpleArray.length);<br>// 输出 7</blockquote>\",\"你可以在上述例子中看到，所有数组都有一个<dfn>长度（length）</dfn>属性。你可以简单地使用<code>Array.length</code>方法来访问它。\",\"下面是一个关于数组的更复杂的例子。这是一个<dfn>多维数组（multi-dimensional Array</dfn>），或者说是一个包含了其他数组的数组。你可以注意到，在它的内部还包含了 JavaScript 中的<dfn>对象（objects）</dfn>结构。我们会在后面的小节中讨论该数据结构，但现在你只需要知道数组能够存储复杂的对象类型数据。\",\"<blockquote>let complexArray = [<br>&nbsp;&nbsp;[<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;one: 1,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;two: 2<br>&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;three: 3,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;four: 4<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;],<br>&nbsp;&nbsp;[<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a: \\\"a\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b: \\\"b\\\"<br>&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c: \\\"c\\\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d: “d”<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;]<br>];</blockquote>\",\"<hr>\",\"我们已经定义了一个名为<code>yourArray</code>的变量。请修改题目中的语句，将一个含有至少 5 个元素的数组赋值给<code>yourArray</code>变量。你的数组应该包含至少一个 <dfn>string</dfn> 类型的数据、一个 <dfn>number</dfn> 类型的数据和一个 <dfn>boolean</dfn> 类型的数据。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/use-an-array-to-store-a-collection-of-data\",\"blockName\":\"Basic Data Structures\",\"tests\":[{\"text\":\"yourArray 应该是一个数组。\",\"testString\":\"assert.strictEqual(Array.isArray(yourArray), true, 'yourArray 应该是一个数组。');\"},{\"text\":\"<code>yourArray</code>至少要包含 5 个元素。\",\"testString\":\"assert.isAtLeast(yourArray.length, 5, '<code>yourArray</code>至少要包含 5 个元素。');\"},{\"text\":\"<code>yourArray</code>应该包含至少一个<code>boolean</code>。\",\"testString\":\"assert(yourArray.filter( el => typeof el === 'boolean').length >= 1, '<code>yourArray</code>应该包含至少一个<code>boolean</code>。');\"},{\"text\":\"<code>yourArray</code>应该包含至少一个<code>number</code>。\",\"testString\":\"assert(yourArray.filter( el => typeof el === 'number').length >= 1, '<code>yourArray</code>应该包含至少一个<code>number</code>。');\"},{\"text\":\"<code>yourArray</code>应该包含至少一个<code>string</code>。\",\"testString\":\"assert(yourArray.filter( el => typeof el === 'string').length >= 1, '<code>yourArray</code>应该包含至少一个<code>string</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let yourArray; // change this line\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-data-structures/access-an-arrays-contents-using-bracket-notation\",\"id\":\"587d7b7e367417b2b2512b20\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-data-structures/use-an-array-to-store-a-collection-of-data\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-data-structures-use-an-array-to-store-a-collection-of-data.json\n// module id = 3750\n// module chunks = 100941927991781"],"sourceRoot":""}