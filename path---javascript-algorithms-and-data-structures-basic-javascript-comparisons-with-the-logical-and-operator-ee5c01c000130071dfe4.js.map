{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-comparisons-with-the-logical-and-operator-ee5c01c000130071dfe4.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-comparisons-with-the-logical-and-operator.json"],"names":["webpackJsonp","3776","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,4CAAAC,aAAA,uPAA+S,+JAAqK,mJAAAC,cAAA,EAAAC,QAAkMC,KAAA,wGAAAC,UAAA,mBAAAC,QAAwJC,KAAA,4BAAAC,WAAA,yEAAyHD,KAAA,4BAAAC,WAAA,yEAAyHD,KAAA,0CAAAC,WAAA,qFAAuJD,KAAA,2CAAAC,WAAA,uFAA0JD,KAAA,4CAAAC,WAAA,yFAA6JD,KAAA,4CAAAC,WAAA,yFAA6JD,KAAA,4CAAAC,WAAA,yFAA6JD,KAAA,2CAAAC,WAAA,uFAA0JD,KAAA,2CAAAC,WAAA,uFAA0JD,KAAA,2CAAAC,WAAA,wFAA0JC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,4MAAmQC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,uGAAAC,GAAA,4BAAwMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-comparisons-with-the-logical-and-operator-ee5c01c000130071dfe4.js","sourcesContent":["webpackJsonp([229092458989670],{\n\n/***/ 3776:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Comparisons with the Logical And Operator\",\"description\":[\"有时你需要在一次判断中做多个操作。当且仅当运算符的左边和右边都是<code>true</code>，<dfn>逻辑与</dfn> 运算符（<code>&&</code>）才会返回<code>true</code>。\",\"同样的效果可以通过 if 语句的嵌套来实现：\",\"<blockquote>if (num > 5) {<br>  if (num < 10) {<br>    return \\\"Yes\\\";<br>  }<br>}<br>return \\\"No\\\";</blockquote>\",\"只有当<code>num</code>的值在 6 和 9 之间（包括 6 和 9）才会返回 \\\"Yes\\\"。相同的逻辑可被写为：\",\"<blockquote>if (num > 5 && num < 10) {<br>  return \\\"Yes\\\";<br>}<br>return \\\"No\\\";</blockquote>\",\"<hr>\",\"请使用逻辑与运算符把两个 if 语句合并为一个 if 语句，如果<code>val</code>小于或等于<code>50</code>并且大于或等于<code>25</code>，返回<code>\\\"Yes\\\"</code>。否则，将返回<code>\\\"No\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-and-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"你应该使用<code>&&</code>运算符一次\",\"testString\":\"assert(code.match(/&&/g).length === 1, '你应该使用<code>&&</code>运算符一次');\"},{\"text\":\"你应该只有一个<code>if</code>表达式\",\"testString\":\"assert(code.match(/if/g).length === 1, '你应该只有一个<code>if</code>表达式');\"},{\"text\":\"<code>testLogicalAnd(0)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(0) === \\\"No\\\", '<code>testLogicalAnd(0)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(24)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(24) === \\\"No\\\", '<code>testLogicalAnd(24)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(25)</code>应该返回 \\\"Yes\\\"\",\"testString\":\"assert(testLogicalAnd(25) === \\\"Yes\\\", '<code>testLogicalAnd(25)</code>应该返回 \\\"Yes\\\"');\"},{\"text\":\"<code>testLogicalAnd(30)</code>应该返回 \\\"Yes\\\"\",\"testString\":\"assert(testLogicalAnd(30) === \\\"Yes\\\", '<code>testLogicalAnd(30)</code>应该返回 \\\"Yes\\\"');\"},{\"text\":\"<code>testLogicalAnd(50)</code>应该返回 \\\"Yes\\\"\",\"testString\":\"assert(testLogicalAnd(50) === \\\"Yes\\\", '<code>testLogicalAnd(50)</code>应该返回 \\\"Yes\\\"');\"},{\"text\":\"<code>testLogicalAnd(51)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(51) === \\\"No\\\", '<code>testLogicalAnd(51)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(75)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(75) === \\\"No\\\", '<code>testLogicalAnd(75)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(80)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(80) === \\\"No\\\", '<code>testLogicalAnd(80)</code>应该返回 \\\"No\\\"');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function testLogicalAnd(val) {\\n  // 请把你的代码写在这条注释以下\\n\\n  if (val) {\\n    if (val) {\\n      return \\\"Yes\\\";\\n    }\\n  }\\n\\n  // 请把你的代码写在这条注释以上\\n  return \\\"No\\\";\\n}\\n\\n// 你可以修改这一行来测试你的代码\\ntestLogicalAnd(10);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-or-operator\",\"id\":\"56533eb9ac21ba0edf2244d8\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-and-operator\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-comparisons-with-the-logical-and-operator-ee5c01c000130071dfe4.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Comparisons with the Logical And Operator\",\"description\":[\"有时你需要在一次判断中做多个操作。当且仅当运算符的左边和右边都是<code>true</code>，<dfn>逻辑与</dfn> 运算符（<code>&&</code>）才会返回<code>true</code>。\",\"同样的效果可以通过 if 语句的嵌套来实现：\",\"<blockquote>if (num > 5) {<br>  if (num < 10) {<br>    return \\\"Yes\\\";<br>  }<br>}<br>return \\\"No\\\";</blockquote>\",\"只有当<code>num</code>的值在 6 和 9 之间（包括 6 和 9）才会返回 \\\"Yes\\\"。相同的逻辑可被写为：\",\"<blockquote>if (num > 5 && num < 10) {<br>  return \\\"Yes\\\";<br>}<br>return \\\"No\\\";</blockquote>\",\"<hr>\",\"请使用逻辑与运算符把两个 if 语句合并为一个 if 语句，如果<code>val</code>小于或等于<code>50</code>并且大于或等于<code>25</code>，返回<code>\\\"Yes\\\"</code>。否则，将返回<code>\\\"No\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-and-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"你应该使用<code>&&</code>运算符一次\",\"testString\":\"assert(code.match(/&&/g).length === 1, '你应该使用<code>&&</code>运算符一次');\"},{\"text\":\"你应该只有一个<code>if</code>表达式\",\"testString\":\"assert(code.match(/if/g).length === 1, '你应该只有一个<code>if</code>表达式');\"},{\"text\":\"<code>testLogicalAnd(0)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(0) === \\\"No\\\", '<code>testLogicalAnd(0)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(24)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(24) === \\\"No\\\", '<code>testLogicalAnd(24)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(25)</code>应该返回 \\\"Yes\\\"\",\"testString\":\"assert(testLogicalAnd(25) === \\\"Yes\\\", '<code>testLogicalAnd(25)</code>应该返回 \\\"Yes\\\"');\"},{\"text\":\"<code>testLogicalAnd(30)</code>应该返回 \\\"Yes\\\"\",\"testString\":\"assert(testLogicalAnd(30) === \\\"Yes\\\", '<code>testLogicalAnd(30)</code>应该返回 \\\"Yes\\\"');\"},{\"text\":\"<code>testLogicalAnd(50)</code>应该返回 \\\"Yes\\\"\",\"testString\":\"assert(testLogicalAnd(50) === \\\"Yes\\\", '<code>testLogicalAnd(50)</code>应该返回 \\\"Yes\\\"');\"},{\"text\":\"<code>testLogicalAnd(51)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(51) === \\\"No\\\", '<code>testLogicalAnd(51)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(75)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(75) === \\\"No\\\", '<code>testLogicalAnd(75)</code>应该返回 \\\"No\\\"');\"},{\"text\":\"<code>testLogicalAnd(80)</code>应该返回 \\\"No\\\"\",\"testString\":\"assert(testLogicalAnd(80) === \\\"No\\\", '<code>testLogicalAnd(80)</code>应该返回 \\\"No\\\"');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function testLogicalAnd(val) {\\n  // 请把你的代码写在这条注释以下\\n\\n  if (val) {\\n    if (val) {\\n      return \\\"Yes\\\";\\n    }\\n  }\\n\\n  // 请把你的代码写在这条注释以上\\n  return \\\"No\\\";\\n}\\n\\n// 你可以修改这一行来测试你的代码\\ntestLogicalAnd(10);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-or-operator\",\"id\":\"56533eb9ac21ba0edf2244d8\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-and-operator\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-comparisons-with-the-logical-and-operator.json\n// module id = 3776\n// module chunks = 229092458989670"],"sourceRoot":""}