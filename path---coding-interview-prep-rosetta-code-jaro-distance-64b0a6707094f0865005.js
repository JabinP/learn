webpackJsonp([7689844780396],{3411:function(e,t){e.exports={data:{challengeNode:{title:"Jaro distance",description:["The Jaro distance is a measure of similarity between two strings. The higher the Jaro distance for two strings is, the more similar the strings are. The score is normalized such that  <b>0</b>  equates to no similarity and  <b>1</b>  is an exact match. Definition The Jaro distance  \\( d_j \\)  of two given strings  \\(s_1\\)  and  \\(s_2\\) is","\\begin{align}d_j = \\begin{cases}0&amp;  & \\text{if }m=0 \\\\\\\\{\\frac {1}{3}}\\left({\\frac {m}{|s_{1}|}}+{\\frac {m}{|s_{2}|}}+{\\frac {m-t}{m}}\\right)&amp; & \\text{otherwise}\\end{cases}\\end{align}","  Where: <ul><li>\\(m\\)   is the number of <i>matching characters</i>;</li><li> \\(t\\)   is half the number of <i>transpositions</i>.</li></uL>","Two characters from  \\(s_1\\)   and  \\(s_2\\)   respectively, are considered <i>matching</i> only if they are the same and not farther than  \\(\\left\\lfloor\\frac{\\max(|s_1|,|s_2|)}{2}\\right\\rfloor-1\\).","Each character of  \\(s_1\\)   is compared with all its matching characters in  \\(s_2\\) . The number of matching (but different sequence order) characters divided by 2 defines the number of <i>transpositions</i>.","<b>Example</b>","Given the strings  \\(s_1\\)   <i>DWAYNE</i>  and  \\(s_2\\)   <i>DUANE</i>  we find:","<ul><li>\\(m = 4\\)</li><li>\\(|s_1| = 6\\) </li><li>\\(|s_2| = 5\\) </li><li>\\(t = 0\\) </li></ul>","We find a Jaro score of: \\(d_j = \\frac{1}{3}\\left(\\frac{4}{6} + \\frac{4}{5} + \\frac{4-0}{4}\\right) = 0.822\\).","Write a function a that takes two strings as parameters and returns the associated Jaro distance."],challengeType:5,fields:{slug:"/coding-interview-prep/rosetta-code/jaro-distance",blockName:"Rosetta Code",tests:[{text:"'<code>jaro</code> should be a function.'",testString:"assert(typeof jaro=='function','<code>jaro</code> should be a function.');"},{text:"'<code>jaro(\"'+tests[0][0]+'\",\"'+tests[0][1]+'\")</code> should return a number.'",testString:"assert(typeof jaro(tests[0][0],tests[0][1])=='number','<code>jaro()</code> should return a number.');"},{text:"'<code>jaro(\"'+tests[0][0]+'\",\"'+tests[0][1]+'\")</code> should return <code>'+results[0]+'</code>.'",testString:"assert.equal(jaro(tests[0][0],tests[0][1]),results[0],'<code>jaro(\"'+tests[0][0]+'\",\"'+tests[0][1]+'\")</code> should return <code>'+results[0]+'</code>.');"},{text:"'<code>jaro(\"'+tests[1][0]+'\",\"'+tests[1][1]+'\")</code> should return <code>'+results[1]+'</code>.'",testString:"assert.equal(jaro(tests[1][0],tests[1][1]),results[1],'<code>jaro(\"'+tests[1][0]+'\",\"'+tests[1][1]+'\")</code> should return <code>'+results[1]+'</code>.');"},{text:"'<code>jaro(\"'+tests[2][0]+'\",\"'+tests[2][1]+'\")</code> should return <code>'+results[2]+'</code>.'",testString:"assert.equal(jaro(tests[2][0],tests[2][1]),results[2],'<code>jaro(\"'+tests[2][0]+'\",\"'+tests[2][1]+'\")</code> should return <code>'+results[2]+'</code>.');"},{text:"'<code>jaro(\"'+tests[3][0]+'\",\"'+tests[3][1]+'\")</code> should return <code>'+results[3]+'</code>.'",testString:"assert.equal(jaro(tests[3][0],tests[3][1]),results[3],'<code>jaro(\"'+tests[3][0]+'\",\"'+tests[3][1]+'\")</code> should return <code>'+results[3]+'</code>.');"},{text:"'<code>jaro(\"'+tests[4][0]+'\",\"'+tests[4][1]+'\")</code> should return <code>'+results[4]+'</code>.'",testString:"assert.equal(jaro(tests[4][0],tests[4][1]),results[4],'<code>jaro(\"'+tests[4][0]+'\",\"'+tests[4][1]+'\")</code> should return <code>'+results[4]+'</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function jaro (s, t) {\n  // Good luck!\n}",head:"",tail:'let tests=[\n["MARTHA", "MARHTA"],\n["DIXON", "DICKSONX"],\n["JELLYFISH", "SMELLYFISH"],\n["HELLOS", "CHELLO"],\n["ABCD", "BCDA"]\n]\nlet results=[\n0.9444444444444445,\n0.7666666666666666,\n0.8962962962962964,\n0.888888888888889,\n0.8333333333333334\n]'},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/rosetta-code/jortsort",id:"5a23c84252665b21eecc7ec2"},slug:"/coding-interview-prep/rosetta-code/jaro-distance"}}}});
//# sourceMappingURL=path---coding-interview-prep-rosetta-code-jaro-distance-64b0a6707094f0865005.js.map