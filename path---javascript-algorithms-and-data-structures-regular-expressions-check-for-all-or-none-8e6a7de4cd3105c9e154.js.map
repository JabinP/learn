{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-regular-expressions-check-for-all-or-none-8e6a7de4cd3105c9e154.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-check-for-all-or-none.json"],"names":["webpackJsonp","3980","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wBAAAC,aAAA,mWAAuX,8EAAAC,cAAA,EAAAC,QAAyIC,KAAA,uFAAAC,UAAA,sBAAAC,QAA0IC,KAAA,iCAAAC,WAAA,uFAA4ID,KAAA,sCAAAC,WAAA,gFAA8ID,KAAA,uCAAAC,WAAA,kFAAiJD,KAAA,kCAAAC,WAAA,yEAAkIC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,qGAA0JC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,iGAAAC,GAAA,4BAAkMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-regular-expressions-check-for-all-or-none-8e6a7de4cd3105c9e154.js","sourcesContent":["webpackJsonp([105395155824008],{\n\n/***/ 3980:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Check for All or None\",\"description\":[\"有时，你想要搜寻的匹配模式可能有不确定是否存在的部分。尽管如此，你还是想检查它们。\",\"为此，你可以使用问号<code>?</code>指定可能存在的元素。这将检查前面的零个或一个元素。你可以将此符号视为前面的元素是可选的。\",\"例如，美式英语和英式英语略有不同，你可以使用问号来匹配两种拼写。\",\"<blockquote>let american = \\\"color\\\";<br>let british = \\\"colour\\\";<br>let rainbowRegex= /colou?r/;<br>rainbowRegex.test(american); // Returns true<br>rainbowRegex.test(british); // Returns true</blockquote>\",\"<hr>\",\"修改正则表达式<code>favRegex</code>以匹配美式英语（favorite）和英式英语（favourite）的单词版本。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用可选符号<code>?</code>。\",\"testString\":\"assert(favRegex.source.match(/\\\\?/).length > 0, '你的正则表达式应该使用可选符号<code>?</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"favorite\\\"</code>。\",\"testString\":\"assert(favRegex.test(\\\"favorite\\\"), '你的正则表达式应该匹配<code>\\\"favorite\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"favourite\\\"</code>。\",\"testString\":\"assert(favRegex.test(\\\"favourite\\\"), '你的正则表达式应该匹配<code>\\\"favourite\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"fav\\\"</code>。\",\"testString\":\"assert(!favRegex.test(\\\"fav\\\"), '你的正则表达式不应该匹配<code>\\\"fav\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let favWord = \\\"favorite\\\";\\nlet favRegex = /change/; // 修改这一行\\nlet result = favRegex.test(favWord);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/positive-and-negative-lookahead\",\"id\":\"587d7dba367417b2b2512ba8\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-regular-expressions-check-for-all-or-none-8e6a7de4cd3105c9e154.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Check for All or None\",\"description\":[\"有时，你想要搜寻的匹配模式可能有不确定是否存在的部分。尽管如此，你还是想检查它们。\",\"为此，你可以使用问号<code>?</code>指定可能存在的元素。这将检查前面的零个或一个元素。你可以将此符号视为前面的元素是可选的。\",\"例如，美式英语和英式英语略有不同，你可以使用问号来匹配两种拼写。\",\"<blockquote>let american = \\\"color\\\";<br>let british = \\\"colour\\\";<br>let rainbowRegex= /colou?r/;<br>rainbowRegex.test(american); // Returns true<br>rainbowRegex.test(british); // Returns true</blockquote>\",\"<hr>\",\"修改正则表达式<code>favRegex</code>以匹配美式英语（favorite）和英式英语（favourite）的单词版本。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用可选符号<code>?</code>。\",\"testString\":\"assert(favRegex.source.match(/\\\\?/).length > 0, '你的正则表达式应该使用可选符号<code>?</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"favorite\\\"</code>。\",\"testString\":\"assert(favRegex.test(\\\"favorite\\\"), '你的正则表达式应该匹配<code>\\\"favorite\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"favourite\\\"</code>。\",\"testString\":\"assert(favRegex.test(\\\"favourite\\\"), '你的正则表达式应该匹配<code>\\\"favourite\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"fav\\\"</code>。\",\"testString\":\"assert(!favRegex.test(\\\"fav\\\"), '你的正则表达式不应该匹配<code>\\\"fav\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let favWord = \\\"favorite\\\";\\nlet favRegex = /change/; // 修改这一行\\nlet result = favRegex.test(favWord);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/positive-and-negative-lookahead\",\"id\":\"587d7dba367417b2b2512ba8\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-check-for-all-or-none.json\n// module id = 3980\n// module chunks = 105395155824008"],"sourceRoot":""}