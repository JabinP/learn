{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-generate-random-whole-numbers-within-a-range-09eec76647b908681ad9.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-generate-random-whole-numbers-within-a-range.json"],"names":["webpackJsonp","3800","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+CAAAC,aAAA,ySAAAC,cAAA,EAAAC,QAA2YC,KAAA,2GAAAC,UAAA,mBAAAC,QAA2JC,KAAA,0DAAAC,WAAA,sFAAoKD,KAAA,0DAAAC,WAAA,uFAAqKD,KAAA,4CAAAC,WAAA,sFAAsJD,KAAA,kFAAAC,WAAA,oRAAyXC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,4SAA+VC,KAAA,GAAAC,KAAA,uVAA2WC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,wFAAAC,GAAA,4BAAyLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-generate-random-whole-numbers-within-a-range-09eec76647b908681ad9.js","sourcesContent":["webpackJsonp([202848646940519],{\n\n/***/ 3800:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Generate Random Whole Numbers within a Range\",\"description\":[\"我们之前生成的随机数是在0到某个数之间，现在我们要生成的随机数是在两个指定的数之间。\",\"我们需要定义一个最小值和一个最大值。\",\"下面是我们将要使用的方法，仔细看看并尝试理解这行代码到底在干嘛：\",\"<code>Math.floor(Math.random() * (max - min + 1)) + min</code>\",\"<hr>\",\"创建一个叫<code>randomRange</code>的函数，参数为 myMin 和 myMax，返回一个在<code>myMin</code>（包括 myMin）和<code>myMax</code>（包括 myMax）之间的随机数。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/generate-random-whole-numbers-within-a-range\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>randomRange</code>返回的随机数应该大于或等于<code>myMin</code>\",\"testString\":\"assert(calcMin === 5, '<code>randomRange</code>返回的随机数应该大于或等于<code>myMin</code>');\"},{\"text\":\"<code>randomRange</code>返回的随机数应该小于或等于<code>myMax</code>\",\"testString\":\"assert(calcMax === 15, '<code>randomRange</code>返回的随机数应该小于或等于<code>myMax</code>');\"},{\"text\":\"<code>randomRange</code>应该返回一个随机整数, 而不是小数\",\"testString\":\"assert(randomRange(0,1) % 1 === 0 , '<code>randomRange</code>应该返回一个随机整数, 而不是小数');\"},{\"text\":\"<code>randomRange</code>应该使用<code>myMax</code>和<code>myMin</code>, 并且返回两者之间的随机数\",\"testString\":\"assert((function(){if(code.match(/myMax/g).length > 1 && code.match(/myMin/g).length > 2 && code.match(/Math.floor/g) && code.match(/Math.random/g)){return true;}else{return false;}})(), '<code>randomRange</code>应该使用<code>myMax</code>和<code>myMin</code>, 并且返回两者之间的随机数');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 示例\\nfunction ourRandomRange(ourMin, ourMax) {\\n\\n  return Math.floor(Math.random() * (ourMax - ourMin + 1)) + ourMin;\\n}\\n\\nourRandomRange(1, 9);\\n\\n// 请把你的代码写在这条注释以下\\n\\nfunction randomRange(myMin, myMax) {\\n\\n  return 0; // 请修改这一行\\n\\n}\\n\\n// 你可以修改这一行来测试你的代码\\nvar myRandom = randomRange(5, 15);\",\"head\":\"\",\"tail\":\"var calcMin = 100;\\nvar calcMax = -100;\\nfor(var i = 0; i < 100; i++) {\\n  var result = randomRange(5,15);\\n  calcMin = Math.min(calcMin, result);\\n  calcMax = Math.max(calcMax, result);\\n}\\n(function(){\\n  if(typeof myRandom === 'number') {\\n    return \\\"myRandom = \\\" + myRandom;\\n  } else {\\n    return \\\"myRandom undefined\\\";\\n  }\\n})();\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function\",\"id\":\"cf1111c1c12feddfaeb2bdef\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/generate-random-whole-numbers-within-a-range\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-generate-random-whole-numbers-within-a-range-09eec76647b908681ad9.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Generate Random Whole Numbers within a Range\",\"description\":[\"我们之前生成的随机数是在0到某个数之间，现在我们要生成的随机数是在两个指定的数之间。\",\"我们需要定义一个最小值和一个最大值。\",\"下面是我们将要使用的方法，仔细看看并尝试理解这行代码到底在干嘛：\",\"<code>Math.floor(Math.random() * (max - min + 1)) + min</code>\",\"<hr>\",\"创建一个叫<code>randomRange</code>的函数，参数为 myMin 和 myMax，返回一个在<code>myMin</code>（包括 myMin）和<code>myMax</code>（包括 myMax）之间的随机数。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/generate-random-whole-numbers-within-a-range\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>randomRange</code>返回的随机数应该大于或等于<code>myMin</code>\",\"testString\":\"assert(calcMin === 5, '<code>randomRange</code>返回的随机数应该大于或等于<code>myMin</code>');\"},{\"text\":\"<code>randomRange</code>返回的随机数应该小于或等于<code>myMax</code>\",\"testString\":\"assert(calcMax === 15, '<code>randomRange</code>返回的随机数应该小于或等于<code>myMax</code>');\"},{\"text\":\"<code>randomRange</code>应该返回一个随机整数, 而不是小数\",\"testString\":\"assert(randomRange(0,1) % 1 === 0 , '<code>randomRange</code>应该返回一个随机整数, 而不是小数');\"},{\"text\":\"<code>randomRange</code>应该使用<code>myMax</code>和<code>myMin</code>, 并且返回两者之间的随机数\",\"testString\":\"assert((function(){if(code.match(/myMax/g).length > 1 && code.match(/myMin/g).length > 2 && code.match(/Math.floor/g) && code.match(/Math.random/g)){return true;}else{return false;}})(), '<code>randomRange</code>应该使用<code>myMax</code>和<code>myMin</code>, 并且返回两者之间的随机数');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 示例\\nfunction ourRandomRange(ourMin, ourMax) {\\n\\n  return Math.floor(Math.random() * (ourMax - ourMin + 1)) + ourMin;\\n}\\n\\nourRandomRange(1, 9);\\n\\n// 请把你的代码写在这条注释以下\\n\\nfunction randomRange(myMin, myMax) {\\n\\n  return 0; // 请修改这一行\\n\\n}\\n\\n// 你可以修改这一行来测试你的代码\\nvar myRandom = randomRange(5, 15);\",\"head\":\"\",\"tail\":\"var calcMin = 100;\\nvar calcMax = -100;\\nfor(var i = 0; i < 100; i++) {\\n  var result = randomRange(5,15);\\n  calcMin = Math.min(calcMin, result);\\n  calcMax = Math.max(calcMax, result);\\n}\\n(function(){\\n  if(typeof myRandom === 'number') {\\n    return \\\"myRandom = \\\" + myRandom;\\n  } else {\\n    return \\\"myRandom undefined\\\";\\n  }\\n})();\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function\",\"id\":\"cf1111c1c12feddfaeb2bdef\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/generate-random-whole-numbers-within-a-range\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-generate-random-whole-numbers-within-a-range.json\n// module id = 3800\n// module chunks = 202848646940519"],"sourceRoot":""}