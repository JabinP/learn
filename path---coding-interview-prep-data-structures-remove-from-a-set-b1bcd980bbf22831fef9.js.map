{"version":3,"sources":["webpack:///path---coding-interview-prep-data-structures-remove-from-a-set-b1bcd980bbf22831fef9.js","webpack:///./.cache/json/coding-interview-prep-data-structures-remove-from-a-set.json"],"names":["webpackJsonp","2849","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oBAAAC,aAAA,uIAAAC,cAAA,EAAAC,QAA8MC,KAAA,2DAAAC,UAAA,kBAAAC,QAA0GC,KAAA,4CAAAC,WAAA,2IAA2MD,KAAA,sCAAAC,WAAA,qLAA+OD,KAAA,qCAAAC,WAAA,gNAAwQC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,qjBAAwmBC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yDAAAC,GAAA,4BAA0JrB,KAAA","file":"path---coding-interview-prep-data-structures-remove-from-a-set-b1bcd980bbf22831fef9.js","sourcesContent":["webpackJsonp([216942103887955],{\n\n/***/ 2849:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Remove from a Set\",\"description\":[\"在本次练习当中我们来为集合创建一个删除方法，该方法命名为<code>this.remove</code>。它接收一个值并判断该值在集合中是否存在，如何存在就从集合中移除该元素并返回<code>true</code>，否则返回<code>false</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/coding-interview-prep/data-structures/remove-from-a-set\",\"blockName\":\"Data Structures\",\"tests\":[{\"text\":\"<code>Set</code>应该有<code>remove</code>方法。\",\"testString\":\"assert((function(){var test = new Set(); return (typeof test.remove === 'function')}()), '<code>Set</code>应该有<code>remove</code>方法。');\"},{\"text\":\"<code>remove</code>方法应该只移除集合中存在的元素。\",\"testString\":\"assert.deepEqual((function(){var test = new Set(); test.add('a');test.add('b');test.remove('c'); return test.values(); })(), ['a', 'b'], '<code>remove</code>方法应该只移除集合中存在的元素。');\"},{\"text\":\"<code>remove</code>方法应该移除集合中的指定元素。\",\"testString\":\"assert((function(){var test = new Set(); test.add('a');test.add('b');test.remove('a'); var vals = test.values(); return (vals[0] === 'b' && vals.length === 1)}()), '<code>remove</code>方法应该移除集合中的指定元素。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function Set() {\\n    // collection 变量用来存储集合中的元素\\n    var collection = [];\\n    // 当集合中存在 element 元素时返回 true 否则返回 false \\n    this.has = function(element) {\\n        return (collection.indexOf(element) !== -1);\\n    };\\n    // 该方法会返回集合内所有元素\\n    this.values = function() {\\n        return collection;\\n    };\\n    // 该方法会把 element 添加到集合中\\n    this.add = function(element) {\\n        if(!this.has(element)){\\n            collection.push(element);\\n            return true;\\n        }\\n        return false;\\n    };\\n    // 请把你的代码写在这条注释以下\\n    // 请把你的代码写在这条注释以上\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/data-structures/size-of-the-set\",\"id\":\"587d8253367417b2b2512c6b\"},\"slug\":\"/coding-interview-prep/data-structures/remove-from-a-set\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-data-structures-remove-from-a-set-b1bcd980bbf22831fef9.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Remove from a Set\",\"description\":[\"在本次练习当中我们来为集合创建一个删除方法，该方法命名为<code>this.remove</code>。它接收一个值并判断该值在集合中是否存在，如何存在就从集合中移除该元素并返回<code>true</code>，否则返回<code>false</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/coding-interview-prep/data-structures/remove-from-a-set\",\"blockName\":\"Data Structures\",\"tests\":[{\"text\":\"<code>Set</code>应该有<code>remove</code>方法。\",\"testString\":\"assert((function(){var test = new Set(); return (typeof test.remove === 'function')}()), '<code>Set</code>应该有<code>remove</code>方法。');\"},{\"text\":\"<code>remove</code>方法应该只移除集合中存在的元素。\",\"testString\":\"assert.deepEqual((function(){var test = new Set(); test.add('a');test.add('b');test.remove('c'); return test.values(); })(), ['a', 'b'], '<code>remove</code>方法应该只移除集合中存在的元素。');\"},{\"text\":\"<code>remove</code>方法应该移除集合中的指定元素。\",\"testString\":\"assert((function(){var test = new Set(); test.add('a');test.add('b');test.remove('a'); var vals = test.values(); return (vals[0] === 'b' && vals.length === 1)}()), '<code>remove</code>方法应该移除集合中的指定元素。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function Set() {\\n    // collection 变量用来存储集合中的元素\\n    var collection = [];\\n    // 当集合中存在 element 元素时返回 true 否则返回 false \\n    this.has = function(element) {\\n        return (collection.indexOf(element) !== -1);\\n    };\\n    // 该方法会返回集合内所有元素\\n    this.values = function() {\\n        return collection;\\n    };\\n    // 该方法会把 element 添加到集合中\\n    this.add = function(element) {\\n        if(!this.has(element)){\\n            collection.push(element);\\n            return true;\\n        }\\n        return false;\\n    };\\n    // 请把你的代码写在这条注释以下\\n    // 请把你的代码写在这条注释以上\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/data-structures/size-of-the-set\",\"id\":\"587d8253367417b2b2512c6b\"},\"slug\":\"/coding-interview-prep/data-structures/remove-from-a-set\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-data-structures-remove-from-a-set.json\n// module id = 2849\n// module chunks = 216942103887955"],"sourceRoot":""}