{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-regular-expressions-using-the-test-method-5ce5e94cd437dde1c594.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-using-the-test-method.json"],"names":["webpackJsonp","4011","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wBAAAC,aAAA,ueAA0f,iGAAAC,cAAA,EAAAC,QAA+JC,KAAA,uFAAAC,UAAA,sBAAAC,QAA0IC,KAAA,uCAAAC,WAAA,sGAAiKD,KAAA,8BAAAC,WAAA,6DAA8GC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,0FAAsIC,KAAA,GAAAC,KAAA,IAA+BC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,uFAAAC,GAAA,4BAAwLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-regular-expressions-using-the-test-method-5ce5e94cd437dde1c594.js","sourcesContent":["webpackJsonp([5561588692803],{\n\n/***/ 4011:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Using the Test Method\",\"description\":[\"在编程语言中，正则表达式用于匹配指定的字符串。通过正则表达式创建匹配模式（规则）可以帮你完成指定匹配。\",\"如果你想要在字符串<code>\\\"The dog chased the cat\\\"</code>中匹配到<code>\\\"the\\\"</code>这个单词，你可以使用如下正则表达式：<code>/the/</code>。注意，正则表达式中不需要引号。\",\"JavaScript 中有多种使用正则表达式的方法。测试正则表达式的一种方法是使用<code>.test()</code>方法。<code>.test()</code>方法会把你编写的正则表达式应用到一个字符串（即括号内的内容），如果你的匹配模式成功匹配到字符，则返回<code>true</code>，反之，返回<code>false</code>。\",\"<blockquote>let testStr = \\\"freeCodeCamp\\\";<br>let testRegex = /Code/;<br>testRegex.test(testStr);<br>// Returns true</blockquote>\",\"<hr>\",\"使用<code>.test()</code>方法，检测字符串<code>myString</code>是否符合正则表达式<code>myRegex</code>定义的规则。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你应该使用<code>.test()</code>方法来检测正则表达式。\",\"testString\":\"assert(code.match(/myRegex.test\\\\(\\\\s*myString\\\\s*\\\\)/), '你应该使用<code>.test()</code>方法来检测正则表达式。');\"},{\"text\":\"你的返回结果应该为<code>true</code>。\",\"testString\":\"assert(result === true, '你的返回结果应该为<code>true</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let myString = \\\"Hello, World!\\\";\\nlet myRegex = /Hello/;\\nlet result = myRegex; // 修改这一行\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-literal-strings\",\"id\":\"587d7db3367417b2b2512b8e\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-regular-expressions-using-the-test-method-5ce5e94cd437dde1c594.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Using the Test Method\",\"description\":[\"在编程语言中，正则表达式用于匹配指定的字符串。通过正则表达式创建匹配模式（规则）可以帮你完成指定匹配。\",\"如果你想要在字符串<code>\\\"The dog chased the cat\\\"</code>中匹配到<code>\\\"the\\\"</code>这个单词，你可以使用如下正则表达式：<code>/the/</code>。注意，正则表达式中不需要引号。\",\"JavaScript 中有多种使用正则表达式的方法。测试正则表达式的一种方法是使用<code>.test()</code>方法。<code>.test()</code>方法会把你编写的正则表达式应用到一个字符串（即括号内的内容），如果你的匹配模式成功匹配到字符，则返回<code>true</code>，反之，返回<code>false</code>。\",\"<blockquote>let testStr = \\\"freeCodeCamp\\\";<br>let testRegex = /Code/;<br>testRegex.test(testStr);<br>// Returns true</blockquote>\",\"<hr>\",\"使用<code>.test()</code>方法，检测字符串<code>myString</code>是否符合正则表达式<code>myRegex</code>定义的规则。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你应该使用<code>.test()</code>方法来检测正则表达式。\",\"testString\":\"assert(code.match(/myRegex.test\\\\(\\\\s*myString\\\\s*\\\\)/), '你应该使用<code>.test()</code>方法来检测正则表达式。');\"},{\"text\":\"你的返回结果应该为<code>true</code>。\",\"testString\":\"assert(result === true, '你的返回结果应该为<code>true</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let myString = \\\"Hello, World!\\\";\\nlet myRegex = /Hello/;\\nlet result = myRegex; // 修改这一行\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-literal-strings\",\"id\":\"587d7db3367417b2b2512b8e\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-using-the-test-method.json\n// module id = 4011\n// module chunks = 5561588692803"],"sourceRoot":""}