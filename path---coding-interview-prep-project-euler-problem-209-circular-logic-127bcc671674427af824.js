webpackJsonp([0xf8d1102dae8],{2983:function(e,t){e.exports={data:{challengeNode:{title:"Problem 209: Circular Logic",description:["A k-input binary truth table is a map from k input bits","(binary digits, 0 [false] or 1 [true]) to 1 output bit. For example, the 2-input binary truth tables for the logical AND and XOR functions are:","","x","y","x AND y000010100111x","y","x XOR y000011101110How many 6-input binary truth tables, τ, satisfy the formula","","τ(a, b, c, d, e, f) AND τ(b, c, d, e, f, a XOR (b AND c)) = 0","for all 6-bit inputs (a, b, c, d, e, f)?"],challengeType:5,fields:{slug:"/coding-interview-prep/project-euler/problem-209-circular-logic",blockName:"Project Euler",tests:[{text:"<code>euler209()</code> should return 15964587728784.",testString:"assert.strictEqual(euler209(), 15964587728784, '<code>euler209()</code> should return 15964587728784.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function euler209() {\n  // Good luck!\n  return true;\n}\n\neuler209();",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/project-euler/problem-210-obtuse-angled-triangles",id:"5900f43e1000cf542c50ff4f"},slug:"/coding-interview-prep/project-euler/problem-209-circular-logic"}}}});
//# sourceMappingURL=path---coding-interview-prep-project-euler-problem-209-circular-logic-127bcc671674427af824.js.map