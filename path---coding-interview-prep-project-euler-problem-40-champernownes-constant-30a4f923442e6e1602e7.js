webpackJsonp([0xf275f07e243],{3195:function(e,n){e.exports={data:{challengeNode:{title:"Problem 40: Champernowne's constant",description:["将所有正整数连接起来构造的一个十进制无理数如下所示：","<span style='display: block; text-align: center;'>0.12345678910<b style='color: red;'>1</b>112131415161718192021...</span>","可以看出小数点后第 12 位数字是 1。","如果 d<sub>n</sub> 表示上述无理数小数点后的第 n 位数字，求下式的值：","<span style='display: block; text-align: center;'>d<sub>1</sub> × d<sub>10</sub> × d<sub>100</sub> × d<sub>1000</sub> × d<sub>10000</sub> × d<sub>100000</sub> × d<sub>1000000</sub></span>"],challengeType:5,fields:{slug:"/coding-interview-prep/project-euler/problem-40-champernownes-constant",blockName:"Project Euler",tests:[{text:"<code>champernownesConstant(100)</code>应该返回 5。",testString:"assert.strictEqual(champernownesConstant(100), 5, '<code>champernownesConstant(100)</code>应该返回 5。');"},{text:"<code>champernownesConstant(1000)</code>应该返回 15。",testString:"assert.strictEqual(champernownesConstant(1000), 15, '<code>champernownesConstant(1000)</code>应该返回 15。');"},{text:"<code>champernownesConstant(1000000)</code>应该返回 210。",testString:"assert.strictEqual(champernownesConstant(1000000), 210, '<code>champernownesConstant(1000000)</code>应该返回 210。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function champernownesConstant(n) {\n  // 祝你好运！\n  return true;\n}\n\nchampernownesConstant(100);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/project-euler/problem-41-pandigital-prime",id:"5900f3941000cf542c50fea7"},slug:"/coding-interview-prep/project-euler/problem-40-champernownes-constant"}}}});
//# sourceMappingURL=path---coding-interview-prep-project-euler-problem-40-champernownes-constant-30a4f923442e6e1602e7.js.map