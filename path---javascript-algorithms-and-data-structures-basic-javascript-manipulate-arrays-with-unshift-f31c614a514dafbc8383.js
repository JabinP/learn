webpackJsonp([0xc7590fcc1395],{3818:function(a,t){a.exports={data:{challengeNode:{title:"Manipulate Arrays With unshift()",description:["你不仅可以<code>shift</code>（移出）数组中的第一个元素，你也可以<code>unshift</code>（移入）一个元素到数组的头部。","<code>.unshift()</code>函数用起来就像<code>.push()</code>函数一样, 但不是在数组的末尾添加元素，而是在数组的头部添加元素。","<hr>",'使用<code>unshift()</code>函数把<code>["Paul",35]</code>加入到<code>myArray</code>的头部。'],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-unshift",blockName:"Basic JavaScript",tests:[{text:'<code>myArray</code>应该包含[["Paul", 35], ["dog", 3]].',testString:"assert((function(d){if(typeof d[0] === \"object\" && d[0][0] == 'Paul' && d[0][1] === 35 && d[1][0] != undefined && d[1][0] == 'dog' && d[1][1] != undefined && d[1][1] == 3){return true;}else{return false;}})(myArray), '<code>myArray</code>应该包含[[\"Paul\", 35], [\"dog\", 3]].');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'// 示例\nvar ourArray = ["Stimpson", "J", "cat"];\nourArray.shift(); // 经过 shift 操作后，ourArray 的值为 ["J", "cat"]\nourArray.unshift("Happy"); \n// 经过 unshift 操作后，ourArray 的值为 ["Happy", "J", "cat"]\n\n// 初始化变量\nvar myArray = [["John", 23], ["dog", 3]];\nmyArray.shift();\n\n// 请把你的代码写在这条注释以下\n\n',head:"",tail:"(function(y, z){return 'myArray = ' + JSON.stringify(y);})(myArray);"},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/shopping-list",id:"56bbb991ad1ed5201cd392ce"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-unshift"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-manipulate-arrays-with-unshift-f31c614a514dafbc8383.js.map