webpackJsonp([0xe8a3b2e64e71],{3139:function(e,r){e.exports={data:{challengeNode:{title:"Problem 35: Circular primes",description:["197 被称为圆周素数，因为将它逐位旋转所得到的数：197、971 和 719 都是素数。","小于 100 的圆周素数有十三个：2、3、5、7、11、13、17、31、37、71、73、79 和 97。","小于给定参数 n （100 <= n <= 1000000）的圆周素数有多少个？"],challengeType:5,fields:{slug:"/coding-interview-prep/project-euler/problem-35-circular-primes",blockName:"Project Euler",tests:[{text:"<code>circularPrimes(100)</code>应该返回 13。",testString:"assert(circularPrimes(100) == 13, '<code>circularPrimes(100)</code>应该返回 13。');"},{text:"<code>circularPrimes(100000)</code>应该返回 43。",testString:"assert(circularPrimes(100000) == 43, '<code>circularPrimes(100000)</code>应该返回 43。');"},{text:"<code>circularPrimes(250000)</code>应该返回 45。",testString:"assert(circularPrimes(250000) == 45, '<code>circularPrimes(250000)</code>应该返回 45。');"},{text:"<code>circularPrimes(500000)</code>应该返回 49。",testString:"assert(circularPrimes(500000) == 49, '<code>circularPrimes(500000)</code>应该返回 49。');"},{text:"<code>circularPrimes(750000)</code>应该返回 49。",testString:"assert(circularPrimes(750000) == 49, '<code>circularPrimes(750000)</code>应该返回 49。');"},{text:"<code>circularPrimes(1000000)</code>应该返回 55。",testString:"assert(circularPrimes(1000000) == 55, '<code>circularPrimes(1000000)</code>应该返回 55。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function circularPrimes(n) {\n  // 祝你好运！\n  return n;\n}\n\ncircularPrimes(1000000);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/project-euler/problem-36-double-base-palindromes",id:"5900f38f1000cf542c50fea2"},slug:"/coding-interview-prep/project-euler/problem-35-circular-primes"}}}});
//# sourceMappingURL=path---coding-interview-prep-project-euler-problem-35-circular-primes-3f517c7a879166aec9e5.js.map