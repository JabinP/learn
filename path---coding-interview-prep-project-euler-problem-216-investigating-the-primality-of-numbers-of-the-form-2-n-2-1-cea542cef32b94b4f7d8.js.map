{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-216-investigating-the-primality-of-numbers-of-the-form-2-n-2-1-cea542cef32b94b4f7d8.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-216-investigating-the-primality-of-numbers-of-the-form-2-n-2-1.json"],"names":["webpackJsonp","2991","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wEAAAC,aAAA,sTAAAC,cAAA,EAAAC,QAAibC,KAAA,4GAAAC,UAAA,gBAAAC,QAAyJC,KAAA,iDAAAC,WAAA,gGAAoKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,oEAAAC,GAAA,4BAAqKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-216-investigating-the-primality-of-numbers-of-the-form-2-n-2-1-cea542cef32b94b4f7d8.js","sourcesContent":["webpackJsonp([223241865127206],{\n\n/***/ 2991:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 216: Investigating the primality of numbers of the form 2n2-1\",\"description\":[\"Consider numbers t(n) of the form t(n) = 2n2-1 with n > 1.\",\"The first such numbers are 7, 17, 31, 49, 71, 97, 127 and 161.\",\"It turns out that only 49 = 7*7 and 161 = 7*23 are not prime.\",\"For n ≤ 10000 there are 2202 numbers t(n)  that are prime.\",\"\",\"How many numbers t(n) are prime for n ≤ 50,000,000 ?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-216-investigating-the-primality-of-numbers-of-the-form-2n2-1\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler216()</code> should return 5437849.\",\"testString\":\"assert.strictEqual(euler216(), 5437849, '<code>euler216()</code> should return 5437849.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler216() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler216();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-217-balanced-numbers\",\"id\":\"5900f4451000cf542c50ff57\"},\"slug\":\"/coding-interview-prep/project-euler/problem-216-investigating-the-primality-of-numbers-of-the-form-2n2-1\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-216-investigating-the-primality-of-numbers-of-the-form-2-n-2-1-cea542cef32b94b4f7d8.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 216: Investigating the primality of numbers of the form 2n2-1\",\"description\":[\"Consider numbers t(n) of the form t(n) = 2n2-1 with n > 1.\",\"The first such numbers are 7, 17, 31, 49, 71, 97, 127 and 161.\",\"It turns out that only 49 = 7*7 and 161 = 7*23 are not prime.\",\"For n ≤ 10000 there are 2202 numbers t(n)  that are prime.\",\"\",\"How many numbers t(n) are prime for n ≤ 50,000,000 ?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-216-investigating-the-primality-of-numbers-of-the-form-2n2-1\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler216()</code> should return 5437849.\",\"testString\":\"assert.strictEqual(euler216(), 5437849, '<code>euler216()</code> should return 5437849.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler216() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler216();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-217-balanced-numbers\",\"id\":\"5900f4451000cf542c50ff57\"},\"slug\":\"/coding-interview-prep/project-euler/problem-216-investigating-the-primality-of-numbers-of-the-form-2n2-1\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-216-investigating-the-primality-of-numbers-of-the-form-2-n-2-1.json\n// module id = 2991\n// module chunks = 223241865127206"],"sourceRoot":""}