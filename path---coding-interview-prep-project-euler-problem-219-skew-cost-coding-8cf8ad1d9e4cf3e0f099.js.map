{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-219-skew-cost-coding-8cf8ad1d9e4cf3e0f099.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-219-skew-cost-coding.json"],"names":["webpackJsonp","2994","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,gCAAAC,aAAA,uuBAAAC,cAAA,EAAAC,QAA0zBC,KAAA,oEAAAC,UAAA,gBAAAC,QAAiHC,KAAA,qDAAAC,WAAA,wGAAgLC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,mEAAAC,GAAA,4BAAoKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-219-skew-cost-coding-8cf8ad1d9e4cf3e0f099.js","sourcesContent":["webpackJsonp([2791030658286],{\n\n/***/ 2994:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 219: Skew-cost coding\",\"description\":[\"Let A and B be bit strings (sequences of 0's and 1's).\",\"If A is equal to the leftmost length(A) bits of B, then A is said to be a prefix of B.\",\"For example, 00110 is a prefix of 001101001, but not of 00111 or 100110.\",\"\",\"A prefix-free code of size n is a collection of n distinct bit strings such that no string is a prefix of any other.  For example, this is a prefix-free code of size 6:\",\"\",\"0000, 0001, 001, 01, 10, 11\",\"\",\"Now suppose that it costs one penny to transmit a '0' bit, but four pence to transmit a '1'.\",\"Then the total cost of the prefix-free code shown above is 35 pence, which happens to be the cheapest possible for the skewed pricing scheme in question.\",\"In short, we write Cost(6) = 35.\",\"\",\"What is Cost(109) ?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-219-skew-cost-coding\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler219()</code> should return 64564225042.\",\"testString\":\"assert.strictEqual(euler219(), 64564225042, '<code>euler219()</code> should return 64564225042.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler219() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler219();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-220-heighway-dragon\",\"id\":\"5900f4481000cf542c50ff5a\"},\"slug\":\"/coding-interview-prep/project-euler/problem-219-skew-cost-coding\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-219-skew-cost-coding-8cf8ad1d9e4cf3e0f099.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 219: Skew-cost coding\",\"description\":[\"Let A and B be bit strings (sequences of 0's and 1's).\",\"If A is equal to the leftmost length(A) bits of B, then A is said to be a prefix of B.\",\"For example, 00110 is a prefix of 001101001, but not of 00111 or 100110.\",\"\",\"A prefix-free code of size n is a collection of n distinct bit strings such that no string is a prefix of any other.  For example, this is a prefix-free code of size 6:\",\"\",\"0000, 0001, 001, 01, 10, 11\",\"\",\"Now suppose that it costs one penny to transmit a '0' bit, but four pence to transmit a '1'.\",\"Then the total cost of the prefix-free code shown above is 35 pence, which happens to be the cheapest possible for the skewed pricing scheme in question.\",\"In short, we write Cost(6) = 35.\",\"\",\"What is Cost(109) ?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-219-skew-cost-coding\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler219()</code> should return 64564225042.\",\"testString\":\"assert.strictEqual(euler219(), 64564225042, '<code>euler219()</code> should return 64564225042.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler219() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler219();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-220-heighway-dragon\",\"id\":\"5900f4481000cf542c50ff5a\"},\"slug\":\"/coding-interview-prep/project-euler/problem-219-skew-cost-coding\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-219-skew-cost-coding.json\n// module id = 2994\n// module chunks = 2791030658286"],"sourceRoot":""}