{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-hofstadter-q-sequence-29c900998821855816e3.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-hofstadter-q-sequence.json"],"names":["webpackJsonp","3406","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wBAAAC,aAAA,+tBAAAC,cAAA,EAAAC,QAAkzBC,KAAA,4DAAAC,UAAA,eAAAC,QAAwGC,KAAA,0CAAAC,WAAA,0FAAwJD,KAAA,gEAAAC,WAAA,kHAAsMD,KAAA,gEAAAC,WAAA,qHAAyMD,KAAA,gEAAAC,WAAA,qHAAyMD,KAAA,iEAAAC,WAAA,sHAA2MD,KAAA,iEAAAC,WAAA,uHAA2MC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,8DAAiHC,KAAA,GAAAC,KAAA,mFAAqGC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,gEAAAC,GAAA,4BAAiKrB,KAAA","file":"path---coding-interview-prep-rosetta-code-hofstadter-q-sequence-29c900998821855816e3.js","sourcesContent":["webpackJsonp([88010446248376],{\n\n/***/ 3406:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Hofstadter Q sequence\",\"description\":[\"<p>The <a href=\\\"https://en.wikipedia.org/wiki/Hofstadter_sequence#Hofstadter_Q_sequence\\\" title=\\\"wp: Hofstadter_sequence#Hofstadter_Q_sequence\\\">Hofstadter Q sequence</a> is defined as:</p>\",\"<p>$Q(1)=Q(2)=1, \\\\\\\\ Q(n)=Q\\\\big(n-Q(n-1)\\\\big)+Q\\\\big(n-Q(n-2)), \\\\quad n>2.$</p>\",\"<p>It is defined like the <a href=\\\"http://rosettacode.org/wiki/Fibonacci sequence\\\" title=\\\"Fibonacci sequence\\\">Fibonacci sequence</a>, but whereas the next term in the Fibonacci sequence is the sum of the previous two terms, in the Q sequence the previous two terms tell you how far to go back in the Q sequence to find the two numbers to sum to make the next term of the sequence.</p>\",\"Task:\",\"Implement the Hofstadter Q Sequence equation into JavaScript\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/hofstadter-q-sequence\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>hofstadterQ</code> is a function.\",\"testString\":\"assert(typeof hofstadterQ === 'function', '<code>hofstadterQ</code> is a function.');\"},{\"text\":\"<code>hofstadterQ()</code> should return <code>integer</code>\",\"testString\":\"assert(Number.isInteger(hofstadterQ(1000)), '<code>hofstadterQ()</code> should return <code>integer</code>');\"},{\"text\":\"<code>hofstadterQ(1000)</code> should return <code>502</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[0]), res[0], '<code>hofstadterQ(1000)</code> should return <code>502</code>');\"},{\"text\":\"<code>hofstadterQ(1500)</code> should return <code>755</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[1]), res[1], '<code>hofstadterQ(1500)</code> should return <code>755</code>');\"},{\"text\":\"<code>hofstadterQ(2000)</code> should return <code>1005</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[2]), res[2], '<code>hofstadterQ(2000)</code> should return <code>1005</code>');\"},{\"text\":\"<code>hofstadterQ(2500)</code> should return <code>1261</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[3]), res[3], '<code>hofstadterQ(2500)</code> should return <code>1261</code>');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function hofstadterQ (n) {\\n  // Good luck!\\n  return n;\\n}\",\"head\":\"\",\"tail\":\"const testCase = [1000, 1500, 2000, 2500];\\nconst res = [502, 755, 1005, 1261];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/i-before-e-except-after-c\",\"id\":\"59637c4d89f6786115efd814\"},\"slug\":\"/coding-interview-prep/rosetta-code/hofstadter-q-sequence\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-hofstadter-q-sequence-29c900998821855816e3.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Hofstadter Q sequence\",\"description\":[\"<p>The <a href=\\\"https://en.wikipedia.org/wiki/Hofstadter_sequence#Hofstadter_Q_sequence\\\" title=\\\"wp: Hofstadter_sequence#Hofstadter_Q_sequence\\\">Hofstadter Q sequence</a> is defined as:</p>\",\"<p>$Q(1)=Q(2)=1, \\\\\\\\ Q(n)=Q\\\\big(n-Q(n-1)\\\\big)+Q\\\\big(n-Q(n-2)), \\\\quad n>2.$</p>\",\"<p>It is defined like the <a href=\\\"http://rosettacode.org/wiki/Fibonacci sequence\\\" title=\\\"Fibonacci sequence\\\">Fibonacci sequence</a>, but whereas the next term in the Fibonacci sequence is the sum of the previous two terms, in the Q sequence the previous two terms tell you how far to go back in the Q sequence to find the two numbers to sum to make the next term of the sequence.</p>\",\"Task:\",\"Implement the Hofstadter Q Sequence equation into JavaScript\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/hofstadter-q-sequence\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>hofstadterQ</code> is a function.\",\"testString\":\"assert(typeof hofstadterQ === 'function', '<code>hofstadterQ</code> is a function.');\"},{\"text\":\"<code>hofstadterQ()</code> should return <code>integer</code>\",\"testString\":\"assert(Number.isInteger(hofstadterQ(1000)), '<code>hofstadterQ()</code> should return <code>integer</code>');\"},{\"text\":\"<code>hofstadterQ(1000)</code> should return <code>502</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[0]), res[0], '<code>hofstadterQ(1000)</code> should return <code>502</code>');\"},{\"text\":\"<code>hofstadterQ(1500)</code> should return <code>755</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[1]), res[1], '<code>hofstadterQ(1500)</code> should return <code>755</code>');\"},{\"text\":\"<code>hofstadterQ(2000)</code> should return <code>1005</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[2]), res[2], '<code>hofstadterQ(2000)</code> should return <code>1005</code>');\"},{\"text\":\"<code>hofstadterQ(2500)</code> should return <code>1261</code>\",\"testString\":\"assert.equal(hofstadterQ(testCase[3]), res[3], '<code>hofstadterQ(2500)</code> should return <code>1261</code>');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function hofstadterQ (n) {\\n  // Good luck!\\n  return n;\\n}\",\"head\":\"\",\"tail\":\"const testCase = [1000, 1500, 2000, 2500];\\nconst res = [502, 755, 1005, 1261];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/i-before-e-except-after-c\",\"id\":\"59637c4d89f6786115efd814\"},\"slug\":\"/coding-interview-prep/rosetta-code/hofstadter-q-sequence\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-hofstadter-q-sequence.json\n// module id = 3406\n// module chunks = 88010446248376"],"sourceRoot":""}