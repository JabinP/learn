{"version":3,"sources":["webpack:///path---responsive-web-design-basic-css-override-all-other-styles-by-using-important-c0de86fa4c2787e44f5d.js","webpack:///./.cache/json/responsive-web-design-basic-css-override-all-other-styles-by-using-important.json"],"names":["webpackJsonp","4107","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+CAAAC,aAAA,mdAA+gBC,cAAA,EAAAC,QAAsCC,KAAA,gFAAAC,UAAA,YAAAC,QAAyHC,KAAA,qDAAAC,WAAA,mGAA8KD,KAAA,qDAAAC,WAAA,mGAA8KD,KAAA,wDAAAC,WAAA,6GAA6LD,KAAA,6DAA6CC,WAAA,iJAAqLD,KAAA,iEAAAC,WAAA,qKAA0PD,KAAA,+BAAAC,WAAA,8FAAoJC,YAAAC,OAAwBC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,mUAAuRC,KAAA,GAAAC,KAAA,IAA+HC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,oEAAAC,GAAA,4BAAqKrB,KAAA","file":"path---responsive-web-design-basic-css-override-all-other-styles-by-using-important-c0de86fa4c2787e44f5d.js","sourcesContent":["webpackJsonp([88095363268877],{\n\n/***/ 4107:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Override All Other Styles by using Important\",\"description\":[\"耶！我们刚刚又证明了行内样式会覆盖<code>style</code>标签里面所有的 CSS 声明。\",\"不过，还有一种方式可以覆盖重新 CSS 样式。这是所有方法里面最强大的一个。在此之前，我们要考虑清楚，为什么我们需要覆盖 CSS 样式。\",\"在很多时候，你使用 CSS 库，有时候它们声明的样式会意外的覆盖你的 CSS 样式。当你需要保证你的 CSS 样式不受影响，你可以使用<code>!important</code>。\",\"让我们回到<code>pink-text</code>class 声明之中，它已经被随其后的 class 声明，id 声明，以及行内样式所覆盖。\",\"<hr>\",\"在<code>pink-text</code>class 的<code>color</code>声明里面使用<code>!important</code>关键字，去确保<code>h1</code>元素的字体颜色一定为粉色。\",\"操作的方法大概如下：\",\"<code>color: red !important;</code>\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/basic-css/override-all-other-styles-by-using-important\",\"blockName\":\"Basic CSS\",\"tests\":[{\"text\":\"<code>h1</code>元素应该包含<code>pink-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"pink-text\\\"), '<code>h1</code>元素应该包含<code>pink-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>blue-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"blue-text\\\"), '<code>h1</code>元素应该包含<code>blue-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含一个名为<code>orange-text</code>的id。\",\"testString\":\"assert($(\\\"h1\\\").attr(\\\"id\\\") === \\\"orange-text\\\", '<code>h1</code>元素应该包含一个名为<code>orange-text</code>的id。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>color&#58; white</code>的行内样式声明。\",\"testString\":\"assert(code.match(/<h1.*style/gi) && code.match(/<h1.*style.*color\\\\s*?:/gi), '<code>h1</code>元素应该包含<code>color&#58; white</code>的行内样式声明。');\"},{\"text\":\"<code>pink-text</code> class 声明应该含有<code>!important</code>关键字。\",\"testString\":\"assert(code.match(/\\\\.pink-text\\\\s*?\\\\{[\\\\s\\\\S]*?color:.*pink.*!important\\\\s*;?[^\\\\.]*\\\\}/g), '<code>pink-text</code> class 声明应该含有<code>!important</code>关键字。');\"},{\"text\":\"<code>h1</code>元素的字体颜色应该为粉色。\",\"testString\":\"assert($(\\\"h1\\\").css(\\\"color\\\") === \\\"rgb(255, 192, 203)\\\", '<code>h1</code>元素的字体颜色应该为粉色。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  body {\\n    background-color: black;\\n    font-family: monospace;\\n    color: green;\\n  }\\n  #orange-text {\\n    color: orange;\\n  }\\n  .pink-text {\\n    color: pink;\\n  }\\n  .blue-text {\\n    color: blue;\\n  }\\n</style>\\n<h1 id=\\\"orange-text\\\" class=\\\"pink-text blue-text\\\" style=\\\"color: white\\\">Hello World!</h1>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/basic-css/use-hex-code-for-specific-colors\",\"id\":\"bad87fee1348bd9aedf07756\"},\"slug\":\"/responsive-web-design/basic-css/override-all-other-styles-by-using-important\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-web-design-basic-css-override-all-other-styles-by-using-important-c0de86fa4c2787e44f5d.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Override All Other Styles by using Important\",\"description\":[\"耶！我们刚刚又证明了行内样式会覆盖<code>style</code>标签里面所有的 CSS 声明。\",\"不过，还有一种方式可以覆盖重新 CSS 样式。这是所有方法里面最强大的一个。在此之前，我们要考虑清楚，为什么我们需要覆盖 CSS 样式。\",\"在很多时候，你使用 CSS 库，有时候它们声明的样式会意外的覆盖你的 CSS 样式。当你需要保证你的 CSS 样式不受影响，你可以使用<code>!important</code>。\",\"让我们回到<code>pink-text</code>class 声明之中，它已经被随其后的 class 声明，id 声明，以及行内样式所覆盖。\",\"<hr>\",\"在<code>pink-text</code>class 的<code>color</code>声明里面使用<code>!important</code>关键字，去确保<code>h1</code>元素的字体颜色一定为粉色。\",\"操作的方法大概如下：\",\"<code>color: red !important;</code>\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/basic-css/override-all-other-styles-by-using-important\",\"blockName\":\"Basic CSS\",\"tests\":[{\"text\":\"<code>h1</code>元素应该包含<code>pink-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"pink-text\\\"), '<code>h1</code>元素应该包含<code>pink-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>blue-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"blue-text\\\"), '<code>h1</code>元素应该包含<code>blue-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含一个名为<code>orange-text</code>的id。\",\"testString\":\"assert($(\\\"h1\\\").attr(\\\"id\\\") === \\\"orange-text\\\", '<code>h1</code>元素应该包含一个名为<code>orange-text</code>的id。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>color&#58; white</code>的行内样式声明。\",\"testString\":\"assert(code.match(/<h1.*style/gi) && code.match(/<h1.*style.*color\\\\s*?:/gi), '<code>h1</code>元素应该包含<code>color&#58; white</code>的行内样式声明。');\"},{\"text\":\"<code>pink-text</code> class 声明应该含有<code>!important</code>关键字。\",\"testString\":\"assert(code.match(/\\\\.pink-text\\\\s*?\\\\{[\\\\s\\\\S]*?color:.*pink.*!important\\\\s*;?[^\\\\.]*\\\\}/g), '<code>pink-text</code> class 声明应该含有<code>!important</code>关键字。');\"},{\"text\":\"<code>h1</code>元素的字体颜色应该为粉色。\",\"testString\":\"assert($(\\\"h1\\\").css(\\\"color\\\") === \\\"rgb(255, 192, 203)\\\", '<code>h1</code>元素的字体颜色应该为粉色。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  body {\\n    background-color: black;\\n    font-family: monospace;\\n    color: green;\\n  }\\n  #orange-text {\\n    color: orange;\\n  }\\n  .pink-text {\\n    color: pink;\\n  }\\n  .blue-text {\\n    color: blue;\\n  }\\n</style>\\n<h1 id=\\\"orange-text\\\" class=\\\"pink-text blue-text\\\" style=\\\"color: white\\\">Hello World!</h1>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/basic-css/use-hex-code-for-specific-colors\",\"id\":\"bad87fee1348bd9aedf07756\"},\"slug\":\"/responsive-web-design/basic-css/override-all-other-styles-by-using-important\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-web-design-basic-css-override-all-other-styles-by-using-important.json\n// module id = 4107\n// module chunks = 88095363268877"],"sourceRoot":""}