{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-305-reflexive-position-2d49b0fb5fa6afacb020.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-305-reflexive-position.json"],"names":["webpackJsonp","3090","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,kCAAAC,aAAA,odAAAC,cAAA,EAAAC,QAAyiBC,KAAA,sEAAAC,UAAA,gBAAAC,QAAmHC,KAAA,wDAAAC,WAAA,8GAAyLC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,oEAAAC,GAAA,4BAAqKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-305-reflexive-position-2d49b0fb5fa6afacb020.js","sourcesContent":["webpackJsonp([232289611848081],{\n\n/***/ 3090:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 305: Reflexive Position\",\"description\":[\"Let's call S the (infinite) string that is made by concatenating the consecutive positive integers (starting from 1)  written down in base 10. \",\"Thus, S = 1234567891011121314151617181920212223242...\",\"\",\"\",\"It's easy to see that any number will show up an infinite number of times in S.\",\"\",\"\",\"Let's call f(n) the starting position of the nth occurrence of n in S. \",\"For example, f(1)=1, f(5)=81, f(12)=271 and f(7780)=111111365.\",\"\",\"\",\"Find ∑f(3k) for 1≤k≤13.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-305-reflexive-position\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler305()</code> should return 18174995535140.\",\"testString\":\"assert.strictEqual(euler305(), 18174995535140, '<code>euler305()</code> should return 18174995535140.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler305() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler305();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-306-paper-strip-game\",\"id\":\"5900f49d1000cf542c50ffb0\"},\"slug\":\"/coding-interview-prep/project-euler/problem-305-reflexive-position\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-305-reflexive-position-2d49b0fb5fa6afacb020.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 305: Reflexive Position\",\"description\":[\"Let's call S the (infinite) string that is made by concatenating the consecutive positive integers (starting from 1)  written down in base 10. \",\"Thus, S = 1234567891011121314151617181920212223242...\",\"\",\"\",\"It's easy to see that any number will show up an infinite number of times in S.\",\"\",\"\",\"Let's call f(n) the starting position of the nth occurrence of n in S. \",\"For example, f(1)=1, f(5)=81, f(12)=271 and f(7780)=111111365.\",\"\",\"\",\"Find ∑f(3k) for 1≤k≤13.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-305-reflexive-position\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler305()</code> should return 18174995535140.\",\"testString\":\"assert.strictEqual(euler305(), 18174995535140, '<code>euler305()</code> should return 18174995535140.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler305() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler305();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-306-paper-strip-game\",\"id\":\"5900f49d1000cf542c50ffb0\"},\"slug\":\"/coding-interview-prep/project-euler/problem-305-reflexive-position\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-305-reflexive-position.json\n// module id = 3090\n// module chunks = 232289611848081"],"sourceRoot":""}