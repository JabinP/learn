webpackJsonp([0xcc88367cdfdd],{3084:function(e,t){e.exports={data:{challengeNode:{title:"Problem 30: Digit n powers",description:["令人惊讶的是，只有三个数可以写成它们各位数字的四次幂之和：","1634 = 1<sup>4</sup> + 6<sup>4 + 3<sup>4 + 4<sup>4","8208 = 8<sup>4</sup> + 2<sup>4</sup> + 0<sup>4</sup> + 8<sup>4</sup>","9474 = 9<sup>4</sup> + 4<sup>4</sup> + 7<sup>4</sup> + 4<sup>4</sup>","由于 1 = 1<sup>4</sup> 不是一个和，所以这里并没有把它包括进去。","这些数的和是 1634 + 8208 + 9474 = 19316。","找出所有可以写成它们各位数字的给定参数 n 次幂之和的数，并求这些数的和。"],challengeType:5,fields:{slug:"/coding-interview-prep/project-euler/problem-30-digit-n-powers",blockName:"Project Euler",tests:[{text:"<code>digitnPowers(2)</code>应该返回 0。",testString:"assert(digitnPowers(2) == 0, '<code>digitnPowers(2)</code>应该返回 0。');"},{text:"<code>digitnPowers(3)</code>应该返回 1301。",testString:"assert(digitnPowers(3) == 1301, '<code>digitnPowers(3)</code>应该返回 1301。');"},{text:"<code>digitnPowers(4)</code>应该返回 19316。",testString:"assert(digitnPowers(4) == 19316, '<code>digitnPowers(4)</code>应该返回 19316。');"},{text:"<code>digitnPowers(5)</code>应该返回 443839。",testString:"assert(digitnPowers(5) == 443839, '<code>digitnPowers(5)</code>应该返回 443839。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function digitnPowers(n) {\n  // 祝你好运！\n  return n;\n}\n\ndigitnPowers(5);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/project-euler/problem-31-coin-sums",id:"5900f38a1000cf542c50fe9d"},slug:"/coding-interview-prep/project-euler/problem-30-digit-n-powers"}}}});
//# sourceMappingURL=path---coding-interview-prep-project-euler-problem-30-digit-n-powers-7d74bae373e192dd5ff9.js.map