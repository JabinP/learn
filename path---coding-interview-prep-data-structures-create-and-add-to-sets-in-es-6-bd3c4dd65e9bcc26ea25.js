webpackJsonp([0xf09a8b1562d6],{2830:function(e,t){e.exports={data:{challengeNode:{title:"Create and Add to Sets in ES6",description:["在上面的练习中，我们用 ES5 实现了集合，现在我们来用 ES6 实现。在 ES6 中，这些操作会更加简单。我们可以通过 ES6 的内建<code>Set</code>数据结构，它也包含了很多上面我们自己写的方法。我们先来一起来看看这些方法：","创建一个空 set：","<code>var set = new Set();</code>","创建带有一个值的 set：","<code>var set = new Set(1);</code>","基于数组创建 set：","<code>var set = new Set([1, 2, 3]);</code>","创建好 set 之后，我们可以通过<code>add</code>方法添加元素：","<blockquote>var set = new Set([1, 2, 3]);<br>set.add([4, 5, 6]);</blockquote>","提醒一下，set 数据结构中不允许出现重复元素：","<blockquote>var set = new Set([1, 2, 3, 1, 2, 3]);<br>// set 只包含 [1, 2, 3]</blockquote>","<hr>","请修改<code>checkSet</code>函数，让它的返回<code>1, 2, 3, 'Taco', 'Cat', 'Awesome'</code>。"],challengeType:1,fields:{slug:"/coding-interview-prep/data-structures/create-and-add-to-sets-in-es6",blockName:"Data Structures",tests:[{text:"<code>Set</code>应该只包含<code>1, 2, 3, Taco, Cat, Awesome</code>这些元素。",testString:"assert(function(){var test = checkSet(); return (test.size == 6) && test.has(1) && test.has(2) && test.has(3) && test.has('Taco') && test.has('Cat') && test.has('Awesome');}, '<code>Set</code>应该只包含<code>1, 2, 3, Taco, Cat, Awesome</code>这些元素。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function checkSet() {\n  var set = new Set([1, 2, 3, 3, 2, 1, 2, 3, 1]);\n  // 请把你的代码写在这条注释以下\n  \n  // 请把你的代码写在这条注释以上\n  console.log(set);\n  return set;\n}\n\ncheckSet();",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/data-structures/remove-items-from-a-set-in-es6",id:"587d8254367417b2b2512c70"},slug:"/coding-interview-prep/data-structures/create-and-add-to-sets-in-es6"}}}});
//# sourceMappingURL=path---coding-interview-prep-data-structures-create-and-add-to-sets-in-es-6-bd3c4dd65e9bcc26ea25.js.map