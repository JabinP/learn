webpackJsonp([0xbe51dd1a99a3],{4047:function(n,i){n.exports={data:{challengeNode:{title:"Animate Elements Continually Using an Infinite Animation Count",description:["之前的关卡里介绍了一些动画属性以及<code>@keyframes</code>规则的用法。还有一个常用的动画属性是<code>animation-iteration-count</code>，这个属性允许你控制动画循环的次数。下面是一个例子：","<code>animation-iteration-count: 3;</code>","在这里动画会在运行 3 次后停止，如果想让动画一直运行，可以把值设置成 infinite。","<hr>","把<code>animation-iteration-count</code>属性改成 infinite，以使右边的球持续跳跃。"],challengeType:0,fields:{slug:"/responsive-web-design/applied-visual-design/animate-elements-continually-using-an-infinite-animation-count",blockName:"Applied Visual Design",tests:[{text:"<code>animation-iteration-count</code>属性值应该为 infinite。",testString:"assert($('#ball').css('animation-iteration-count') == 'infinite', '<code>animation-iteration-count</code>属性值应该为 infinite。');"}]},required:[],files:{indexhtml:{key:"indexhtml",ext:"html",name:"index",contents:'<style>\n\n  #ball {\n    width: 100px;\n    height: 100px;\n    margin: 50px auto;\n    position: relative;\n    border-radius: 50%;\n    background: linear-gradient(\n      35deg,\n      #ccffff,\n      #ffcccc\n    );\n    animation-name: bounce;\n    animation-duration: 1s;\n    animation-iteration-count: 3;\n  }\n\n  @keyframes bounce{\n    0% {\n      top: 0px;\n    }\n    50% {\n      top: 249px;\n      width: 130px;\n      height: 70px;\n    }\n    100% {\n      top: 0px;\n    }\n  }\n</style>\n<div id="ball"></div>',head:"",tail:""},indexjs:null,indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/responsive-web-design/applied-visual-design/make-a-css-heartbeat-using-an-infinite-animation-count",id:"587d78a8367417b2b2512ae3"},slug:"/responsive-web-design/applied-visual-design/animate-elements-continually-using-an-infinite-animation-count"}}}});
//# sourceMappingURL=path---responsive-web-design-applied-visual-design-animate-elements-continually-using-an-infinite-animation-count-1c67cc72eb41aa2aa8c8.js.map