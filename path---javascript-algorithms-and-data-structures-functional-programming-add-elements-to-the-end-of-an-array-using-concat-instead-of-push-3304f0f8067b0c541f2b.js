webpackJsonp([0xdfbd17871c2a],{3901:function(e,t){e.exports={data:{challengeNode:{title:"Add Elements to the End of an Array Using concat Instead of push",description:["函数式编程就是创建和使用 non-mutating 函数。","最后一个挑战介绍了<code>concat</code>方法，这是一种在不改变原始数组的前提下，将数组组合成新数组的方法。将<code>concat</code>方法与<code>push</code>方法做比较，<code>Push</code>将元素添加到调用它的数组的末尾，这样会改变该数组。举个例子：","<blockquote>var arr = [1, 2, 3];<br>arr.push([4, 5, 6]);<br>// arr 变成了 [1, 2, 3, [4, 5, 6]]<br>// 不是函数式编程</blockquote>","<code>Concat</code>方法可以将新项目添加到数组末尾，而不产生任何变更副作用。","<hr>","修改<code>nonMutatingPush</code>函数，用<code>concat</code>替代<code>push</code>将<code>newItem</code>添加到<code>original</code>末尾，该函数应返回一个数组。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/functional-programming/add-elements-to-the-end-of-an-array-using-concat-instead-of-push",blockName:"Functional Programming",tests:[{text:"应该使用<code>concat</code>方法。",testString:"assert(code.match(/\\.concat/g), '应该使用<code>concat</code>方法。');"},{text:"不能使用<code>push</code>方法。",testString:"assert(!code.match(/\\.push/g), '不能使用<code>push</code>方法。');"},{text:"不能改变<code>first</code>数组。",testString:"assert(JSON.stringify(first) === JSON.stringify([1, 2, 3]), '不能改变<code>first</code>数组。');"},{text:"不能改变<code>second</code>数组。",testString:"assert(JSON.stringify(second) === JSON.stringify([4, 5]), '不能改变<code>second</code>数组。');"},{text:"<code>nonMutatingPush([1, 2, 3], [4, 5])</code>应返回<code>[1, 2, 3, 4, 5]</code>。",testString:"assert(JSON.stringify(nonMutatingPush([1, 2, 3], [4, 5])) === JSON.stringify([1, 2, 3, 4, 5]), '<code>nonMutatingPush([1, 2, 3], [4, 5])</code>应返回<code>[1, 2, 3, 4, 5]</code>。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function nonMutatingPush(original, newItem) {\n  // 请在本行以下添加你的代码\n  return original.push(newItem);\n  \n  // 请在本行以上添加你的代码\n}\nvar first = [1, 2, 3];\nvar second = [4, 5];\nnonMutatingPush(first, second);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/functional-programming/use-the-reduce-method-to-analyze-data",id:"587d7da9367417b2b2512b67"},slug:"/javascript-algorithms-and-data-structures/functional-programming/add-elements-to-the-end-of-an-array-using-concat-instead-of-push"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-functional-programming-add-elements-to-the-end-of-an-array-using-concat-instead-of-push-3304f0f8067b0c541f2b.js.map