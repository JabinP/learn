{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-comparison-with-the-greater-than-or-equal-to-operator-bd5d1547bb5c38b7a682.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-comparison-with-the-greater-than-or-equal-to-operator.json"],"names":["webpackJsonp","3770","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,wDAAAC,aAAA,kIAAiH,2OAAAC,cAAA,EAAAC,QAAuWC,KAAA,oHAAAC,UAAA,mBAAAC,QAAoKC,KAAA,wDAAAC,WAAA,iHAAiMD,KAAA,wDAAAC,WAAA,iHAAiMD,KAAA,uDAAAC,WAAA,+GAA8LD,KAAA,uDAAAC,WAAA,+GAA8LD,KAAA,uDAAAC,WAAA,+GAA8LD,KAAA,wDAAAC,WAAA,iHAAiMD,KAAA,uDAAAC,WAAA,+GAA8LD,KAAA,iCAAuBC,WAAA,0GAAuIC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,uOAAgSC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,qGAAAC,GAAA,4BAAsMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-comparison-with-the-greater-than-or-equal-to-operator-bd5d1547bb5c38b7a682.js","sourcesContent":["webpackJsonp([247483441698049],{\n\n/***/ 3770:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Comparison with the Greater Than Or Equal To Operator\",\"description\":[\"使用<code>大于等于</code>运算符（<code>&gt;=</code>）来比较两个数字的大小。如果大于等于运算符左边的数字比右边的数字大或者相等，它会返回<code>true</code>。否则，它会返回<code>false</code>。\",\"与相等运算符相似，<code>大于等于</code>运算符在比较的时候会转换值的数据类型。\",\"<strong>例如</strong>\",\"<blockquote> 6  >=  6  // true<br> 7  >= '3' // true<br> 2  >=  3  // false<br>'7' >=  9  // false</blockquote>\",\"<hr>\",\"添加<code>大于等于</code>运算符到指定行，使得函数的返回语句有意义。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-greater-than-or-equal-to-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>testGreaterOrEqual(0)</code>应该返回 \\\"Less than 10\\\"\",\"testString\":\"assert(testGreaterOrEqual(0) === \\\"Less than 10\\\", '<code>testGreaterOrEqual(0)</code>应该返回 \\\"Less than 10\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(9)</code>应该返回 \\\"Less than 10\\\"\",\"testString\":\"assert(testGreaterOrEqual(9) === \\\"Less than 10\\\", '<code>testGreaterOrEqual(9)</code>应该返回 \\\"Less than 10\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(10)</code>应该返回 \\\"10 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(10) === \\\"10 or Over\\\", '<code>testGreaterOrEqual(10)</code>应该返回 \\\"10 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(11)</code>应该返回 \\\"10 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(11) === \\\"10 or Over\\\", '<code>testGreaterOrEqual(11)</code>应该返回 \\\"10 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(19)</code>应该返回 \\\"10 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(19) === \\\"10 or Over\\\", '<code>testGreaterOrEqual(19)</code>应该返回 \\\"10 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(100)</code>应该返回 \\\"20 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(100) === \\\"20 or Over\\\", '<code>testGreaterOrEqual(100)</code>应该返回 \\\"20 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(21)</code>应该返回 \\\"20 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(21) === \\\"20 or Over\\\", '<code>testGreaterOrEqual(21)</code>应该返回 \\\"20 or Over\\\"');\"},{\"text\":\"你应该使用<code>&gt;=</code>运算符至少两次\",\"testString\":\"assert(code.match(/val\\\\s*>=\\\\s*('|\\\")*\\\\d+('|\\\")*/g).length > 1, '你应该使用<code>&gt;=</code>运算符至少两次');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function testGreaterOrEqual(val) {\\n  if (val) {  // 请修改这一行\\n    return \\\"20 or Over\\\";\\n  }\\n  \\n  if (val) {  // 请修改这一行\\n    return \\\"10 or Over\\\";\\n  }\\n\\n  return \\\"Less than 10\\\";\\n}\\n\\n// 你可以修改这一行来测试你的代码\\ntestGreaterOrEqual(10);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-less-than-operator\",\"id\":\"56533eb9ac21ba0edf2244d5\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-greater-than-or-equal-to-operator\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-comparison-with-the-greater-than-or-equal-to-operator-bd5d1547bb5c38b7a682.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Comparison with the Greater Than Or Equal To Operator\",\"description\":[\"使用<code>大于等于</code>运算符（<code>&gt;=</code>）来比较两个数字的大小。如果大于等于运算符左边的数字比右边的数字大或者相等，它会返回<code>true</code>。否则，它会返回<code>false</code>。\",\"与相等运算符相似，<code>大于等于</code>运算符在比较的时候会转换值的数据类型。\",\"<strong>例如</strong>\",\"<blockquote> 6  >=  6  // true<br> 7  >= '3' // true<br> 2  >=  3  // false<br>'7' >=  9  // false</blockquote>\",\"<hr>\",\"添加<code>大于等于</code>运算符到指定行，使得函数的返回语句有意义。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-greater-than-or-equal-to-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"<code>testGreaterOrEqual(0)</code>应该返回 \\\"Less than 10\\\"\",\"testString\":\"assert(testGreaterOrEqual(0) === \\\"Less than 10\\\", '<code>testGreaterOrEqual(0)</code>应该返回 \\\"Less than 10\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(9)</code>应该返回 \\\"Less than 10\\\"\",\"testString\":\"assert(testGreaterOrEqual(9) === \\\"Less than 10\\\", '<code>testGreaterOrEqual(9)</code>应该返回 \\\"Less than 10\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(10)</code>应该返回 \\\"10 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(10) === \\\"10 or Over\\\", '<code>testGreaterOrEqual(10)</code>应该返回 \\\"10 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(11)</code>应该返回 \\\"10 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(11) === \\\"10 or Over\\\", '<code>testGreaterOrEqual(11)</code>应该返回 \\\"10 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(19)</code>应该返回 \\\"10 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(19) === \\\"10 or Over\\\", '<code>testGreaterOrEqual(19)</code>应该返回 \\\"10 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(100)</code>应该返回 \\\"20 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(100) === \\\"20 or Over\\\", '<code>testGreaterOrEqual(100)</code>应该返回 \\\"20 or Over\\\"');\"},{\"text\":\"<code>testGreaterOrEqual(21)</code>应该返回 \\\"20 or Over\\\"\",\"testString\":\"assert(testGreaterOrEqual(21) === \\\"20 or Over\\\", '<code>testGreaterOrEqual(21)</code>应该返回 \\\"20 or Over\\\"');\"},{\"text\":\"你应该使用<code>&gt;=</code>运算符至少两次\",\"testString\":\"assert(code.match(/val\\\\s*>=\\\\s*('|\\\")*\\\\d+('|\\\")*/g).length > 1, '你应该使用<code>&gt;=</code>运算符至少两次');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function testGreaterOrEqual(val) {\\n  if (val) {  // 请修改这一行\\n    return \\\"20 or Over\\\";\\n  }\\n  \\n  if (val) {  // 请修改这一行\\n    return \\\"10 or Over\\\";\\n  }\\n\\n  return \\\"Less than 10\\\";\\n}\\n\\n// 你可以修改这一行来测试你的代码\\ntestGreaterOrEqual(10);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-less-than-operator\",\"id\":\"56533eb9ac21ba0edf2244d5\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-greater-than-or-equal-to-operator\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-comparison-with-the-greater-than-or-equal-to-operator.json\n// module id = 3770\n// module chunks = 247483441698049"],"sourceRoot":""}