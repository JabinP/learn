{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-functional-programming-apply-functional-programming-to-convert-strings-to-url-slugs-43bc72174767bcf0c805.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-functional-programming-apply-functional-programming-to-convert-strings-to-url-slugs.json"],"names":["webpackJsonp","3902","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+DAAAC,aAAA,ykBAAAC,cAAA,EAAAC,QAA+rBC,KAAA,iIAAAC,UAAA,yBAAAC,QAAuLC,KAAA,mCAAAC,WAAA,sFAA6ID,KAAA,mCAAAC,WAAA,4EAAmID,KAAA,8EAAAC,WAAA,iJAA6PD,KAAA,sFAA0CC,WAAA,2JAAqOD,KAAA,gJAAAC,WAAA,qRAAmcD,KAAA,wEAAAC,WAAA,sIAA2OC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,gMAA4NC,KAAA,GAAAC,KAAA,IAAiDC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,kJAAAC,GAAA,4BAAmPrB,KAAA","file":"path---javascript-algorithms-and-data-structures-functional-programming-apply-functional-programming-to-convert-strings-to-url-slugs-43bc72174767bcf0c805.js","sourcesContent":["webpackJsonp([230311392189734],{\n\n/***/ 3902:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Apply Functional Programming to Convert Strings to URL Slugs\",\"description\":[\"最后几个挑战中涵盖了许多符合函数式编程原则并在处理数组和字符串中非常有用的方法。我们还学习了强大的、可以将问题简化为更简单形式的<code>reduce</code>方法，从计算平均值到排序，任何数组操作都可以用它来实现。回想一下，<code>map</code>和<code>filter</code>方法都是<code>reduce</code>的特殊实现。\",\"让我们把学到的知识结合起来解决一个实际问题。\",\"许多内容管理站点（CMS）为了让添加书签更简单，会将帖子的标题添加到 URL 上。举个例子，如果你写了一篇标题为 \\\"Stop Using Reduce\\\" 的帖子，URL很可能会包含标题字符串的某种形式 (如：\\\".../stop-using-reduce\\\")，你可能已经在 freeCodeCamp 网站上注意到了这一点。\",\"<hr>\",\"填写<code>urlSlug</code>函数，使其转换字符串<code>title</code>带有连字符号的 URL 版本。您可以使用本节中介绍的任何方法，但不要用<code>replace</code>方法。以下是本次挑战的要求：\",\"输入包含空格和标题大小写单词的字符串\",\"输出字符串，单词之间的空格用连字符(<code>-</code>)替换\",\"输出应该是小写字母\",\"输出不应有任何空格\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"<code>globalTitle</code>变量应保持不变。\",\"testString\":\"assert(globalTitle === \\\"Winter Is Coming\\\", '<code>globalTitle</code>变量应保持不变。');\"},{\"text\":\"在此挑战中不能使用<code>replace</code>方法。\",\"testString\":\"assert(!code.match(/\\\\.replace/g), '在此挑战中不能使用<code>replace</code>方法。');\"},{\"text\":\"<code>urlSlug(\\\"Winter Is Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\"Winter Is Coming\\\") === \\\"winter-is-coming\\\", '<code>urlSlug(\\\"Winter Is Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。');\"},{\"text\":\"<code>urlSlug(\\\" Winter Is  &nbsp;Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\" Winter Is  Coming\\\") === \\\"winter-is-coming\\\", '<code>urlSlug(\\\" Winter Is  &nbsp;Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。');\"},{\"text\":\"<code>urlSlug(\\\"A Mind Needs Books Like A Sword Needs A Whetstone\\\")</code>应返回<code>\\\"a-mind-needs-books-like-a-sword-needs-a-whetstone\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\"A Mind Needs Books Like A Sword Needs A Whetstone\\\") === \\\"a-mind-needs-books-like-a-sword-needs-a-whetstone\\\", '<code>urlSlug(\\\"A Mind Needs Books Like A Sword Needs A Whetstone\\\")</code>应返回<code>\\\"a-mind-needs-books-like-a-sword-needs-a-whetstone\\\"</code>。');\"},{\"text\":\"<code>urlSlug(\\\"Hold The Door\\\")</code>应返回<code>\\\"hold-the-door\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\"Hold The Door\\\") === \\\"hold-the-door\\\", '<code>urlSlug(\\\"Hold The Door\\\")</code>应返回<code>\\\"hold-the-door\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 全局变量\\nvar globalTitle = \\\"Winter Is Coming\\\";\\n\\n// 请在本行以下添加你的代码\\nfunction urlSlug(title) {\\n  \\n  \\n}\\n// 请在本行以上添加你的代码\\n\\nvar winterComing = urlSlug(globalTitle); // 应为 \\\"winter-is-coming\\\"\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-every-method-to-check-that-every-element-in-an-array-meets-a-criteria\",\"id\":\"587d7dab367417b2b2512b6d\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-functional-programming-apply-functional-programming-to-convert-strings-to-url-slugs-43bc72174767bcf0c805.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Apply Functional Programming to Convert Strings to URL Slugs\",\"description\":[\"最后几个挑战中涵盖了许多符合函数式编程原则并在处理数组和字符串中非常有用的方法。我们还学习了强大的、可以将问题简化为更简单形式的<code>reduce</code>方法，从计算平均值到排序，任何数组操作都可以用它来实现。回想一下，<code>map</code>和<code>filter</code>方法都是<code>reduce</code>的特殊实现。\",\"让我们把学到的知识结合起来解决一个实际问题。\",\"许多内容管理站点（CMS）为了让添加书签更简单，会将帖子的标题添加到 URL 上。举个例子，如果你写了一篇标题为 \\\"Stop Using Reduce\\\" 的帖子，URL很可能会包含标题字符串的某种形式 (如：\\\".../stop-using-reduce\\\")，你可能已经在 freeCodeCamp 网站上注意到了这一点。\",\"<hr>\",\"填写<code>urlSlug</code>函数，使其转换字符串<code>title</code>带有连字符号的 URL 版本。您可以使用本节中介绍的任何方法，但不要用<code>replace</code>方法。以下是本次挑战的要求：\",\"输入包含空格和标题大小写单词的字符串\",\"输出字符串，单词之间的空格用连字符(<code>-</code>)替换\",\"输出应该是小写字母\",\"输出不应有任何空格\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"<code>globalTitle</code>变量应保持不变。\",\"testString\":\"assert(globalTitle === \\\"Winter Is Coming\\\", '<code>globalTitle</code>变量应保持不变。');\"},{\"text\":\"在此挑战中不能使用<code>replace</code>方法。\",\"testString\":\"assert(!code.match(/\\\\.replace/g), '在此挑战中不能使用<code>replace</code>方法。');\"},{\"text\":\"<code>urlSlug(\\\"Winter Is Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\"Winter Is Coming\\\") === \\\"winter-is-coming\\\", '<code>urlSlug(\\\"Winter Is Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。');\"},{\"text\":\"<code>urlSlug(\\\" Winter Is  &nbsp;Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\" Winter Is  Coming\\\") === \\\"winter-is-coming\\\", '<code>urlSlug(\\\" Winter Is  &nbsp;Coming\\\")</code>应返回<code>\\\"winter-is-coming\\\"</code>。');\"},{\"text\":\"<code>urlSlug(\\\"A Mind Needs Books Like A Sword Needs A Whetstone\\\")</code>应返回<code>\\\"a-mind-needs-books-like-a-sword-needs-a-whetstone\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\"A Mind Needs Books Like A Sword Needs A Whetstone\\\") === \\\"a-mind-needs-books-like-a-sword-needs-a-whetstone\\\", '<code>urlSlug(\\\"A Mind Needs Books Like A Sword Needs A Whetstone\\\")</code>应返回<code>\\\"a-mind-needs-books-like-a-sword-needs-a-whetstone\\\"</code>。');\"},{\"text\":\"<code>urlSlug(\\\"Hold The Door\\\")</code>应返回<code>\\\"hold-the-door\\\"</code>。\",\"testString\":\"assert(urlSlug(\\\"Hold The Door\\\") === \\\"hold-the-door\\\", '<code>urlSlug(\\\"Hold The Door\\\")</code>应返回<code>\\\"hold-the-door\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 全局变量\\nvar globalTitle = \\\"Winter Is Coming\\\";\\n\\n// 请在本行以下添加你的代码\\nfunction urlSlug(title) {\\n  \\n  \\n}\\n// 请在本行以上添加你的代码\\n\\nvar winterComing = urlSlug(globalTitle); // 应为 \\\"winter-is-coming\\\"\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/use-the-every-method-to-check-that-every-element-in-an-array-meets-a-criteria\",\"id\":\"587d7dab367417b2b2512b6d\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-functional-programming-apply-functional-programming-to-convert-strings-to-url-slugs.json\n// module id = 3902\n// module chunks = 230311392189734"],"sourceRoot":""}