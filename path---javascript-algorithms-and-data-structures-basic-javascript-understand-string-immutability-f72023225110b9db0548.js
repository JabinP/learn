webpackJsonp([0xab078082d72e],{3842:function(e,t){e.exports={data:{challengeNode:{title:"Understand String Immutability",description:["在 JavaScript 中，<code>字符串</code>的值是 <dfn>不可变的</dfn>，这意味着一旦字符串被创建就不能被改变。","例如，下面的代码：",'<blockquote>var myStr = "Bob";<br>myStr[0] = "J";</blockquote>','是不会把变量<code>myStr</code>的值改变成 "Job" 的，因为变量<code>myStr</code>是不可变的。注意，这<em>并不</em>意味着<code>myStr</code>永远不能被改变，只是字符串字面量 <dfn>string literal</dfn> 的各个字符不能被改变。改变<code>myStr</code>中的唯一方法是重新给它赋一个值，例如：','<blockquote>var myStr = "Bob";<br>myStr = "Job";</blockquote>',"<hr>","把<code>myStr</code>的值改为<code>Hello World</code>。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/understand-string-immutability",blockName:"Basic JavaScript",tests:[{text:"message:<code>myStr</code>的值应该是<code>Hello World</code>",testString:"assert(myStr === \"Hello World\", 'message:<code>myStr</code>的值应该是<code>Hello World</code>');"},{text:"Do not change the code above the line",testString:"assert(/myStr = \"Jello World\"/.test(code), '不要修改注释上面的代码');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'// 初始化变量\nvar myStr = "Jello World";\n\n// 请把你的代码写在这条注释以下\n\nmyStr[0] = "H"; // Fix Me\n\n',head:"",tail:'(function(v){return "myStr = " + v;})(myStr);'},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/use-bracket-notation-to-find-the-nth-character-in-a-string",id:"56533eb9ac21ba0edf2244ba"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/understand-string-immutability"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-understand-string-immutability-f72023225110b9db0548.js.map