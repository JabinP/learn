{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-es-6-write-higher-order-arrow-functions-309441addca9cec6287a.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-es-6-write-higher-order-arrow-functions.json"],"names":["webpackJsonp","3899","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qCAAAC,aAAA,kSAA8U,iRAAAC,cAAA,EAAAC,QAA6TC,KAAA,oFAAAC,UAAA,MAAAC,QAAuHC,KAAA,6BAAAC,WAAA,gGAAiJD,KAAA,8DAAAC,WAAA,qJAAuOD,KAAA,uDAAAC,WAAA,mGAA8KD,KAAA,8DAAAC,WAAA,kKAAoPD,KAAA,gCAAAC,WAAA,wGAA4JD,KAAA,SAAAC,WAAA,sFAAmHD,KAAA,kEAAAC,WAAA,mJAAwOC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,4SAAiWC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,2FAAAC,GAAA,4BAA4LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-es-6-write-higher-order-arrow-functions-309441addca9cec6287a.js","sourcesContent":["webpackJsonp([17492640193214],{\n\n/***/ 3899:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Write Higher Order Arrow Functions\",\"description\":[\"我们已经见识到了箭头函数在处理数据时候的强大之处。\",\"箭头函数在类似<code>map()</code>，<code>filter()</code>，<code>reduce()</code>等需要其他函数作为参数来处理数据的高阶函数里会很好用。\",\"阅读以下代码：\",\"<blockquote>FBPosts.filter(function(post) {<br>&nbsp;&nbsp;return post.thumbnail !== null && post.shares > 100 && post.likes > 500;<br>})</blockquote>\",\"我们写下了<code>filter</code>函数，并尽量保证可读性。现在让我们用箭头函数来写同样的代码看看：\",\"<blockquote>FBPosts.filter((post) => post.thumbnail !== null && post.shares > 100 && post.likes > 500)</blockquote>\",\"这段代码完成了同样的任务，却变得更加简短易懂了。\",\"<hr>\",\"使用箭头函数的语法来计算<code>squaredIntegers</code>数组里正整数的平方（分数不是整数）。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/write-higher-order-arrow-functions\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"替换掉所有的<code>var</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/var/g), '替换掉所有的<code>var</code>关键字。');\"},{\"text\":\"<code>squaredIntegers</code>应该是一个常量 (使用<code>const</code>)。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/const\\\\s+squaredIntegers/g), '<code>squaredIntegers</code>应该是一个常量 (使用<code>const</code>)。');\"},{\"text\":\"<code>squaredIntegers</code>应该是一个<code>array</code>。\",\"testString\":\"assert(Array.isArray(squaredIntegers), '<code>squaredIntegers</code>应该是一个<code>array</code>');\"},{\"text\":\"<code>squaredIntegers</code> 应该是<code>[16, 1764, 36]</code>\",\"testString\":\"assert(squaredIntegers[0] === 16 && squaredIntegers[1] === 1764 && squaredIntegers[2] === 36, '<code>squaredIntegers</code> 应该是<code>[16, 1764, 36]</code>');\"},{\"text\":\"不要使用<code>function</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/function/g), '不要使用<code>function</code>关键字。');\"},{\"text\":\"不要使用循环\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/(for)|(while)/g), '不要使用循环');\"},{\"text\":\"请使用<code>map</code>,<code>filter</code>, 或者<code>reduce</code>。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/map|filter|reduce/g), '请使用<code>map</code>,<code>filter</code>, 或者<code>reduce</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"const realNumberArray = [4, 5.6, -9.8, 3.14, 42, 6, 8.34];\\nconst squareList = (arr) => {\\n  \\\"use strict\\\";\\n  // 在这行以下修改代码\\n  const squaredIntegers = arr;\\n  // 在这行以上修改代码\\n  return squaredIntegers;\\n};\\n// 测试你的代码\\nconst squaredIntegers = squareList(realNumberArray);\\nconsole.log(squaredIntegers);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/set-default-parameters-for-your-functions\",\"id\":\"587d7b88367417b2b2512b45\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/write-higher-order-arrow-functions\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-es-6-write-higher-order-arrow-functions-309441addca9cec6287a.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Write Higher Order Arrow Functions\",\"description\":[\"我们已经见识到了箭头函数在处理数据时候的强大之处。\",\"箭头函数在类似<code>map()</code>，<code>filter()</code>，<code>reduce()</code>等需要其他函数作为参数来处理数据的高阶函数里会很好用。\",\"阅读以下代码：\",\"<blockquote>FBPosts.filter(function(post) {<br>&nbsp;&nbsp;return post.thumbnail !== null && post.shares > 100 && post.likes > 500;<br>})</blockquote>\",\"我们写下了<code>filter</code>函数，并尽量保证可读性。现在让我们用箭头函数来写同样的代码看看：\",\"<blockquote>FBPosts.filter((post) => post.thumbnail !== null && post.shares > 100 && post.likes > 500)</blockquote>\",\"这段代码完成了同样的任务，却变得更加简短易懂了。\",\"<hr>\",\"使用箭头函数的语法来计算<code>squaredIntegers</code>数组里正整数的平方（分数不是整数）。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/write-higher-order-arrow-functions\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"替换掉所有的<code>var</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/var/g), '替换掉所有的<code>var</code>关键字。');\"},{\"text\":\"<code>squaredIntegers</code>应该是一个常量 (使用<code>const</code>)。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/const\\\\s+squaredIntegers/g), '<code>squaredIntegers</code>应该是一个常量 (使用<code>const</code>)。');\"},{\"text\":\"<code>squaredIntegers</code>应该是一个<code>array</code>。\",\"testString\":\"assert(Array.isArray(squaredIntegers), '<code>squaredIntegers</code>应该是一个<code>array</code>');\"},{\"text\":\"<code>squaredIntegers</code> 应该是<code>[16, 1764, 36]</code>\",\"testString\":\"assert(squaredIntegers[0] === 16 && squaredIntegers[1] === 1764 && squaredIntegers[2] === 36, '<code>squaredIntegers</code> 应该是<code>[16, 1764, 36]</code>');\"},{\"text\":\"不要使用<code>function</code>关键字。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/function/g), '不要使用<code>function</code>关键字。');\"},{\"text\":\"不要使用循环\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/(for)|(while)/g), '不要使用循环');\"},{\"text\":\"请使用<code>map</code>,<code>filter</code>, 或者<code>reduce</code>。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/map|filter|reduce/g), '请使用<code>map</code>,<code>filter</code>, 或者<code>reduce</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"const realNumberArray = [4, 5.6, -9.8, 3.14, 42, 6, 8.34];\\nconst squareList = (arr) => {\\n  \\\"use strict\\\";\\n  // 在这行以下修改代码\\n  const squaredIntegers = arr;\\n  // 在这行以上修改代码\\n  return squaredIntegers;\\n};\\n// 测试你的代码\\nconst squaredIntegers = squareList(realNumberArray);\\nconsole.log(squaredIntegers);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/set-default-parameters-for-your-functions\",\"id\":\"587d7b88367417b2b2512b45\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/write-higher-order-arrow-functions\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-es-6-write-higher-order-arrow-functions.json\n// module id = 3899\n// module chunks = 17492640193214"],"sourceRoot":""}