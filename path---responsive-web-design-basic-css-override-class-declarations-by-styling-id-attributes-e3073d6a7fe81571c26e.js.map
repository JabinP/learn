{"version":3,"sources":["webpack:///path---responsive-web-design-basic-css-override-class-declarations-by-styling-id-attributes-e3073d6a7fe81571c26e.js","webpack:///./.cache/json/responsive-web-design-basic-css-override-class-declarations-by-styling-id-attributes.json"],"names":["webpackJsonp","4108","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,uDAAAC,aAAA,0QAAiV,2NAAqN,0EAAAC,cAAA,EAAAC,QAAqHC,KAAA,wFAAAC,UAAA,YAAAC,QAAiIC,KAAA,qDAAAC,WAAA,mGAA8KD,KAAA,qDAAAC,WAAA,mGAA8KD,KAAA,oDAAAC,WAAA,yGAAqLD,KAAA,2BAAAC,WAAA,kEAAiHD,KAAA,wCAAAC,WAAA,wFAAoJD,KAAA,oDAAAC,WAAA,iGAAyKD,KAAA,8BAAAC,WAAA,2FAAgJC,YAAAC,OAAwBC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,kPAA4OC,KAAA,GAAAC,KAAA,IAAqFC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,kFAAAC,GAAA,4BAAmLrB,KAAA","file":"path---responsive-web-design-basic-css-override-class-declarations-by-styling-id-attributes-e3073d6a7fe81571c26e.js","sourcesContent":["webpackJsonp([223144022377612],{\n\n/***/ 4108:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Override Class Declarations by Styling ID Attributes\",\"description\":[\"我们刚刚证明了浏览器读取 CSS 是由上到下的。这就意味着，如果发生冲突，浏览器将会应用最后声明的样式。\",\"不过我们还没结束，还有其他方法来覆盖 CSS 样式。你还记得 id 属性吗？\",\"通过给<code>h1</code>元素添加 id 属性，来覆盖 class 属性定义的同名样式。\",\"<hr>\",\"给<code>h1</code>元素添加 id 属性，属性值为<code>orange-text</code>。设置方式如下：\",\"<code>&#60;h1 id=\\\"orange-text\\\"&#62;</code>\",\"<code>h1</code>元素继续保留<code>blue-text</code>和<code>pink-text</code>class。\",\"在<code>style</code>元素中创建名为<code>orange-text</code>的 id 选择器。例子如下：\",\"<blockquote>#orange-text {<br>&nbsp;&nbsp;color: orange;<br>}</blockquote>\",\"注意：无论在<code>pink-text</code>class 的上面或者下面声明，id 选择器的优先级总是会高于 class 选择器。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes\",\"blockName\":\"Basic CSS\",\"tests\":[{\"text\":\"<code>h1</code>元素应该包含<code>pink-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"pink-text\\\"), '<code>h1</code>元素应该包含<code>pink-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>blue-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"blue-text\\\"), '<code>h1</code>元素应该包含<code>blue-text</code> class。');\"},{\"text\":\"<code>h1</code>的 id 属性值为<code>orange-text</code>。\",\"testString\":\"assert($(\\\"h1\\\").attr(\\\"id\\\") === \\\"orange-text\\\", '<code>h1</code>的 id 属性值为<code>orange-text</code>。');\"},{\"text\":\"应该只有一个<code>h1</code>元素。\",\"testString\":\"assert(($(\\\"h1\\\").length === 1), '应该只有一个<code>h1</code>元素。');\"},{\"text\":\"创建名为<code>orange-text</code>的 id 选择器。\",\"testString\":\"assert(code.match(/#orange-text\\\\s*{/gi), '创建名为<code>orange-text</code>的 id 选择器。');\"},{\"text\":\"不要在<code>h1</code>元素里面使用<code>style（行内样式）</code>。\",\"testString\":\"assert(!code.match(/<h1.*style.*>/gi), '不要在<code>h1</code>元素里面使用<code>style（行内样式）</code>。');\"},{\"text\":\"<code>h1</code>元素的字体颜色应为橘色。\",\"testString\":\"assert($(\\\"h1\\\").css(\\\"color\\\") === \\\"rgb(255, 165, 0)\\\", '<code>h1</code>元素的字体颜色应为橘色。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  body {\\n    background-color: black;\\n    font-family: monospace;\\n    color: green;\\n  }\\n  .pink-text {\\n    color: pink;\\n  }\\n  .blue-text {\\n    color: blue;\\n  }\\n</style>\\n<h1 class=\\\"pink-text blue-text\\\">Hello World!</h1>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/basic-css/override-class-declarations-with-inline-styles\",\"id\":\"bad87fee1348bd8aedf06756\"},\"slug\":\"/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-web-design-basic-css-override-class-declarations-by-styling-id-attributes-e3073d6a7fe81571c26e.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Override Class Declarations by Styling ID Attributes\",\"description\":[\"我们刚刚证明了浏览器读取 CSS 是由上到下的。这就意味着，如果发生冲突，浏览器将会应用最后声明的样式。\",\"不过我们还没结束，还有其他方法来覆盖 CSS 样式。你还记得 id 属性吗？\",\"通过给<code>h1</code>元素添加 id 属性，来覆盖 class 属性定义的同名样式。\",\"<hr>\",\"给<code>h1</code>元素添加 id 属性，属性值为<code>orange-text</code>。设置方式如下：\",\"<code>&#60;h1 id=\\\"orange-text\\\"&#62;</code>\",\"<code>h1</code>元素继续保留<code>blue-text</code>和<code>pink-text</code>class。\",\"在<code>style</code>元素中创建名为<code>orange-text</code>的 id 选择器。例子如下：\",\"<blockquote>#orange-text {<br>&nbsp;&nbsp;color: orange;<br>}</blockquote>\",\"注意：无论在<code>pink-text</code>class 的上面或者下面声明，id 选择器的优先级总是会高于 class 选择器。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes\",\"blockName\":\"Basic CSS\",\"tests\":[{\"text\":\"<code>h1</code>元素应该包含<code>pink-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"pink-text\\\"), '<code>h1</code>元素应该包含<code>pink-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>blue-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"blue-text\\\"), '<code>h1</code>元素应该包含<code>blue-text</code> class。');\"},{\"text\":\"<code>h1</code>的 id 属性值为<code>orange-text</code>。\",\"testString\":\"assert($(\\\"h1\\\").attr(\\\"id\\\") === \\\"orange-text\\\", '<code>h1</code>的 id 属性值为<code>orange-text</code>。');\"},{\"text\":\"应该只有一个<code>h1</code>元素。\",\"testString\":\"assert(($(\\\"h1\\\").length === 1), '应该只有一个<code>h1</code>元素。');\"},{\"text\":\"创建名为<code>orange-text</code>的 id 选择器。\",\"testString\":\"assert(code.match(/#orange-text\\\\s*{/gi), '创建名为<code>orange-text</code>的 id 选择器。');\"},{\"text\":\"不要在<code>h1</code>元素里面使用<code>style（行内样式）</code>。\",\"testString\":\"assert(!code.match(/<h1.*style.*>/gi), '不要在<code>h1</code>元素里面使用<code>style（行内样式）</code>。');\"},{\"text\":\"<code>h1</code>元素的字体颜色应为橘色。\",\"testString\":\"assert($(\\\"h1\\\").css(\\\"color\\\") === \\\"rgb(255, 165, 0)\\\", '<code>h1</code>元素的字体颜色应为橘色。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  body {\\n    background-color: black;\\n    font-family: monospace;\\n    color: green;\\n  }\\n  .pink-text {\\n    color: pink;\\n  }\\n  .blue-text {\\n    color: blue;\\n  }\\n</style>\\n<h1 class=\\\"pink-text blue-text\\\">Hello World!</h1>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/basic-css/override-class-declarations-with-inline-styles\",\"id\":\"bad87fee1348bd8aedf06756\"},\"slug\":\"/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-web-design-basic-css-override-class-declarations-by-styling-id-attributes.json\n// module id = 4108\n// module chunks = 223144022377612"],"sourceRoot":""}