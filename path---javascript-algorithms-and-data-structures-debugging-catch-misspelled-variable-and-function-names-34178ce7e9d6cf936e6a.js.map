{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-debugging-catch-misspelled-variable-and-function-names-34178ce7e9d6cf936e6a.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-debugging-catch-misspelled-variable-and-function-names.json"],"names":["webpackJsonp","3863","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+CAAAC,aAAA,8PAAAC,cAAA,EAAAC,QAAgWC,KAAA,oGAAAC,UAAA,YAAAC,QAA6IC,KAAA,+EAAAC,WAAA,uHAA4ND,KAAA,kBAAAC,WAAA,4DAAkGD,KAAA,0CAAAC,WAAA,+FAA6JD,KAAA,kBAAAC,WAAA,yDAA+FD,KAAA,uCAAAC,WAAA,0FAAoJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,yJAA4MC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6GAAAC,GAAA,4BAA8MrB,KAAA","file":"path---javascript-algorithms-and-data-structures-debugging-catch-misspelled-variable-and-function-names-34178ce7e9d6cf936e6a.js","sourcesContent":["webpackJsonp([18275771813202],{\n\n/***/ 3863:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Catch Misspelled Variable and Function Names\",\"description\":[\"<code>console.log()</code>和<code>typeof</code>方法是检查中间值和程序输出类型的两种主要方法。 现在是时候了解一下 bug 出现的常见的情形。一个语法级别的问题是打字太快带来的低级拼写错误。\",\"变量或函数名的错写、漏写或大小写弄混都会让浏览器尝试查找并不存在的东西，并报出“引用错误”。JavaScript 变量和函数名称区分大小写。\",\"<hr>\",\"修复代码中的两个拼写错误，以便<code>netWorkingCapital</code>计算有效。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-misspelled-variable-and-function-names\",\"blockName\":\"Debugging\",\"tests\":[{\"text\":\"检查计算 netWorkingCapital 值时使用的两个变量的拼写是否正确，控制台应该输出 \\\"Net working capital is: 2\\\"。\",\"testString\":\"assert(netWorkingCapital === 2, '检查计算 netWorkingCapital 值时使用的两个变量的拼写是否正确，控制台应该输出 \\\"Net working capital is: 2\\\"。');\"},{\"text\":\"代码中不应存在拼写错误的变量。\",\"testString\":\"assert(!code.match(/recievables/g), '代码中不应存在拼写错误的变量。');\"},{\"text\":\"应在代码中声明并正确使用<code>receivables</code>变量。\",\"testString\":\"assert(code.match(/receivables/g).length == 2, '应在代码中声明并正确使用<code>receivables</code>变量。');\"},{\"text\":\"代码中不应存在拼写错误的变量。\",\"testString\":\"assert(!code.match(/payable;/g), '代码中不应存在拼写错误的变量。');\"},{\"text\":\"应在代码中声明并正确使用<code>payables</code>变量。\",\"testString\":\"assert(code.match(/payables/g).length == 2, '应在代码中声明并正确使用<code>payables</code>变量。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let receivables = 10;\\nlet payables = 8;\\nlet netWorkingCapital = recievables - payable;\\nconsole.log(`Net working capital is: ${netWorkingCapital}`);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/debugging/catch-unclosed-parentheses-brackets-braces-and-quotes\",\"id\":\"587d7b84367417b2b2512b35\"},\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-misspelled-variable-and-function-names\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-debugging-catch-misspelled-variable-and-function-names-34178ce7e9d6cf936e6a.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Catch Misspelled Variable and Function Names\",\"description\":[\"<code>console.log()</code>和<code>typeof</code>方法是检查中间值和程序输出类型的两种主要方法。 现在是时候了解一下 bug 出现的常见的情形。一个语法级别的问题是打字太快带来的低级拼写错误。\",\"变量或函数名的错写、漏写或大小写弄混都会让浏览器尝试查找并不存在的东西，并报出“引用错误”。JavaScript 变量和函数名称区分大小写。\",\"<hr>\",\"修复代码中的两个拼写错误，以便<code>netWorkingCapital</code>计算有效。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-misspelled-variable-and-function-names\",\"blockName\":\"Debugging\",\"tests\":[{\"text\":\"检查计算 netWorkingCapital 值时使用的两个变量的拼写是否正确，控制台应该输出 \\\"Net working capital is: 2\\\"。\",\"testString\":\"assert(netWorkingCapital === 2, '检查计算 netWorkingCapital 值时使用的两个变量的拼写是否正确，控制台应该输出 \\\"Net working capital is: 2\\\"。');\"},{\"text\":\"代码中不应存在拼写错误的变量。\",\"testString\":\"assert(!code.match(/recievables/g), '代码中不应存在拼写错误的变量。');\"},{\"text\":\"应在代码中声明并正确使用<code>receivables</code>变量。\",\"testString\":\"assert(code.match(/receivables/g).length == 2, '应在代码中声明并正确使用<code>receivables</code>变量。');\"},{\"text\":\"代码中不应存在拼写错误的变量。\",\"testString\":\"assert(!code.match(/payable;/g), '代码中不应存在拼写错误的变量。');\"},{\"text\":\"应在代码中声明并正确使用<code>payables</code>变量。\",\"testString\":\"assert(code.match(/payables/g).length == 2, '应在代码中声明并正确使用<code>payables</code>变量。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let receivables = 10;\\nlet payables = 8;\\nlet netWorkingCapital = recievables - payable;\\nconsole.log(`Net working capital is: ${netWorkingCapital}`);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/debugging/catch-unclosed-parentheses-brackets-braces-and-quotes\",\"id\":\"587d7b84367417b2b2512b35\"},\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-misspelled-variable-and-function-names\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-debugging-catch-misspelled-variable-and-function-names.json\n// module id = 3863\n// module chunks = 18275771813202"],"sourceRoot":""}