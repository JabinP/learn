webpackJsonp([0x6092872acc13],{2859:function(e,t){e.exports={data:{challengeNode:{title:"Work with Nodes in a Linked List",description:["计算机科学中，另一个比较常见的数据结构是链表。链表是一系列数据元素的线性集合，每个元素称为节点（nodes）；且每个节点都有指向下一个节点的指针。因此，链表中的每个节点由元素本身和指向下一个节点的引用组成。","这种数据结构可以类比老鹰捉小鸡的游戏，游戏中所有扮演鸡仔的人需要躲在母鸡身后，手要搭在前一个人的肩上。你可以看到你前面的人是谁，但是看不到再前面的人。一个节点就如同一个扮演鸡仔中的一个人：这个人知道自己是谁，也只能看到前面的一个人，但他无法看到其他人。","<hr>","在代码编辑器中，我们已经创建了<code>Kitten</code>和<code>Puppy</code>两个节点，而且我们已经将<code>Kitten</code>节点和<code>Puppy</code>节点连接起来。","请创建<code>Cat</code>和<code>Dog</code>两个节点，并把他们添加到<code>Kitten</code>和<code>Puppy</code>之后。"],challengeType:1,fields:{slug:"/coding-interview-prep/data-structures/work-with-nodes-in-a-linked-list",blockName:"Data Structures",tests:[{text:"<code>Puppy</code>节点应该有指向<code>Cat</code>节点的引用。",testString:"assert(Puppy.next.element === \"Cat\", '<code>Puppy</code>节点应该有指向<code>Cat</code>节点的引用。');"},{text:"<code>Cat</code>节点应该有指向<code>Dog</code>节点的引用。",testString:"assert(Cat.next.element === \"Dog\", '<code>Cat</code>节点应该有指向<code>Dog</code>节点的引用。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'var Node = function(element){\n    this.element = element; \n    this.next = null; \n};\nvar Kitten = new Node("Kitten");\nvar Puppy = new Node("Puppy");\n\nKitten.next = Puppy;\n// 请把你的代码写在这条注释以下\n\n// 你可以修改这行代码来进行测试\nconsole.log(Kitten.next);',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/data-structures/create-a-linked-list-class",id:"587d8251367417b2b2512c61"},slug:"/coding-interview-prep/data-structures/work-with-nodes-in-a-linked-list"}}}});
//# sourceMappingURL=path---coding-interview-prep-data-structures-work-with-nodes-in-a-linked-list-9ba5f8e1a9f48de02e40.js.map