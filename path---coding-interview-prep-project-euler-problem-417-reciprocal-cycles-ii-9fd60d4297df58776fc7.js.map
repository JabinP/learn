{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-417-reciprocal-cycles-ii-9fd60d4297df58776fc7.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-417-reciprocal-cycles-ii.json"],"names":["webpackJsonp","3214","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oCAAAC,aAAA,2vBAAAC,cAAA,EAAAC,QAAk1BC,KAAA,wEAAAC,UAAA,gBAAAC,QAAqHC,KAAA,yDAAAC,WAAA,gHAA4LC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yEAAAC,GAAA,4BAA0KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-417-reciprocal-cycles-ii-9fd60d4297df58776fc7.js","sourcesContent":["webpackJsonp([165960262997441],{\n\n/***/ 3214:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 417: Reciprocal cycles II\",\"description\":[\"A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:\",\"\",\"1/2= 0.5\",\"1/3= 0.(3)\",\"1/4= 0.25\",\"1/5= 0.2\",\"1/6= 0.1(6)\",\"1/7= 0.(142857)\",\"1/8= 0.125\",\"1/9= 0.(1)\",\"1/10= 0.1\",\"\",\"Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be seen that 1/7 has a 6-digit recurring cycle.\",\"\",\"Unit fractions whose denominator has no other prime factors than 2 and/or 5 are not considered to have a recurring cycle.\",\"We define the length of the recurring cycle of those unit fractions as 0. \",\"\",\"\",\"Let L(n) denote the length of the recurring cycle of 1/n.\",\"You are given that ∑L(n) for 3 ≤ n ≤ 1 000 000 equals 55535191115.\",\"\",\"\",\"Find ∑L(n) for 3 ≤ n ≤ 100 000 000\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-417-reciprocal-cycles-ii\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler417()</code> should return 446572970925740.\",\"testString\":\"assert.strictEqual(euler417(), 446572970925740, '<code>euler417()</code> should return 446572970925740.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler417() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler417();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-418-factorisation-triples\",\"id\":\"5900f50d1000cf542c51001f\"},\"slug\":\"/coding-interview-prep/project-euler/problem-417-reciprocal-cycles-ii\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-417-reciprocal-cycles-ii-9fd60d4297df58776fc7.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 417: Reciprocal cycles II\",\"description\":[\"A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:\",\"\",\"1/2= 0.5\",\"1/3= 0.(3)\",\"1/4= 0.25\",\"1/5= 0.2\",\"1/6= 0.1(6)\",\"1/7= 0.(142857)\",\"1/8= 0.125\",\"1/9= 0.(1)\",\"1/10= 0.1\",\"\",\"Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be seen that 1/7 has a 6-digit recurring cycle.\",\"\",\"Unit fractions whose denominator has no other prime factors than 2 and/or 5 are not considered to have a recurring cycle.\",\"We define the length of the recurring cycle of those unit fractions as 0. \",\"\",\"\",\"Let L(n) denote the length of the recurring cycle of 1/n.\",\"You are given that ∑L(n) for 3 ≤ n ≤ 1 000 000 equals 55535191115.\",\"\",\"\",\"Find ∑L(n) for 3 ≤ n ≤ 100 000 000\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-417-reciprocal-cycles-ii\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler417()</code> should return 446572970925740.\",\"testString\":\"assert.strictEqual(euler417(), 446572970925740, '<code>euler417()</code> should return 446572970925740.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler417() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler417();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-418-factorisation-triples\",\"id\":\"5900f50d1000cf542c51001f\"},\"slug\":\"/coding-interview-prep/project-euler/problem-417-reciprocal-cycles-ii\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-417-reciprocal-cycles-ii.json\n// module id = 3214\n// module chunks = 165960262997441"],"sourceRoot":""}