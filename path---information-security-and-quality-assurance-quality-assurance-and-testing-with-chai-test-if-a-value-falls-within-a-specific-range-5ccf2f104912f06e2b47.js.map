{"version":3,"sources":["webpack:///path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-falls-within-a-specific-range-5ccf2f104912f06e2b47.js","webpack:///./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-falls-within-a-specific-range.json"],"names":["webpackJsonp","3700","module","exports","data","challengeNode","title","guideUrl","description","challengeType","fields","blockName","slug","tests","text","testString","pathContext","challengeMeta","introPath","template","required","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,gDAAAC,SAAA,KAAAC,aAAA,qdAAAC,cAAA,EAAAC,QAAwkBC,UAAA,0CAAAC,KAAA,oIAAAC,QAA2MC,KAAA,wBAAAC,WAAA,oLAAgOD,KAAA,uEAAAC,WAAA,sUAAiaD,KAAA,uEAAAC,WAAA,yUAAmaC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAC,YAAAC,kBAAA,kHAAAC,GAAA,4BAAmNV,KAAA","file":"path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-falls-within-a-specific-range-5ccf2f104912f06e2b47.js","sourcesContent":["webpackJsonp([238244744869704],{\n\n/***/ 3700:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Test if a Value Falls within a Specific Range\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\".approximately\",\".approximately(actual, expected, range, [message])\",\"actual = expected +/- range\",\"Choose the minimum range (3rd parameter) to make the test always pass\",\"it should be less than 1\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-falls-within-a-specific-range\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=9').then(data => {assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Use approximately(actual, expected, range) - Chose the correct range\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=9').then(data => {  assert.equal(data.assertions[0].method, 'approximately');  assert.equal(data.assertions[0].args[2], 0.5, 'weirdNumbers(0.5) is in the range (0.5, 1.5]. It\\\\'s within 1 +/- 0.5'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Use approximately(actual, expected, range) - Chose the correct range\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=9').then(data => {  assert.equal(data.assertions[1].method, 'approximately');  assert.equal(data.assertions[1].args[2], 0.8, 'weirdNumbers(0.2) is in the range (0.2, 1.2]. It\\\\'s within 1 +/- 0.8'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-is-an-array\",\"id\":\"587d824c367417b2b2512c4f\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-falls-within-a-specific-range\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-falls-within-a-specific-range-5ccf2f104912f06e2b47.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Test if a Value Falls within a Specific Range\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\".approximately\",\".approximately(actual, expected, range, [message])\",\"actual = expected +/- range\",\"Choose the minimum range (3rd parameter) to make the test always pass\",\"it should be less than 1\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-falls-within-a-specific-range\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=9').then(data => {assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Use approximately(actual, expected, range) - Chose the correct range\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=9').then(data => {  assert.equal(data.assertions[0].method, 'approximately');  assert.equal(data.assertions[0].args[2], 0.5, 'weirdNumbers(0.5) is in the range (0.5, 1.5]. It\\\\'s within 1 +/- 0.5'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Use approximately(actual, expected, range) - Chose the correct range\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=9').then(data => {  assert.equal(data.assertions[1].method, 'approximately');  assert.equal(data.assertions[1].args[2], 0.8, 'weirdNumbers(0.2) is in the range (0.2, 1.2]. It\\\\'s within 1 +/- 0.8'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-is-an-array\",\"id\":\"587d824c367417b2b2512c4f\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-a-value-falls-within-a-specific-range\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-test-if-a-value-falls-within-a-specific-range.json\n// module id = 3700\n// module chunks = 238244744869704"],"sourceRoot":""}