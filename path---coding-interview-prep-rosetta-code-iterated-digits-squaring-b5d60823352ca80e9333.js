webpackJsonp([0xcb9d6ef732fa],{3410:function(e,t){e.exports={data:{challengeNode:{title:"Iterated digits squaring",description:["If you add the square of the digits of a Natural number (an integer bigger than zero), you always end with either 1 or 89:","<pre>15 -> 26 -> 40 -> 16 -> 37 -> 58 -> 89","7 -> 49 -> 97 -> 130 -> 10 -> 1</pre>","Write a function that takes a number as a parameter and returns 1 or 89 after performing the mentioned process."],challengeType:5,fields:{slug:"/coding-interview-prep/rosetta-code/iterated-digits-squaring",blockName:"Rosetta Code",tests:[{text:"'<code>iteratedSquare</code> should be a function.'",testString:"assert(typeof iteratedSquare=='function','<code>iteratedSquare</code> should be a function.');"},{text:"'<code>iteratedSquare(4)</code> should return a number.'",testString:"assert(typeof iteratedSquare(4)=='number','<code>iteratedSquare(4)</code> should return a number.');"},{text:"'<code>iteratedSquare(4)</code> should return <code>89</code>.'",testString:"assert.equal(iteratedSquare(4),89,'<code>iteratedSquare(4)</code> should return <code>89</code>.');"},{text:"'<code>iteratedSquare(7)</code> should return <code>1</code>.'",testString:"assert.equal(iteratedSquare(7),1,'<code>iteratedSquare(7)</code> should return <code>1</code>.');"},{text:"'<code>iteratedSquare(15)</code> should return <code>89</code>.'",testString:"assert.equal(iteratedSquare(15),89,'<code>iteratedSquare(15)</code> should return <code>89</code>.');"},{text:"'<code>iteratedSquare(20)</code> should return <code>89</code>.'",testString:"assert.equal(iteratedSquare(20),89,'<code>iteratedSquare(20)</code> should return <code>89</code>.');"},{text:"'<code>iteratedSquare(70)</code> should return <code>1</code>.'",testString:"assert.equal(iteratedSquare(70),1,'<code>iteratedSquare(70)</code> should return <code>1</code>.');"},{text:"'<code>iteratedSquare(100)</code> should return <code>1</code>.'",testString:"assert.equal(iteratedSquare(100),1,'<code>iteratedSquare(100)</code> should return <code>1</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function iteratedSquare (n) {\n  // Good luck!\n}",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/rosetta-code/jaro-distance",id:"5a23c84252665b21eecc7ec1"},slug:"/coding-interview-prep/rosetta-code/iterated-digits-squaring"}}}});
//# sourceMappingURL=path---coding-interview-prep-rosetta-code-iterated-digits-squaring-b5d60823352ca80e9333.js.map