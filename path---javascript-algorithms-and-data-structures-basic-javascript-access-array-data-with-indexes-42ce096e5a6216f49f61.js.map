{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-access-array-data-with-indexes-42ce096e5a6216f49f61.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-access-array-data-with-indexes.json"],"names":["webpackJsonp","3753","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iCAAAC,aAAA,sSAAqU,sLAAAC,cAAA,EAAAC,QAA2OC,KAAA,6FAAAC,UAAA,mBAAAC,QAA6IC,KAAA,uDAAAC,WAAA,mNAA8RD,KAAA,qCAAAC,WAAA,gJAAwMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,uIAAmKC,KAAA,GAAAC,KAAA,4LAAqOC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6FAAAC,GAAA,4BAA8LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-access-array-data-with-indexes-42ce096e5a6216f49f61.js","sourcesContent":["webpackJsonp([244371952071233],{\n\n/***/ 3753:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Access Array Data with Indexes\",\"description\":[\"我们可以像操作字符串一样通过数组索引<code>[index]</code>来访问数组中的数据。\",\"数组索引的使用与字符串索引一样，不同的是，通过字符串的索引得到的是一个字符，通过数组索引得到的是一个元素。与字符串类似，数组也是<dfn>基于零</dfn>的索引，因此数组的第一个元素的索引是<code>0</code>。\",\"<strong>示例</strong>\",\"<blockquote>var array = [50,60,70];<br>array[0]; // 值为 50<br>var data = array[1];  // 值为 60</blockquote>\",\"<strong>提示</strong><br>数组名称和方括号之间不应有任何空格，如<code>array [0]</code>尽管 JavaScript 能够正确处理，但可能会让看你代码的其他程序员感到困惑\",\"<hr>\",\"创建一个名为<code>myData</code>的变量，并把<code>myArray</code>的第一个索引上的值赋给它。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-array-data-with-indexes\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"变量<code>myData</code>的值应该等于<code>myArray</code>的第一个值\",\"testString\":\"assert((function(){if(typeof myArray !== 'undefined' && typeof myData !== 'undefined' && myArray[0] === myData){return true;}else{return false;}})(), '变量<code>myData</code>的值应该等于<code>myArray</code>的第一个值');\"},{\"text\":\"应使用方括号访问变量<code>myArray</code>中的数据\",\"testString\":\"assert((function(){if(code.match(/\\\\s*=\\\\s*myArray\\\\[0\\\\]/g)){return true;}else{return false;}})(), '应使用方括号访问变量<code>myArray</code>中的数据');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 示例\\nvar ourArray = [50,60,70];\\nvar ourData = ourArray[0]; // 值为 50\\n\\n// 初始化变量\\nvar myArray = [50,60,70];\\n\\n// 请把你的代码写在这条注释以下\\n\",\"head\":\"\",\"tail\":\"if(typeof myArray !== \\\"undefined\\\" && typeof myData !== \\\"undefined\\\"){(function(y,z){return 'myArray = ' + JSON.stringify(y) + ', myData = ' + JSON.stringify(z);})(myArray, myData);}\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/modify-array-data-with-indexes\",\"id\":\"56bbb991ad1ed5201cd392ca\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-array-data-with-indexes\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-access-array-data-with-indexes-42ce096e5a6216f49f61.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Access Array Data with Indexes\",\"description\":[\"我们可以像操作字符串一样通过数组索引<code>[index]</code>来访问数组中的数据。\",\"数组索引的使用与字符串索引一样，不同的是，通过字符串的索引得到的是一个字符，通过数组索引得到的是一个元素。与字符串类似，数组也是<dfn>基于零</dfn>的索引，因此数组的第一个元素的索引是<code>0</code>。\",\"<strong>示例</strong>\",\"<blockquote>var array = [50,60,70];<br>array[0]; // 值为 50<br>var data = array[1];  // 值为 60</blockquote>\",\"<strong>提示</strong><br>数组名称和方括号之间不应有任何空格，如<code>array [0]</code>尽管 JavaScript 能够正确处理，但可能会让看你代码的其他程序员感到困惑\",\"<hr>\",\"创建一个名为<code>myData</code>的变量，并把<code>myArray</code>的第一个索引上的值赋给它。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-array-data-with-indexes\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"变量<code>myData</code>的值应该等于<code>myArray</code>的第一个值\",\"testString\":\"assert((function(){if(typeof myArray !== 'undefined' && typeof myData !== 'undefined' && myArray[0] === myData){return true;}else{return false;}})(), '变量<code>myData</code>的值应该等于<code>myArray</code>的第一个值');\"},{\"text\":\"应使用方括号访问变量<code>myArray</code>中的数据\",\"testString\":\"assert((function(){if(code.match(/\\\\s*=\\\\s*myArray\\\\[0\\\\]/g)){return true;}else{return false;}})(), '应使用方括号访问变量<code>myArray</code>中的数据');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 示例\\nvar ourArray = [50,60,70];\\nvar ourData = ourArray[0]; // 值为 50\\n\\n// 初始化变量\\nvar myArray = [50,60,70];\\n\\n// 请把你的代码写在这条注释以下\\n\",\"head\":\"\",\"tail\":\"if(typeof myArray !== \\\"undefined\\\" && typeof myData !== \\\"undefined\\\"){(function(y,z){return 'myArray = ' + JSON.stringify(y) + ', myData = ' + JSON.stringify(z);})(myArray, myData);}\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/modify-array-data-with-indexes\",\"id\":\"56bbb991ad1ed5201cd392ca\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/access-array-data-with-indexes\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-access-array-data-with-indexes.json\n// module id = 3753\n// module chunks = 244371952071233"],"sourceRoot":""}