{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-74-digit-factorial-chains-965485f4e7a099aea575.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-74-digit-factorial-chains.json"],"names":["webpackJsonp","3313","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qCAAAC,aAAA,yTAAqT,2hBAAAC,cAAA,EAAAC,QAAunBC,KAAA,yEAAAC,UAAA,gBAAAC,QAAsHC,KAAA,4CAAAC,WAAA,sFAAqJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,yEAA4HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,mFAAAC,GAAA,4BAAoLrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-74-digit-factorial-chains-965485f4e7a099aea575.js","sourcesContent":["webpackJsonp([254979527093953],{\n\n/***/ 3313:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 74: Digit factorial chains\",\"description\":[\"The number 145 is well known for the property that the sum of the factorial of its digits is equal to 145:\",\"1! + 4! + 5! = 1 + 24 + 120 = 145\",\"Perhaps less well known is 169, in that it produces the longest chain of numbers that link back to 169; it turns out that there are only three such loops that exist:\",\"169 → 363601 → 1454 → 169\",\"871 → 45361 → 871\",\"872 → 45362 → 872\",\"It is not difficult to prove that EVERY starting number will eventually get stuck in a loop. For example,\",\"69 → 363600 → 1454 → 169 → 363601 (→ 1454)\",\"78 → 45360 → 871 → 45361 (→ 871)\",\"540 → 145 (→ 145)\",\"Starting with 69 produces a chain of five non-repeating terms, but the longest non-repeating chain with a starting number below one million is sixty terms.\",\"How many chains, with a starting number below one million, contain exactly sixty non-repeating terms?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-74-digit-factorial-chains\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler74()</code> should return 402.\",\"testString\":\"assert.strictEqual(euler74(), 402, '<code>euler74()</code> should return 402.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler74() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler74();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-75-singular-integer-right-triangles\",\"id\":\"5900f3b61000cf542c50fec9\"},\"slug\":\"/coding-interview-prep/project-euler/problem-74-digit-factorial-chains\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-74-digit-factorial-chains-965485f4e7a099aea575.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 74: Digit factorial chains\",\"description\":[\"The number 145 is well known for the property that the sum of the factorial of its digits is equal to 145:\",\"1! + 4! + 5! = 1 + 24 + 120 = 145\",\"Perhaps less well known is 169, in that it produces the longest chain of numbers that link back to 169; it turns out that there are only three such loops that exist:\",\"169 → 363601 → 1454 → 169\",\"871 → 45361 → 871\",\"872 → 45362 → 872\",\"It is not difficult to prove that EVERY starting number will eventually get stuck in a loop. For example,\",\"69 → 363600 → 1454 → 169 → 363601 (→ 1454)\",\"78 → 45360 → 871 → 45361 (→ 871)\",\"540 → 145 (→ 145)\",\"Starting with 69 produces a chain of five non-repeating terms, but the longest non-repeating chain with a starting number below one million is sixty terms.\",\"How many chains, with a starting number below one million, contain exactly sixty non-repeating terms?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-74-digit-factorial-chains\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler74()</code> should return 402.\",\"testString\":\"assert.strictEqual(euler74(), 402, '<code>euler74()</code> should return 402.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler74() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler74();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-75-singular-integer-right-triangles\",\"id\":\"5900f3b61000cf542c50fec9\"},\"slug\":\"/coding-interview-prep/project-euler/problem-74-digit-factorial-chains\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-74-digit-factorial-chains.json\n// module id = 3313\n// module chunks = 254979527093953"],"sourceRoot":""}