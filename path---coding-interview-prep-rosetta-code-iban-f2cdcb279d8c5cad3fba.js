webpackJsonp([0xcb1e833e456f],{3408:function(e,t){e.exports={data:{challengeNode:{title:"IBAN",description:['The  <a href="https://en.wikipedia.org/wiki/International_Bank_Account_Number">International Bank Account Number (IBAN)</a>  is an internationally agreed means of identifying bank accounts across national borders with a reduced risk of propagating <a href="https://en.wikipedia.org/wiki/Transcription_error">transcription errors</a>.',"The IBAN consists of up to 34 alphanumeric characters:","<ul>","<li>first the two-letter ISO 3166-1 alpha-2 country code</li>","<li>then two check digits, and</li>","<li>finally a country-specific Basic Bank Account Number (BBAN).</li>","</ul>","The check digits enable a sanity check of the bank account number to confirm its integrity even before submitting a transaction.","Write a function that takes IBAN string as parameter. If it is valid return true. Otherwise, return false."],challengeType:5,fields:{slug:"/coding-interview-prep/rosetta-code/iban",blockName:"Rosetta Code",tests:[{text:"'<code>isValid</code> should be a function.'",testString:"assert(typeof isValid=='function','<code>isValid</code> should be a function.');"},{text:"'<code>isValid(\"'+tests[0]+'\")</code> should return a boolean.'",testString:"assert(typeof isValid(tests[0])=='boolean','<code>isValid(\"'+tests[0]+'\")</code> should return a boolean.');"},{text:"'<code>isValid(\"'+tests[0]+'\")</code> should return <code>true</code>.'",testString:"assert.equal(isValid(tests[0]),true,'<code>isValid(\"'+tests[0]+'\")</code> should return <code>true</code>.');"},{text:"'<code>isValid(\"'+tests[1]+'\")</code> should return <code>false</code>.'",testString:"assert.equal(isValid(tests[1]),false,'<code>isValid(\"'+tests[1]+'\")</code> should return <code>false</code>.');"},{text:"'<code>isValid(\"'+tests[2]+'\")</code> should return <code>false</code>.'",testString:"assert.equal(isValid(tests[2]),false,'<code>isValid(\"'+tests[2]+'\")</code> should return <code>false</code>.');"},{text:"'<code>isValid(\"'+tests[3]+'\")</code> should return <code>false</code>.'",testString:"assert.equal(isValid(tests[3]),false,'<code>isValid(\"'+tests[3]+'\")</code> should return <code>false</code>.');"},{text:"'<code>isValid(\"'+tests[4]+'\")</code> should return <code>true</code>.'",testString:"assert.equal(isValid(tests[4]),true,'<code>isValid(\"'+tests[4]+'\")</code> should return <code>true</code>.');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function isValid (iban) {\n  // Good luck!\n}",head:"",tail:"let tests=[\n'GB82 WEST 1234 5698 7654 32',\n'GB82 WEST 1.34 5698 7654 32',\n'GB82 WEST 1234 5698 7654 325',\n'GB82 TEST 1234 5698 7654 32',\n'SA03 8000 0000 6080 1016 7519'\n]"},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/rosetta-code/identity-matrix",id:"5a23c84252665b21eecc7eaf"},slug:"/coding-interview-prep/rosetta-code/iban"}}}});
//# sourceMappingURL=path---coding-interview-prep-rosetta-code-iban-f2cdcb279d8c5cad3fba.js.map