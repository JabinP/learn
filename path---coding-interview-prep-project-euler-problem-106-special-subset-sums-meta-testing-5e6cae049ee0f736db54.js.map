{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-106-special-subset-sums-meta-testing-5e6cae049ee0f736db54.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-106-special-subset-sums-meta-testing.json"],"names":["webpackJsonp","2869","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iDAAAC,aAAA,gPAA4Q,2lBAAAC,cAAA,EAAAC,QAAmqBC,KAAA,oFAAAC,UAAA,gBAAAC,QAAiIC,KAAA,+CAAAC,WAAA,4FAA8JC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,mEAAAC,GAAA,4BAAoKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-106-special-subset-sums-meta-testing-5e6cae049ee0f736db54.js","sourcesContent":["webpackJsonp([179039734965129],{\n\n/***/ 2869:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 106: Special subset sums: meta-testing\",\"description\":[\"Let S(A) represent the sum of elements in set A of size n. We shall call it a special sum set if for any two non-empty disjoint subsets, B and C, the following properties are true:\",\"S(B) ≠ S(C); that is, sums of subsets cannot be equal.\",\"If B contains more elements than C then S(B) > S(C).\",\"For this problem we shall assume that a given set contains n strictly increasing elements and it already satisfies the second rule.\",\"Surprisingly, out of the 25 possible subset pairs that can be obtained from a set for which n = 4, only 1 of these pairs need to be tested for equality (first rule). Similarly, when n = 7, only 70 out of the 966 subset pairs need to be tested.\",\"For n = 12, how many of the 261625 subset pairs that can be obtained need to be tested for equality?\",\"NOTE: This problem is related to Problem 103 and Problem 105.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-106-special-subset-sums-meta-testing\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler106()</code> should return 21384.\",\"testString\":\"assert.strictEqual(euler106(), 21384, '<code>euler106()</code> should return 21384.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler106() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler106();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-107-minimal-network\",\"id\":\"5900f3d71000cf542c50fee9\"},\"slug\":\"/coding-interview-prep/project-euler/problem-106-special-subset-sums-meta-testing\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-106-special-subset-sums-meta-testing-5e6cae049ee0f736db54.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 106: Special subset sums: meta-testing\",\"description\":[\"Let S(A) represent the sum of elements in set A of size n. We shall call it a special sum set if for any two non-empty disjoint subsets, B and C, the following properties are true:\",\"S(B) ≠ S(C); that is, sums of subsets cannot be equal.\",\"If B contains more elements than C then S(B) > S(C).\",\"For this problem we shall assume that a given set contains n strictly increasing elements and it already satisfies the second rule.\",\"Surprisingly, out of the 25 possible subset pairs that can be obtained from a set for which n = 4, only 1 of these pairs need to be tested for equality (first rule). Similarly, when n = 7, only 70 out of the 966 subset pairs need to be tested.\",\"For n = 12, how many of the 261625 subset pairs that can be obtained need to be tested for equality?\",\"NOTE: This problem is related to Problem 103 and Problem 105.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-106-special-subset-sums-meta-testing\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler106()</code> should return 21384.\",\"testString\":\"assert.strictEqual(euler106(), 21384, '<code>euler106()</code> should return 21384.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler106() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler106();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-107-minimal-network\",\"id\":\"5900f3d71000cf542c50fee9\"},\"slug\":\"/coding-interview-prep/project-euler/problem-106-special-subset-sums-meta-testing\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-106-special-subset-sums-meta-testing.json\n// module id = 2869\n// module chunks = 179039734965129"],"sourceRoot":""}