{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-extensible-prime-generator-e4ca4bb91b2f8fcb34ae.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-extensible-prime-generator.json"],"names":["webpackJsonp","3382","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,6BAAAC,aAAA,urBAAAC,cAAA,EAAAC,QAAuwBC,KAAA,iEAAAC,UAAA,eAAAC,QAA6GC,KAAA,6CAAAC,WAAA,gGAAiKD,KAAA,6CAAAC,WAAA,4KAA6OD,KAAA,6CAAAC,WAAA,0JAA2ND,KAAA,6CAAAC,WAAA,yGAA0KD,KAAA,6CAAAC,WAAA,uGAAuKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,kEAAqHC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,gDAAAC,GAAA,4BAAiJrB,KAAA","file":"path---coding-interview-prep-rosetta-code-extensible-prime-generator-e4ca4bb91b2f8fcb34ae.js","sourcesContent":["webpackJsonp([59779425028495],{\n\n/***/ 3382:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Extensible prime generator\",\"description\":[\"<p>Write a generator of prime numbers, in order, that will automatically adjust to accommodate the generation of any reasonably high prime.</p> The generator should be able to : Show the first <b>n</b> prime numbers.Show the prime numbers in a range.Show the number of primes in a range.Show the <b>n<sup>th</sup></b> prime number.<p>The function should have two parameters. The first will receive <b>n</b> or the range as an array. The second will receive a boolean, that specifies if the function returns the prime numbers as an array or a single number(the number of primes in the range or the <b>n<sup>th</sup></b> prime). According to the parameters the function should return an array.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/extensible-prime-generator\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert(typeof primeGenerator === 'function', '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.deepEqual(primeGenerator(20, true), [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71], '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.deepEqual(primeGenerator([100, 150], true), [101, 103, 107, 109, 113, 127, 131, 137, 139, 149], '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.equal(primeGenerator([7700, 8000], false), 30, '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.equal(primeGenerator(10000, false), 104729, '<code>primeGenerator</code> is a function.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function primeGenerator (num, showPrimes) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/factorial\",\"id\":\"598ee8b91b410510ae82efef\"},\"slug\":\"/coding-interview-prep/rosetta-code/extensible-prime-generator\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-extensible-prime-generator-e4ca4bb91b2f8fcb34ae.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Extensible prime generator\",\"description\":[\"<p>Write a generator of prime numbers, in order, that will automatically adjust to accommodate the generation of any reasonably high prime.</p> The generator should be able to : Show the first <b>n</b> prime numbers.Show the prime numbers in a range.Show the number of primes in a range.Show the <b>n<sup>th</sup></b> prime number.<p>The function should have two parameters. The first will receive <b>n</b> or the range as an array. The second will receive a boolean, that specifies if the function returns the prime numbers as an array or a single number(the number of primes in the range or the <b>n<sup>th</sup></b> prime). According to the parameters the function should return an array.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/extensible-prime-generator\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert(typeof primeGenerator === 'function', '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.deepEqual(primeGenerator(20, true), [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71], '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.deepEqual(primeGenerator([100, 150], true), [101, 103, 107, 109, 113, 127, 131, 137, 139, 149], '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.equal(primeGenerator([7700, 8000], false), 30, '<code>primeGenerator</code> is a function.');\"},{\"text\":\"<code>primeGenerator</code> is a function.\",\"testString\":\"assert.equal(primeGenerator(10000, false), 104729, '<code>primeGenerator</code> is a function.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function primeGenerator (num, showPrimes) {\\n  // Good luck!\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/factorial\",\"id\":\"598ee8b91b410510ae82efef\"},\"slug\":\"/coding-interview-prep/rosetta-code/extensible-prime-generator\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-extensible-prime-generator.json\n// module id = 3382\n// module chunks = 59779425028495"],"sourceRoot":""}