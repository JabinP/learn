{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-functional-programming-combine-two-arrays-using-the-concat-method-1d8d014f3fd9196a8126.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-functional-programming-combine-two-arrays-using-the-concat-method.json"],"names":["webpackJsonp","3905","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,6CAAAC,aAAA,oQAA0R,2HAAAC,cAAA,EAAAC,QAAqMC,KAAA,+GAAAC,UAAA,yBAAAC,QAAqKC,KAAA,6BAAAC,WAAA,oEAAqHD,KAAA,4BAAAC,WAAA,8FAA8ID,KAAA,6BAAAC,WAAA,6FAA8ID,KAAA,oFAAAC,WAAA,4LAAmSC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,mLAAsOC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,qIAAAC,GAAA,4BAAsOrB,KAAA","file":"path---javascript-algorithms-and-data-structures-functional-programming-combine-two-arrays-using-the-concat-method-1d8d014f3fd9196a8126.js","sourcesContent":["webpackJsonp([166319323688988],{\n\n/***/ 3905:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Combine Two Arrays Using the concat Method\",\"description\":[\"<code>Concatenation</code>意思是将元素连接到尾部。同理，JavaScript 为字符串和数组提供了<code>concat</code>方法。对数组来说，在一个数组上调用<code>concat</code>方法，然后提供另一个数组作为参数添加到第一个数组末尾，返回一个新数组，不会改变任何一个原始数组。举个例子：\",\"<blockquote>[1, 2, 3].concat([4, 5, 6]);<br>// 返回新数组 [1, 2, 3, 4, 5, 6]</blockquote>\",\"<hr>\",\"在<code>nonMutatingConcat</code>函数里使用<code>concat</code>，将<code>attach</code>拼接到<code>original</code>尾部，返回拼接后的数组。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-two-arrays-using-the-concat-method\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"应该使用<code>concat</code>方法。\",\"testString\":\"assert(code.match(/\\\\.concat/g), '应该使用<code>concat</code>方法。');\"},{\"text\":\"不能改变<code>first</code>数组。\",\"testString\":\"assert(JSON.stringify(first) === JSON.stringify([1, 2, 3]), '不能改变<code>first</code>数组。');\"},{\"text\":\"不能改变<code>second</code>数组。\",\"testString\":\"assert(JSON.stringify(second) === JSON.stringify([4, 5]), '不能改变<code>second</code>数组。');\"},{\"text\":\"<code>nonMutatingConcat([1, 2, 3], [4, 5])</code>应返回<code>[1, 2, 3, 4, 5]</code>。\",\"testString\":\"assert(JSON.stringify(nonMutatingConcat([1, 2, 3], [4, 5])) === JSON.stringify([1, 2, 3, 4, 5]), '<code>nonMutatingConcat([1, 2, 3], [4, 5])</code>应返回<code>[1, 2, 3, 4, 5]</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function nonMutatingConcat(original, attach) {\\n  // 请在本行以下添加你的代码\\n  \\n  \\n  // 请在本行以上添加你的代码\\n}\\nvar first = [1, 2, 3];\\nvar second = [4, 5];\\nnonMutatingConcat(first, second);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/add-elements-to-the-end-of-an-array-using-concat-instead-of-push\",\"id\":\"587d7da9367417b2b2512b66\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-two-arrays-using-the-concat-method\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-functional-programming-combine-two-arrays-using-the-concat-method-1d8d014f3fd9196a8126.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Combine Two Arrays Using the concat Method\",\"description\":[\"<code>Concatenation</code>意思是将元素连接到尾部。同理，JavaScript 为字符串和数组提供了<code>concat</code>方法。对数组来说，在一个数组上调用<code>concat</code>方法，然后提供另一个数组作为参数添加到第一个数组末尾，返回一个新数组，不会改变任何一个原始数组。举个例子：\",\"<blockquote>[1, 2, 3].concat([4, 5, 6]);<br>// 返回新数组 [1, 2, 3, 4, 5, 6]</blockquote>\",\"<hr>\",\"在<code>nonMutatingConcat</code>函数里使用<code>concat</code>，将<code>attach</code>拼接到<code>original</code>尾部，返回拼接后的数组。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-two-arrays-using-the-concat-method\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"应该使用<code>concat</code>方法。\",\"testString\":\"assert(code.match(/\\\\.concat/g), '应该使用<code>concat</code>方法。');\"},{\"text\":\"不能改变<code>first</code>数组。\",\"testString\":\"assert(JSON.stringify(first) === JSON.stringify([1, 2, 3]), '不能改变<code>first</code>数组。');\"},{\"text\":\"不能改变<code>second</code>数组。\",\"testString\":\"assert(JSON.stringify(second) === JSON.stringify([4, 5]), '不能改变<code>second</code>数组。');\"},{\"text\":\"<code>nonMutatingConcat([1, 2, 3], [4, 5])</code>应返回<code>[1, 2, 3, 4, 5]</code>。\",\"testString\":\"assert(JSON.stringify(nonMutatingConcat([1, 2, 3], [4, 5])) === JSON.stringify([1, 2, 3, 4, 5]), '<code>nonMutatingConcat([1, 2, 3], [4, 5])</code>应返回<code>[1, 2, 3, 4, 5]</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function nonMutatingConcat(original, attach) {\\n  // 请在本行以下添加你的代码\\n  \\n  \\n  // 请在本行以上添加你的代码\\n}\\nvar first = [1, 2, 3];\\nvar second = [4, 5];\\nnonMutatingConcat(first, second);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/add-elements-to-the-end-of-an-array-using-concat-instead-of-push\",\"id\":\"587d7da9367417b2b2512b66\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-two-arrays-using-the-concat-method\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-functional-programming-combine-two-arrays-using-the-concat-method.json\n// module id = 3905\n// module chunks = 166319323688988"],"sourceRoot":""}