webpackJsonp([0x982ced90ee41],{3461:function(e,t){e.exports={data:{challengeNode:{title:"Add Classes with D3",description:["即使对小型 app 来说在 HTML 元素中大量使用内联样式表也十分难以管理。更方便的是给元素添加遵守 CSS 规则的类。D3 中的<code>attr()</code>方法可以给元素添加任何 HTML 属性，包括类名称。",'<code>attr()</code>方法和<code>style()</code>的使用方法一样。它以逗号分隔的键值对为参数使用回调函数。这里是一个给选中元素添加类名为 "container" 的例子：','<code>selection.attr("class", "container");</code>',"<hr>","在编辑器中添加<code>attr()</code>方法，给<code>div</code>元素添加类名<code>bar</code>。"],challengeType:0,fields:{slug:"/data-visualization/data-visualization-with-d3/add-classes-with-d3",blockName:"Data Visualization with D3",tests:[{text:"你的<code>div</code>元素应该有一个<code>bar</code>类。",testString:"assert($('div').attr('class') == \"bar\", '你的<code>div</code>元素应该有一个<code>bar</code>类。');"},{text:"你应该使用<code>attr()</code>方法。",testString:"assert(code.match(/\\.attr/g), '你应该使用<code>attr()</code>方法。');"}]},required:[{link:null,raw:null,src:"https://cdnjs.cloudflare.com/ajax/libs/d3/4.3.0/d3.min.js"}],files:{indexhtml:{key:"indexhtml",ext:"html",name:"index",contents:'<style>\n  .bar {\n    width: 25px;\n    height: 100px;\n    display: inline-block;\n    background-color: blue;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n    \n    d3.select("body").selectAll("div")\n      .data(dataset)\n      .enter()\n      .append("div")\n      // 在下面添加你的代码\n      \n      \n      \n      // 在上面添加你的代码\n  </script>\n</body>',head:"",tail:""},indexjs:null,indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[{link:null,raw:null,src:"https://cdnjs.cloudflare.com/ajax/libs/d3/4.3.0/d3.min.js"}],nextChallengePath:"/data-visualization/data-visualization-with-d3/update-the-height-of-an-element-dynamically",id:"587d7fa7367417b2b2512bc8"},slug:"/data-visualization/data-visualization-with-d3/add-classes-with-d3"}}}});
//# sourceMappingURL=path---data-visualization-data-visualization-with-d-3-add-classes-with-d-3-b744a586676e67f17d6c.js.map