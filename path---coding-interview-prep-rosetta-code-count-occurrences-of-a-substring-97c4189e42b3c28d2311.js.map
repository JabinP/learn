{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-count-occurrences-of-a-substring-97c4189e42b3c28d2311.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-count-occurrences-of-a-substring.json"],"names":["webpackJsonp","3362","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,mCAAAC,aAAA,6fAAAC,cAAA,EAAAC,QAAmlBC,KAAA,uEAAAC,UAAA,eAAAC,QAAmHC,KAAA,6CAAAC,WAAA,gGAAiKD,KAAA,sFAAAC,WAAA,sKAAsRD,KAAA,kFAAAC,WAAA,kKAA8QD,KAAA,yFAAAC,WAAA,0KAA4RC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,8EAAiIC,KAAA,GAAAC,KAAA,wJAA0KC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,sDAAAC,GAAA,4BAAuJrB,KAAA","file":"path---coding-interview-prep-rosetta-code-count-occurrences-of-a-substring-97c4189e42b3c28d2311.js","sourcesContent":["webpackJsonp([69134976795162],{\n\n/***/ 3362:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Count occurrences of a substring\",\"description\":[\"Task:\",\"<p>Create a function,  or show a built-in function,  to count the number of non-overlapping occurrences of a substring inside a string.</p><p>The function should take two arguments:</p>\",\"the first argument being the string to search,  and\",\"the second a substring to be searched for.\",\"<p>It should return an integer count.</p>\",\"<p>The matching should yield the highest number of non-overlapping matches.</p><p>In general, this essentially means matching from left-to-right or right-to-left.</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/count-occurrences-of-a-substring\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>countSubstring</code> is a function.\",\"testString\":\"assert(typeof countSubstring === 'function', '<code>countSubstring</code> is a function.');\"},{\"text\":\"<code>countSubstring(\\\"the three truths\\\", \\\"th\\\")</code> should return <code>3</code>.\",\"testString\":\"assert.equal(countSubstring(testCases[0], searchString[0]), results[0], '<code>countSubstring(\\\"the three truths\\\", \\\"th\\\")</code> should return <code>3</code>.');\"},{\"text\":\"<code>countSubstring(\\\"ababababab\\\", \\\"abab\\\")</code> should return <code>2</code>.\",\"testString\":\"assert.equal(countSubstring(testCases[1], searchString[1]), results[1], '<code>countSubstring(\\\"ababababab\\\", \\\"abab\\\")</code> should return <code>2</code>.');\"},{\"text\":\"<code>countSubstring(\\\"abaabba*bbaba*bbab\\\", \\\"a*b\\\")</code> should return <code>2</code>.\",\"testString\":\"assert.equal(countSubstring(testCases[2], searchString[2]), results[2], '<code>countSubstring(\\\"abaabba*bbaba*bbab\\\", \\\"a*b\\\")</code> should return <code>2</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function countSubstring (str, subStr) {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const testCases = ['the three truths', 'ababababab', 'abaabba*bbaba*bbab'];\\nconst searchString = ['th', 'abab', 'a*b'];\\nconst results = [3, 2, 2];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/count-the-coins\",\"id\":\"596fda99c69f779975a1b67d\"},\"slug\":\"/coding-interview-prep/rosetta-code/count-occurrences-of-a-substring\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-count-occurrences-of-a-substring-97c4189e42b3c28d2311.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Count occurrences of a substring\",\"description\":[\"Task:\",\"<p>Create a function,  or show a built-in function,  to count the number of non-overlapping occurrences of a substring inside a string.</p><p>The function should take two arguments:</p>\",\"the first argument being the string to search,  and\",\"the second a substring to be searched for.\",\"<p>It should return an integer count.</p>\",\"<p>The matching should yield the highest number of non-overlapping matches.</p><p>In general, this essentially means matching from left-to-right or right-to-left.</p>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/count-occurrences-of-a-substring\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>countSubstring</code> is a function.\",\"testString\":\"assert(typeof countSubstring === 'function', '<code>countSubstring</code> is a function.');\"},{\"text\":\"<code>countSubstring(\\\"the three truths\\\", \\\"th\\\")</code> should return <code>3</code>.\",\"testString\":\"assert.equal(countSubstring(testCases[0], searchString[0]), results[0], '<code>countSubstring(\\\"the three truths\\\", \\\"th\\\")</code> should return <code>3</code>.');\"},{\"text\":\"<code>countSubstring(\\\"ababababab\\\", \\\"abab\\\")</code> should return <code>2</code>.\",\"testString\":\"assert.equal(countSubstring(testCases[1], searchString[1]), results[1], '<code>countSubstring(\\\"ababababab\\\", \\\"abab\\\")</code> should return <code>2</code>.');\"},{\"text\":\"<code>countSubstring(\\\"abaabba*bbaba*bbab\\\", \\\"a*b\\\")</code> should return <code>2</code>.\",\"testString\":\"assert.equal(countSubstring(testCases[2], searchString[2]), results[2], '<code>countSubstring(\\\"abaabba*bbaba*bbab\\\", \\\"a*b\\\")</code> should return <code>2</code>.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function countSubstring (str, subStr) {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const testCases = ['the three truths', 'ababababab', 'abaabba*bbaba*bbab'];\\nconst searchString = ['th', 'abab', 'a*b'];\\nconst results = [3, 2, 2];\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/count-the-coins\",\"id\":\"596fda99c69f779975a1b67d\"},\"slug\":\"/coding-interview-prep/rosetta-code/count-occurrences-of-a-substring\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-count-occurrences-of-a-substring.json\n// module id = 3362\n// module chunks = 69134976795162"],"sourceRoot":""}