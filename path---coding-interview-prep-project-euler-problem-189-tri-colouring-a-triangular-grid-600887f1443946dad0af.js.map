{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-189-tri-colouring-a-triangular-grid-600887f1443946dad0af.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-189-tri-colouring-a-triangular-grid.json"],"names":["webpackJsonp","2960","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,+CAAAC,aAAA,krBAAAC,cAAA,EAAAC,QAAoxBC,KAAA,mFAAAC,UAAA,gBAAAC,QAAgIC,KAAA,2DAAAC,WAAA,oHAAkMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,iFAAAC,GAAA,4BAAkLrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-189-tri-colouring-a-triangular-grid-600887f1443946dad0af.js","sourcesContent":["webpackJsonp([184581033251115],{\n\n/***/ 2960:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 189: Tri-colouring a triangular grid\",\"description\":[\"Consider the following configuration of 64 triangles:\",\"\",\"\",\"\",\"We wish to colour the interior of each triangle with one of three colours: red, green or blue, so that no two neighbouring triangles have the same colour. Such a colouring shall be called valid. Here, two triangles are said to be neighbouring if they share an edge.\",\"Note: if they only share a vertex, then they are not neighbours. \",\"\",\"For example, here is a valid colouring of the above grid:\",\"\",\"\",\"A colouring C' which is obtained from a colouring C by rotation or reflection is considered distinct from C unless the two are identical.\",\"\",\"How many distinct valid colourings are there for the above configuration?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-189-tri-colouring-a-triangular-grid\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler189()</code> should return 10834893628237824.\",\"testString\":\"assert.strictEqual(euler189(), 10834893628237824, '<code>euler189()</code> should return 10834893628237824.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler189() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler189();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-190-maximising-a-weighted-product\",\"id\":\"5900f4291000cf542c50ff3c\"},\"slug\":\"/coding-interview-prep/project-euler/problem-189-tri-colouring-a-triangular-grid\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-189-tri-colouring-a-triangular-grid-600887f1443946dad0af.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 189: Tri-colouring a triangular grid\",\"description\":[\"Consider the following configuration of 64 triangles:\",\"\",\"\",\"\",\"We wish to colour the interior of each triangle with one of three colours: red, green or blue, so that no two neighbouring triangles have the same colour. Such a colouring shall be called valid. Here, two triangles are said to be neighbouring if they share an edge.\",\"Note: if they only share a vertex, then they are not neighbours. \",\"\",\"For example, here is a valid colouring of the above grid:\",\"\",\"\",\"A colouring C' which is obtained from a colouring C by rotation or reflection is considered distinct from C unless the two are identical.\",\"\",\"How many distinct valid colourings are there for the above configuration?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-189-tri-colouring-a-triangular-grid\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler189()</code> should return 10834893628237824.\",\"testString\":\"assert.strictEqual(euler189(), 10834893628237824, '<code>euler189()</code> should return 10834893628237824.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler189() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler189();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-190-maximising-a-weighted-product\",\"id\":\"5900f4291000cf542c50ff3c\"},\"slug\":\"/coding-interview-prep/project-euler/problem-189-tri-colouring-a-triangular-grid\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-189-tri-colouring-a-triangular-grid.json\n// module id = 2960\n// module chunks = 184581033251115"],"sourceRoot":""}