webpackJsonp([0xa8bbc75239a2],{4006:function(e,t){e.exports={data:{challengeNode:{title:"Reuse Patterns Using Capture Groups",description:["一些你所搜寻的匹配模式会在字符串中出现多次，手动重复该正则表达式太浪费了。有一种更好的方法可以指定何时在字符串中会有多个重复的子字符串。","你可以使用<code>捕获组</code>搜寻重复的子字符串。括号<code>(</code>和<code>)</code>可以用来匹配重复的子字符串。你只需要把重复匹配模式的正则表达式放在括号中即可。","要指定重复字符串将出现的位置，可以使用反斜杠（<code>\\</code>）后接一个数字。这个数字从 1 开始，随着你使用的每个捕获组的增加而增加。这里有一个示例，<code>\\1</code>可以匹配第一个组。","下面的示例匹配任意两个被空格分割的单词：",'<blockquote>let repeatStr = "regex regex";<br>let repeatRegex = /(\\w+)\\s\\1/;<br>repeatRegex.test(repeatStr); // Returns true<br>repeatStr.match(repeatRegex); // Returns ["regex regex", "regex"]</blockquote>',"在字符串上使用<code>.match()</code>方法将返回一个数组，其中包含它匹配的字符串及其捕获组。","<hr>","在正则表达式<code>reRegex</code>中使用<code>捕获组</code>，以匹配在字符串中仅重复三次的数字，每一个都由空格分隔。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/regular-expressions/reuse-patterns-using-capture-groups",blockName:"Regular Expressions",tests:[{text:"你的正则表达式应该使用数字的速记字符类。",testString:"assert(reRegex.source.match(/\\\\d/), '你的正则表达式应该使用数字的速记字符类。');"},{text:"你的正则表达式应该重用两次捕获组。",testString:"assert(reRegex.source.match(/\\\\\\d/g).length === 2, '你的正则表达式应该重用两次捕获组。');"},{text:"你的正则表达式应该有两个空格分隔这三个数字。",testString:"assert(reRegex.source.match(/\\\\s/g).length === 2, '你的正则表达式应该有两个空格分隔这三个数字。');"},{text:'你的正则表达式应该匹配<code>"42 42 42"</code>。',testString:'assert(reRegex.test("42 42 42"), \'你的正则表达式应该匹配<code>"42 42 42"</code>。\');'},{text:'你的正则表达式应该匹配<code>"100 100 100"</code>。',testString:'assert(reRegex.test("100 100 100"), \'你的正则表达式应该匹配<code>"100 100 100"</code>。\');'},{text:'你的正则表达式不应该匹配<code>"42 42 42 42"</code>。',testString:'assert.equal(("42 42 42 42").match(reRegex.source), null, \'你的正则表达式不应该匹配<code>"42 42 42 42"</code>。\');'},{text:'你的正则表达式不应该匹配<code>"42 42"</code>。',testString:'assert.equal(("42 42").match(reRegex.source), null, \'你的正则表达式不应该匹配<code>"42 42"</code>。\');'},{text:'你的正则表达式不应该匹配<code>"101 102 103"</code>。',testString:'assert(!reRegex.test("101 102 103"), \'你的正则表达式不应该匹配<code>"101 102 103"</code>。\');'},{text:'你的正则表达式不应该匹配<code>"1 2 3"</code>。',testString:'assert(!reRegex.test("1 2 3"), \'你的正则表达式不应该匹配<code>"1 2 3"</code>。\');'},{text:'你的正则表达式应该匹配<code>"10 10 10"</code>。',testString:'assert(reRegex.test("10 10 10"), \'你的正则表达式应该匹配<code>"10 10 10"</code>。\');'}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'let repeatNum = "42 42 42";\nlet reRegex = /change/; // 修改这一行\nlet result = reRegex.test(repeatNum);',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/regular-expressions/use-capture-groups-to-search-and-replace",id:"587d7dbb367417b2b2512baa"},slug:"/javascript-algorithms-and-data-structures/regular-expressions/reuse-patterns-using-capture-groups"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-regular-expressions-reuse-patterns-using-capture-groups-1735530dfd6d940403c7.js.map