webpackJsonp([8773383545196],{3981:function(e,t){e.exports={data:{challengeNode:{title:"Extract Matches",description:["到目前为止，你只是检查了一个匹配模式是否存在于字符串中。你还可以使用<code>.match()</code>方法来提取你找到的实际匹配项。","请使用字符串来调用<code>.match()</code>方法，并在括号内传入正则表达式。以下是一个示例：",'<blockquote>"Hello, World!".match(/Hello/);<br>// Returns ["Hello"]<br>let ourStr = "Regular expressions";<br>let ourRegex = /expressions/;<br>ourStr.match(ourRegex);<br>// Returns ["expressions"]</blockquote>',"<hr>","利用<code>.match()</code>方法提取单词<code>coding</code>。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/regular-expressions/extract-matches",blockName:"Regular Expressions",tests:[{text:"<code>结果</code>应该包含单词<code>coding</code>。",testString:"assert(result.join() === \"coding\", '<code>结果</code>应该包含单词<code>coding</code>。');"},{text:"你的正则表达式<code>codingRegex</code>应该搜寻<code>coding</code>。",testString:"assert(codingRegex.source === \"coding\", '你的正则表达式<code>codingRegex</code>应该搜寻<code>coding</code>。');"},{text:"你应该使用<code>.match()</code>方法。",testString:"assert(code.match(/\\.match\\(.*\\)/), '你应该使用<code>.match()</code>方法。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"let extractStr = \"Extract the word 'coding' from this string.\";\nlet codingRegex = /change/; // 修改这一行\nlet result = extractStr; // 修改这一行",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/regular-expressions/find-more-than-the-first-match",id:"587d7db4367417b2b2512b92"},slug:"/javascript-algorithms-and-data-structures/regular-expressions/extract-matches"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-regular-expressions-extract-matches-b1e144fd7e9b59702ad3.js.map