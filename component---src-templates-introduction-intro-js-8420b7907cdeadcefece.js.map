{"version":3,"sources":["webpack:///component---src-templates-introduction-intro-js-8420b7907cdeadcefece.js","webpack:///./~/react-bootstrap/lib/ListGroup.js","webpack:///./~/react-bootstrap/lib/ListGroupItem.js","webpack:///./~/react-bootstrap/lib/utils/ValidComponentChildren.js?14eb","webpack:///./src/components/Map/components/dict.json?bd7a","webpack:///./src/components/util/ButtonSpacer.js","webpack:///./src/components/util/FullWidthRow.js","webpack:///./src/templates/Introduction/Intro.js"],"names":["webpackJsonp","4402","module","exports","__webpack_require__","getDefaultComponent","children","_ValidComponentChildren","default","some","child","type","_ListGroupItem","props","href","onClick","_interopRequireWildcard","_interopRequireDefault","__esModule","_extends2","_objectWithoutPropertiesLoose2","_inheritsLoose2","_classnames","_react","_elementType","_bootstrapUtils","propTypes","componentClass","ListGroup","_React$Component","apply","this","arguments","_proto","prototype","render","_this$props","_this$props$component","Component","className","_splitBsProps","splitBsProps","bsProps","elementProps","classes","getClassSet","useListItem","every","createElement","map","cloneElement","listItem","_default","bsClass","729","_values","_propTypes","_StyleConfig","active","any","disabled","header","node","bool","func","string","defaultProps","ListGroupItem","renderHeader","headingClassName","isValidElement","prefix","bsStyles","State","498","context","index","Children","call","forEach","count","result","filter","push","find","toArray","181","english","chinese","914","obj","ButtonSpacer","_react2","displayName","375","FullWidthRow","_ref","_Row2","_Col2","sm","smOffset","xs","_propTypes2","_Row","_Col","PropTypes","1237","945","renderMenuItems","_ref$edges","edges","undefined","_ref2","_ref3","title","slug","fields","dict","item","_gatsbyLink2","key","to","_ListGroupItem2","handleCurriculumClick","_gatsbyLink","navigateTo","IntroductionPage","_ref4","_ref4$data","data","markdownRemark","allChallengeNode","html","block","frontmatter","firstLesson","firstLessonPath","Fragment","_reactHelmet2","_FullWidthRow2","dangerouslySetInnerHTML","__html","_ButtonSpacer2","_Button2","bsSize","_ListGroup2","query","_reactHelmet","_Button","_ListGroup","_FullWidthRow","_ButtonSpacer","_propTypes3","shape","MarkdownRemark","AllChallengeNode","1249"],"mappings":"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","file":"component---src-templates-introduction-intro-js-8420b7907cdeadcefece.js","sourcesContent":["webpackJsonp([125088136674209],{\n\n/***/ 4402:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequireWildcard = __webpack_require__(167);\n\t\n\tvar _interopRequireDefault = __webpack_require__(5);\n\t\n\texports.__esModule = true;\n\texports.default = void 0;\n\t\n\tvar _extends2 = _interopRequireDefault(__webpack_require__(8));\n\t\n\tvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(10));\n\t\n\tvar _inheritsLoose2 = _interopRequireDefault(__webpack_require__(6));\n\t\n\tvar _classnames = _interopRequireDefault(__webpack_require__(11));\n\t\n\tvar _react = _interopRequireWildcard(__webpack_require__(2));\n\t\n\tvar _elementType = _interopRequireDefault(__webpack_require__(17));\n\t\n\tvar _ListGroupItem = _interopRequireDefault(__webpack_require__(729));\n\t\n\tvar _bootstrapUtils = __webpack_require__(12);\n\t\n\tvar _ValidComponentChildren = _interopRequireDefault(__webpack_require__(498));\n\t\n\tvar propTypes = {\n\t  /**\n\t   * You can use a custom element type for this component.\n\t   *\n\t   * If not specified, it will be treated as `'li'` if every child is a\n\t   * non-actionable `<ListGroupItem>`, and `'div'` otherwise.\n\t   */\n\t  componentClass: _elementType.default\n\t};\n\t\n\tfunction getDefaultComponent(children) {\n\t  if (!children) {\n\t    // FIXME: This is the old behavior. Is this right?\n\t    return 'div';\n\t  }\n\t\n\t  if (_ValidComponentChildren.default.some(children, function (child) {\n\t    return child.type !== _ListGroupItem.default || child.props.href || child.props.onClick;\n\t  })) {\n\t    return 'div';\n\t  }\n\t\n\t  return 'ul';\n\t}\n\t\n\tvar ListGroup =\n\t/*#__PURE__*/\n\tfunction (_React$Component) {\n\t  (0, _inheritsLoose2.default)(ListGroup, _React$Component);\n\t\n\t  function ListGroup() {\n\t    return _React$Component.apply(this, arguments) || this;\n\t  }\n\t\n\t  var _proto = ListGroup.prototype;\n\t\n\t  _proto.render = function render() {\n\t    var _this$props = this.props,\n\t        children = _this$props.children,\n\t        _this$props$component = _this$props.componentClass,\n\t        Component = _this$props$component === void 0 ? getDefaultComponent(children) : _this$props$component,\n\t        className = _this$props.className,\n\t        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"children\", \"componentClass\", \"className\"]);\n\t\n\t    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n\t        bsProps = _splitBsProps[0],\n\t        elementProps = _splitBsProps[1];\n\t\n\t    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);\n\t\n\t    var useListItem = Component === 'ul' && _ValidComponentChildren.default.every(children, function (child) {\n\t      return child.type === _ListGroupItem.default;\n\t    });\n\t\n\t    return _react.default.createElement(Component, (0, _extends2.default)({}, elementProps, {\n\t      className: (0, _classnames.default)(className, classes)\n\t    }), useListItem ? _ValidComponentChildren.default.map(children, function (child) {\n\t      return (0, _react.cloneElement)(child, {\n\t        listItem: true\n\t      });\n\t    }) : children);\n\t  };\n\t\n\t  return ListGroup;\n\t}(_react.default.Component);\n\t\n\tListGroup.propTypes = propTypes;\n\t\n\tvar _default = (0, _bootstrapUtils.bsClass)('list-group', ListGroup);\n\t\n\texports.default = _default;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 729:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequireWildcard = __webpack_require__(167);\n\t\n\tvar _interopRequireDefault = __webpack_require__(5);\n\t\n\texports.__esModule = true;\n\texports.default = void 0;\n\t\n\tvar _values = _interopRequireDefault(__webpack_require__(193));\n\t\n\tvar _extends2 = _interopRequireDefault(__webpack_require__(8));\n\t\n\tvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(10));\n\t\n\tvar _inheritsLoose2 = _interopRequireDefault(__webpack_require__(6));\n\t\n\tvar _classnames = _interopRequireDefault(__webpack_require__(11));\n\t\n\tvar _react = _interopRequireWildcard(__webpack_require__(2));\n\t\n\tvar _propTypes = _interopRequireDefault(__webpack_require__(4));\n\t\n\tvar _bootstrapUtils = __webpack_require__(12);\n\t\n\tvar _StyleConfig = __webpack_require__(28);\n\t\n\tvar propTypes = {\n\t  active: _propTypes.default.any,\n\t  disabled: _propTypes.default.any,\n\t  header: _propTypes.default.node,\n\t  listItem: _propTypes.default.bool,\n\t  onClick: _propTypes.default.func,\n\t  href: _propTypes.default.string,\n\t  type: _propTypes.default.string\n\t};\n\tvar defaultProps = {\n\t  listItem: false\n\t};\n\t\n\tvar ListGroupItem =\n\t/*#__PURE__*/\n\tfunction (_React$Component) {\n\t  (0, _inheritsLoose2.default)(ListGroupItem, _React$Component);\n\t\n\t  function ListGroupItem() {\n\t    return _React$Component.apply(this, arguments) || this;\n\t  }\n\t\n\t  var _proto = ListGroupItem.prototype;\n\t\n\t  _proto.renderHeader = function renderHeader(header, headingClassName) {\n\t    if (_react.default.isValidElement(header)) {\n\t      return (0, _react.cloneElement)(header, {\n\t        className: (0, _classnames.default)(header.props.className, headingClassName)\n\t      });\n\t    }\n\t\n\t    return _react.default.createElement(\"h4\", {\n\t      className: headingClassName\n\t    }, header);\n\t  };\n\t\n\t  _proto.render = function render() {\n\t    var _this$props = this.props,\n\t        active = _this$props.active,\n\t        disabled = _this$props.disabled,\n\t        className = _this$props.className,\n\t        header = _this$props.header,\n\t        listItem = _this$props.listItem,\n\t        children = _this$props.children,\n\t        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"active\", \"disabled\", \"className\", \"header\", \"listItem\", \"children\"]);\n\t\n\t    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n\t        bsProps = _splitBsProps[0],\n\t        elementProps = _splitBsProps[1];\n\t\n\t    var classes = (0, _extends2.default)({}, (0, _bootstrapUtils.getClassSet)(bsProps), {\n\t      active: active,\n\t      disabled: disabled\n\t    });\n\t    var Component;\n\t\n\t    if (elementProps.href) {\n\t      Component = 'a';\n\t    } else if (elementProps.onClick) {\n\t      Component = 'button';\n\t      elementProps.type = elementProps.type || 'button';\n\t    } else if (listItem) {\n\t      Component = 'li';\n\t    } else {\n\t      Component = 'span';\n\t    }\n\t\n\t    elementProps.className = (0, _classnames.default)(className, classes); // TODO: Deprecate `header` prop.\n\t\n\t    if (header) {\n\t      return _react.default.createElement(Component, elementProps, this.renderHeader(header, (0, _bootstrapUtils.prefix)(bsProps, 'heading')), _react.default.createElement(\"p\", {\n\t        className: (0, _bootstrapUtils.prefix)(bsProps, 'text')\n\t      }, children));\n\t    }\n\t\n\t    return _react.default.createElement(Component, elementProps, children);\n\t  };\n\t\n\t  return ListGroupItem;\n\t}(_react.default.Component);\n\t\n\tListGroupItem.propTypes = propTypes;\n\tListGroupItem.defaultProps = defaultProps;\n\t\n\tvar _default = (0, _bootstrapUtils.bsClass)('list-group-item', (0, _bootstrapUtils.bsStyles)((0, _values.default)(_StyleConfig.State), ListGroupItem));\n\t\n\texports.default = _default;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequireDefault = __webpack_require__(5);\n\t\n\texports.__esModule = true;\n\texports.default = void 0;\n\t\n\tvar _react = _interopRequireDefault(__webpack_require__(2));\n\t\n\t// TODO: This module should be ElementChildren, and should use named exports.\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`,\n\t * but only maps over children that are \"valid components\".\n\t *\n\t * The mapFunction provided index will be normalised to the components mapped,\n\t * so an invalid component would not increase the index.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func.\n\t * @param {*} context Context for func.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction map(children, func, context) {\n\t  var index = 0;\n\t  return _react.default.Children.map(children, function (child) {\n\t    if (!_react.default.isValidElement(child)) {\n\t      return child;\n\t    }\n\t\n\t    return func.call(context, child, index++);\n\t  });\n\t}\n\t/**\n\t * Iterates through children that are \"valid components\".\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child with the index reflecting the position relative to \"valid components\".\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func.\n\t * @param {*} context Context for context.\n\t */\n\t\n\t\n\tfunction forEach(children, func, context) {\n\t  var index = 0;\n\t\n\t  _react.default.Children.forEach(children, function (child) {\n\t    if (!_react.default.isValidElement(child)) {\n\t      return;\n\t    }\n\t\n\t    func.call(context, child, index++);\n\t  });\n\t}\n\t/**\n\t * Count the number of \"valid components\" in the Children container.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @returns {number}\n\t */\n\t\n\t\n\tfunction count(children) {\n\t  var result = 0;\n\t\n\t  _react.default.Children.forEach(children, function (child) {\n\t    if (!_react.default.isValidElement(child)) {\n\t      return;\n\t    }\n\t\n\t    ++result;\n\t  });\n\t\n\t  return result;\n\t}\n\t/**\n\t * Finds children that are typically specified as `props.children`,\n\t * but only iterates over children that are \"valid components\".\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child with the index reflecting the position relative to \"valid components\".\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func.\n\t * @param {*} context Context for func.\n\t * @returns {array} of children that meet the func return statement\n\t */\n\t\n\t\n\tfunction filter(children, func, context) {\n\t  var index = 0;\n\t  var result = [];\n\t\n\t  _react.default.Children.forEach(children, function (child) {\n\t    if (!_react.default.isValidElement(child)) {\n\t      return;\n\t    }\n\t\n\t    if (func.call(context, child, index++)) {\n\t      result.push(child);\n\t    }\n\t  });\n\t\n\t  return result;\n\t}\n\t\n\tfunction find(children, func, context) {\n\t  var index = 0;\n\t  var result;\n\t\n\t  _react.default.Children.forEach(children, function (child) {\n\t    if (result) {\n\t      return;\n\t    }\n\t\n\t    if (!_react.default.isValidElement(child)) {\n\t      return;\n\t    }\n\t\n\t    if (func.call(context, child, index++)) {\n\t      result = child;\n\t    }\n\t  });\n\t\n\t  return result;\n\t}\n\t\n\tfunction every(children, func, context) {\n\t  var index = 0;\n\t  var result = true;\n\t\n\t  _react.default.Children.forEach(children, function (child) {\n\t    if (!result) {\n\t      return;\n\t    }\n\t\n\t    if (!_react.default.isValidElement(child)) {\n\t      return;\n\t    }\n\t\n\t    if (!func.call(context, child, index++)) {\n\t      result = false;\n\t    }\n\t  });\n\t\n\t  return result;\n\t}\n\t\n\tfunction some(children, func, context) {\n\t  var index = 0;\n\t  var result = false;\n\t\n\t  _react.default.Children.forEach(children, function (child) {\n\t    if (result) {\n\t      return;\n\t    }\n\t\n\t    if (!_react.default.isValidElement(child)) {\n\t      return;\n\t    }\n\t\n\t    if (func.call(context, child, index++)) {\n\t      result = true;\n\t    }\n\t  });\n\t\n\t  return result;\n\t}\n\t\n\tfunction toArray(children) {\n\t  var result = [];\n\t\n\t  _react.default.Children.forEach(children, function (child) {\n\t    if (!_react.default.isValidElement(child)) {\n\t      return;\n\t    }\n\t\n\t    result.push(child);\n\t  });\n\t\n\t  return result;\n\t}\n\t\n\tvar _default = {\n\t  map: map,\n\t  forEach: forEach,\n\t  count: count,\n\t  find: find,\n\t  filter: filter,\n\t  every: every,\n\t  some: some,\n\t  toArray: toArray\n\t};\n\texports.default = _default;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 181:\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"english\":\"Responsive Web Design\",\"chinese\":\"响应式 Web 设计\"},{\"english\":\"Javascript Algorithms And Data Structures\",\"chinese\":\"算法和数据结构\"},{\"english\":\"Front End Libraries\",\"chinese\":\"前端库和框架\"},{\"english\":\"Data Visualization\",\"chinese\":\"数据可视化\"},{\"english\":\"Apis And Microservices\",\"chinese\":\"API 和微服务\"},{\"english\":\"Information Security And Quality Assurance\",\"chinese\":\"信息安全和质量保证\"},{\"english\":\"Coding Interview Prep\",\"chinese\":\"面试攻略\"},{\"english\":\"Basic HTML and HTML5\",\"chinese\":\"HTML 基础\"},{\"english\":\"Basic CSS\",\"chinese\":\"CSS 基础\"},{\"english\":\"Applied Visual Design\",\"chinese\":\"应用视觉设计\"},{\"english\":\"Applied Accessibility\",\"chinese\":\"应用无障碍\"},{\"english\":\"Responsive Web Design Principles\",\"chinese\":\"响应式 Web 设计原则\"},{\"english\":\"CSS Flexbox\",\"chinese\":\"CSS 弹性盒子\"},{\"english\":\"CSS Grid\",\"chinese\":\"CSS 网格\"},{\"english\":\"Responsive Web Design Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Basic JavaScript\",\"chinese\":\"JavaScript 基础\"},{\"english\":\"ES6\",\"chinese\":\"ES6\"},{\"english\":\"Regular Expressions\",\"chinese\":\"正则表达式\"},{\"english\":\"Debugging\",\"chinese\":\"调试\"},{\"english\":\"Basic Data Structures\",\"chinese\":\"数据结构基础\"},{\"english\":\"Basic Algorithm Scripting\",\"chinese\":\"算法基础\"},{\"english\":\"Object Oriented Programming\",\"chinese\":\"面向对象编程\"},{\"english\":\"Functional Programming\",\"chinese\":\"函数式编程\"},{\"english\":\"Intermediate Algorithm Scripting\",\"chinese\":\"算法中级\"},{\"english\":\"JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Bootstrap\",\"chinese\":\"Bootstrap\"},{\"english\":\"jQuery\",\"chinese\":\"jQuery\"},{\"english\":\"Sass\",\"chinese\":\"Sass\"},{\"english\":\"React\",\"chinese\":\"React\"},{\"english\":\"Redux\",\"chinese\":\"Redux\"},{\"english\":\"React and Redux\",\"chinese\":\"React 和 Redux\"},{\"english\":\"Front End Libraries Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Data Visualization with D3\",\"chinese\":\"用 D3 实现数据可视化\"},{\"english\":\"JSON APIs and Ajax\",\"chinese\":\"JSON 和 Ajax\"},{\"english\":\"Data Visualization Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Managing Packages with Npm\",\"chinese\":\"用 Npm 来管理模块\"},{\"english\":\"Basic Node and Express\",\"chinese\":\"Node 和 Express 基础\"},{\"english\":\"MongoDB and Mongoose\",\"chinese\":\"MongoDB 和 Mongoose\"},{\"english\":\"Apis and Microservices Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Information Security with HelmetJS\",\"chinese\":\"信息安全——Helmet.js\"},{\"english\":\"Quality Assurance and Testing with Chai\",\"chinese\":\"质量保证和测试——Chai.js\"},{\"english\":\"Advanced Node and Express\",\"chinese\":\"Node 和 Express 高级\"},{\"english\":\"Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Algorithms\",\"chinese\":\"算法\"},{\"english\":\"Data Structures\",\"chinese\":\"数据结构\"},{\"english\":\"Take Home Projects\",\"chinese\":\"私人项目\"},{\"english\":\"Rosetta Code\",\"chinese\":\"罗塞塔代码\"},{\"english\":\"Project Euler\",\"chinese\":\"欧拉计划\"},{\"english\":\"Introduction to Basic HTML and HTML5\",\"chinese\":\"HTML 基础介绍\"},{\"english\":\"Say Hello to HTML Elements\",\"chinese\":\"向 HTML 元素问好\"},{\"english\":\"Headline with the h2 Element\",\"chinese\":\"用 h2 元素代表副标题\"},{\"english\":\"Inform with the Paragraph Element\",\"chinese\":\"用 p 元素代表段落\"},{\"english\":\"Fill in the Blank with Placeholder Text\",\"chinese\":\"用占位符文本填充空白\"},{\"english\":\"Uncomment HTML\",\"chinese\":\"去除 HTML 的注释\"},{\"english\":\"Comment out HTML\",\"chinese\":\"给 HTML 添加注释\"},{\"english\":\"Delete HTML Elements\",\"chinese\":\"删除 HTML 元素\"},{\"english\":\"Introduction to HTML5 Elements\",\"chinese\":\"HTML5 元素介绍\"},{\"english\":\"Add Images to Your Website\",\"chinese\":\"给网站添加图片\"},{\"english\":\"Link to External Pages with Anchor Elements\",\"chinese\":\"用锚点实现网页间的跳转\"},{\"english\":\"Link to Internal Sections of a Page with Anchor Elements\",\"chinese\":\"用锚点实现网页内部跳转\"},{\"english\":\"Nest an Anchor Element within a Paragraph\",\"chinese\":\"将锚点嵌套在段落中\"},{\"english\":\"Make Dead Links Using the Hash Symbol\",\"chinese\":\"用 # 号来创建固定链接\"},{\"english\":\"Turn an Image into a Link\",\"chinese\":\"给图片添加链接\"},{\"english\":\"Create a Bulleted Unordered List\",\"chinese\":\"创建一个无序列表\"},{\"english\":\"Create an Ordered List\",\"chinese\":\"创建一个有序列表\"},{\"english\":\"Create a Text Field\",\"chinese\":\"创建一个输入框\"},{\"english\":\"Add Placeholder Text to a Text Field\",\"chinese\":\"给输入框添加占位符文本\"},{\"english\":\"Create a Form Element\",\"chinese\":\"创建一个表单\"},{\"english\":\"Add a Submit Button to a Form\",\"chinese\":\"给表单添加提交按钮\"},{\"english\":\"Use HTML5 to Require a Field\",\"chinese\":\"给表单添加一个必填字段\"},{\"english\":\"Create a Set of Radio Buttons\",\"chinese\":\"创建一组单选按钮\"},{\"english\":\"Create a Set of Checkboxes\",\"chinese\":\"创建一组复选框\"},{\"english\":\"Check Radio Buttons and Checkboxes by Default\",\"chinese\":\"给单选按钮和复选框添加默认选中项\"},{\"english\":\"Nest Many Elements within a Single div Element\",\"chinese\":\"元素嵌套\"},{\"english\":\"Declare the Doctype of an HTML Document\",\"chinese\":\"声明 HTML 文档的文档类型\"},{\"english\":\"Define the Head and Body of an HTML Document\",\"chinese\":\"定义 HTML 文档的标题和正文\"},{\"english\":\"Introduction to Basic CSS\",\"chinese\":\"CSS 基础介绍\"},{\"english\":\"Change the Color of Text\",\"chinese\":\"更改文本的颜色\"},{\"english\":\"Use CSS Selectors to Style Elements\",\"chinese\":\"使用元素选择器来设置元素的样式\"},{\"english\":\"Use a CSS Class to Style an Element\",\"chinese\":\"使用 class 选择器设置单个元素的样式\"},{\"english\":\"Style Multiple Elements with a CSS Class\",\"chinese\":\"使用 class 选择器设置多个元素的样式\"},{\"english\":\"Change the Font Size of an Element\",\"chinese\":\"更改元素的字体大小\"},{\"english\":\"Set the Font Family of an Element\",\"chinese\":\"设置元素的字体家族\"},{\"english\":\"Import a Google Font\",\"chinese\":\"引入谷歌字体\"},{\"english\":\"Specify How Fonts Should Degrade\",\"chinese\":\"字体如何优雅降级\"},{\"english\":\"Size Your Images\",\"chinese\":\"调整图片的大小\"},{\"english\":\"Add Borders Around Your Elements\",\"chinese\":\"在元素周围添加边框\"},{\"english\":\"Add Rounded Corners with border-radius\",\"chinese\":\"用 border-radius 添加圆角边框\"},{\"english\":\"Make Circular Images with a border-radius\",\"chinese\":\"用 border-radius 制作圆形图片\"},{\"english\":\"Give a Background Color to a div Element\",\"chinese\":\"给 div 元素添加背景色\"},{\"english\":\"Set the id of an Element\",\"chinese\":\"设置元素的 id\"},{\"english\":\"Use an id Attribute to Style an Element\",\"chinese\":\"使用 id 属性来设定元素的样式\"},{\"english\":\"Adjust the Padding of an Element\",\"chinese\":\"调整元素的内边距\"},{\"english\":\"Adjust the Margin of an Element\",\"chinese\":\"调整元素的外边距\"},{\"english\":\"Add a Negative Margin to an Element\",\"chinese\":\"给元素添加负外边距\"},{\"english\":\"Add Different Padding to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的内边距\"},{\"english\":\"Add Different Margins to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的外边距\"},{\"english\":\"Use Clockwise Notation to Specify the Padding of an Element\",\"chinese\":\"使用顺时针方向指定元素的内边距\"},{\"english\":\"Use Clockwise Notation to Specify the Margin of an Element\",\"chinese\":\"使用顺时针方向指定元素的外边距\"},{\"english\":\"Use Attribute Selectors to Style Elements\",\"chinese\":\"使用属性选择器来设置元素的样式\"},{\"english\":\"Understand Absolute versus Relative Units\",\"chinese\":\"理解绝对单位与相对单位\"},{\"english\":\"Style the HTML Body Element\",\"chinese\":\"给 HTML 的 Body 元素添加样式\"},{\"english\":\"Inherit Styles from the Body Element\",\"chinese\":\"从 Body 元素继承样式\"},{\"english\":\"Prioritize One Style Over Another\",\"chinese\":\"样式中的优先级\"},{\"english\":\"Override Styles in Subsequent CSS\",\"chinese\":\"Class 选择器的优先级高于继承样式\"},{\"english\":\"Override Class Declarations by Styling ID Attributes\",\"chinese\":\"ID 选择器优先级高于 Class 选择器\"},{\"english\":\"Override Class Declarations with Inline Styles\",\"chinese\":\"内联样式的优先级高于 ID 选择器\"},{\"english\":\"Override All Other Styles by using Important\",\"chinese\":\"Important 的优先级最高\"},{\"english\":\"Use Hex Code for Specific Colors\",\"chinese\":\"使用十六进制编码获得指定颜色\"},{\"english\":\"Use Hex Code to Mix Colors\",\"chinese\":\"使用十六进制编码混合颜色\"},{\"english\":\"Use Abbreviated Hex Code\",\"chinese\":\"使用缩写的十六进制编码\"},{\"english\":\"Use RGB values to Color Elements\",\"chinese\":\"使用 RGB 值为元素上色\"},{\"english\":\"Use RGB to Mix Colors\",\"chinese\":\"使用 RGB 混合颜色\"},{\"english\":\"Use CSS Variables to change several elements at once\",\"chinese\":\"使用 CSS 变量一次更改多个元素\"},{\"english\":\"Create a custom CSS Variable\",\"chinese\":\"创建一个自定义的 CSS 变量\"},{\"english\":\"Use a custom CSS Variable\",\"chinese\":\"使用一个自定义的 CSS 变量\"},{\"english\":\"Attach a Fallback value to a CSS Variable\",\"chinese\":\"给 CSS 变量附加回退值\"},{\"english\":\"Cascading CSS variables\",\"chinese\":\"层级 CSS 变量\"},{\"english\":\"Change a variable for a specific area\",\"chinese\":\"更改特定区域的变量\"},{\"english\":\"Use a media query to change a variable\",\"chinese\":\"使用媒体查询更改变量\"},{\"english\":\"Introduction to the Applied Visual Design Challenges\",\"chinese\":\"应用视觉设计介绍\"},{\"english\":\"Create Visual Balance Using the text-align Property\",\"chinese\":\"使用 text-align 属性创建视觉平衡\"},{\"english\":\"Adjust the Width of an Element Using the width Property\",\"chinese\":\"使用 width 属性调整元素的宽度\"},{\"english\":\"Adjust the Height of an Element Using the height Property\",\"chinese\":\"使用 height 属性调整元素的宽度\"},{\"english\":\"Use the strong Tag to Make Text Bold\",\"chinese\":\"使用 strong 标签加粗文本\"},{\"english\":\"Use the u Tag to Underline Text\",\"chinese\":\"使用 u 标签给文本添加下划线\"},{\"english\":\"Use the em Tag to Italicize Text\",\"chinese\":\"使用 em 标签强调文本\"},{\"english\":\"Use the s Tag to Strikethrough Text\",\"chinese\":\"使用 s 标签给文本添加删除线\"},{\"english\":\"Create a Horizontal Line Using the hr Element\",\"chinese\":\"使用 hr 标签创建水平线\"},{\"english\":\"Adjust the background-color Property of Text\",\"chinese\":\"调整文本的背景色\"},{\"english\":\"Adjust the Size of a Header Versus a Paragraph Tag\",\"chinese\":\"调整标题与段落的大小\"},{\"english\":\"Add a box-shadow to a Card-like Element\",\"chinese\":\"给卡片元素添加 box-shadow\"},{\"english\":\"Decrease the Opacity of an Element\",\"chinese\":\"降低元素的 opactiy\"},{\"english\":\"Use the text-transform Property to Make Text Uppercase\",\"chinese\":\"使用 text-transform 属性给文本添加大写效果\"},{\"english\":\"Set the font-size for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-size\"},{\"english\":\"Set the font-weight for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-weight\"},{\"english\":\"Set the font-size of Paragraph Text\",\"chinese\":\"设置段落文本的 font-size\"},{\"english\":\"Set the line-height of Paragraphs\",\"chinese\":\"设置段落的 line-height\"},{\"english\":\"Adjust the Hover State of an Anchor Tag\",\"chinese\":\"调整锚点的悬停状态\"},{\"english\":\"Change an Element's Relative Position\",\"chinese\":\"更改元素的相对位置\"},{\"english\":\"Move a Relatively Positioned Element with CSS Offsets\",\"chinese\":\"使用 CSS 偏移移动相对定位的元素\"},{\"english\":\"Lock an Element to its Parent with Absolute Positioning\",\"chinese\":\"绝对定位的参照物是元素的父元素\"},{\"english\":\"Lock an Element to the Browser Window with Fixed Positioning\",\"chinese\":\"固定定位的参照物是浏览器的窗口\"},{\"english\":\"Push Elements Left or Right with the float Property\",\"chinese\":\"使用 float 属性将元素左浮动或右浮动\"},{\"english\":\"Change the Position of Overlapping Elements with the z-index Property\",\"chinese\":\"使用 z-index 属性更改重叠元素的位置\"},{\"english\":\"Center an Element Horizontally Using the margin Property\",\"chinese\":\"使用 margin 属性将元素水平居中\"},{\"english\":\"Learn about Complementary Colors\",\"chinese\":\"了解互补色\"},{\"english\":\"Learn about Tertiary Colors\",\"chinese\":\"了解三原色\"},{\"english\":\"Adjust the Color of Various Elements to Complementary Colors\",\"chinese\":\"将各种元素的颜色调整为互补色\"},{\"english\":\"Adjust the Hue of a Color\",\"chinese\":\"调整颜色的色相\"},{\"english\":\"Adjust the Tone of a Color\",\"chinese\":\"调整颜色的色调\"},{\"english\":\"Create a Gradual CSS Linear Gradient\",\"chinese\":\"创建一个 CSS 线性渐变\"},{\"english\":\"Use a CSS Linear Gradient to Create a Striped Element\",\"chinese\":\"使用 CSS 线性渐变创建条纹元素\"},{\"english\":\"Create Texture by Adding a Subtle Pattern as a Background Image\",\"chinese\":\"通过添加细微图案作为背景图像来创建纹理\"},{\"english\":\"Use the CSS Transform scale Property to Change the Size of an Element\",\"chinese\":\"使用 CSS Transform scale 属性可以更改元素的大小\"},{\"english\":\"Use the CSS Transform scale Property to Scale an Element on Hover\",\"chinese\":\"使用CSS Transform scale 属性在悬停时缩放元素\"},{\"english\":\"Use the CSS Transform Property skewX to Skew an Element Along the X-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿X轴倾斜元素\"},{\"english\":\"Use the CSS Transform Property skewY to Skew an Element Along the Y-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿Y轴倾斜元素\"},{\"english\":\"Create a Graphic Using CSS\",\"chinese\":\"使用 CSS 创建一个图形\"},{\"english\":\"Create a More Complex Shape Using CSS and HTML\",\"chinese\":\"使用 CSS 和 HTML 创建更复杂的形状\"},{\"english\":\"Learn How the CSS @keyframes and animation Properties Work\",\"chinese\":\"了解 CSS 的关键帧和动画是如何工作的\"},{\"english\":\"Use CSS Animation to Change the Hover State of a Button\",\"chinese\":\"使用CSS动画更改按钮的悬停状态\"},{\"english\":\"Modify Fill Mode of an Animation\",\"chinese\":\"修改动画的填充模式\"},{\"english\":\"Create Movement Using CSS Animation\",\"chinese\":\"使用 CSS 动画创建运动\"},{\"english\":\"Create Visual Direction by Fading an Element from Left to Right\",\"chinese\":\"通过从左到右淡化元素来创建视觉方向\"},{\"english\":\"Animate Elements Continually Using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作永不停止的动画\"},{\"english\":\"Make a CSS Heartbeat using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作 CSS 心跳\"},{\"english\":\"Animate Elements at Variable Rates\",\"chinese\":\"以可变速率来给元素添加动画\"},{\"english\":\"Animate Multiple Elements at Variable Rates\",\"chinese\":\"以可变速率来给多个元素添加动画\"},{\"english\":\"Change Animation Timing with Keywords\",\"chinese\":\"使用关键字更改动画定时器\"},{\"english\":\"Learn How Bezier Curves Work\",\"chinese\":\"学习贝塞尔曲线的原理\"},{\"english\":\"Use a Bezier Curve to Move a Graphic\",\"chinese\":\"使用贝塞尔曲线移动图形\"},{\"english\":\"Make Motion More Natural Using a Bezier Curve\",\"chinese\":\"使用贝塞尔曲线让运动更加自然\"},{\"english\":\"Introduction to the Applied Accessibility Challenges\",\"chinese\":\"应用无障碍介绍\"},{\"english\":\"Add a Text Alternative to Images for Visually Impaired Accessibility\",\"chinese\":\"为视觉受损的用户添加替代图像的文本\"},{\"english\":\"Know When Alt Text Should be Left Blank\",\"chinese\":\"知道 Alt 文本何时应该留空\"},{\"english\":\"Use Headings to Show Hierarchical Relationships of Content\",\"chinese\":\"使用标题显示内容的层次关系\"},{\"english\":\"Jump Straight to the Content Using the main Element\",\"chinese\":\"使用 main 元素包裹主题内容\"},{\"english\":\"Wrap Content in the article Element\",\"chinese\":\"使用 article 元素包裹文章内容\"},{\"english\":\"Make Screen Reader Navigation Easier with the header Landmark\",\"chinese\":\"使用 header 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the nav Landmark\",\"chinese\":\"使用 nav 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the footer Landmark\",\"chinese\":\"使用 footer 元素使屏幕阅读器更容易导航\"},{\"english\":\"Improve Accessibility of Audio Content with the audio Element\",\"chinese\":\"使用 audio 元素提高音频内容的可访问性\"},{\"english\":\"Improve Chart Accessibility with the figure Element\",\"chinese\":\"使用 figure 元素提高图表的可访问性\"},{\"english\":\"Improve Form Field Accessibility with the label Element\",\"chinese\":\"使用 label 元素提高表单的可访问性\"},{\"english\":\"Wrap Radio Buttons in a fieldset Element for Better Accessibility\",\"chinese\":\"将单选按钮包裹在 fieldset 元素中以获得更好的可访问性\"},{\"english\":\"Add an Accessible Date Picker\",\"chinese\":\"添加可访问的日期选择器\"},{\"english\":\"Standardize Times with the HTML5 datetime Attribute\",\"chinese\":\"使用 HTML5 的 datatime 属性标准化时间\"},{\"english\":\"Make Elements Only Visible to a Screen Reader by Using Custom CSS\",\"chinese\":\"使用自定义 CSS 让元素仅对屏幕阅读器可见\"},{\"english\":\"Improve Readability with High Contrast Text\",\"chinese\":\"使用高对比度文本提高可读性\"},{\"english\":\"Avoid Colorblindness Issues by Using Sufficient Contrast\",\"chinese\":\"通过使用充足的对比度避免色盲问题\"},{\"english\":\"Avoid Colorblindness Issues by Carefully Choosing Colors that Convey Information\",\"chinese\":\"通过仔细选择传达信息的颜色来避免色盲问题\"},{\"english\":\"Give Links Meaning by Using Descriptive Link Text\",\"chinese\":\"使用描述性链接文本赋予链接含义\"},{\"english\":\"Make Links Navigatable with HTML Access Keys\",\"chinese\":\"通过给元素添加 accesskey 属性来让用户可以在链接之间快速导航\"},{\"english\":\"Use tabindex to Add Keyboard Focus to an Element\",\"chinese\":\"使用 tabindex 将键盘焦点添加到元素中\"},{\"english\":\"Use tabindex to Specify the Order of Keyboard Focus for Several Elements\",\"chinese\":\"使用 tabindex 指定多个元素的键盘焦点顺序\"},{\"english\":\"Introduction to the Responsive Web Design Challenges\",\"chinese\":\"响应式 Web 设计介绍\"},{\"english\":\"Create a Media Query\",\"chinese\":\"创建一个媒介查询\"},{\"english\":\"Make an Image Responsive\",\"chinese\":\"使图片根据设备尺寸自如响应\"},{\"english\":\"Use a Retina Image for Higher Resolution Displays\",\"chinese\":\"针对高分辨率屏幕应使用视网膜图片\"},{\"english\":\"Make Typography Responsive\",\"chinese\":\"使排版根据设备尺寸自如响应\"},{\"english\":\"Introduction to the CSS Flexbox Challenges\",\"chinese\":\"CSS弹性盒子介绍\"},{\"english\":\"Use display: flex to Position Two Boxes\",\"chinese\":\"使用 display: flex 定位两个盒子\"},{\"english\":\"Add Flex Superpowers to the Tweet Embed\",\"chinese\":\"在推文中添加弹性盒子布局\"},{\"english\":\"Use the flex-direction Property to Make a Row\",\"chinese\":\"使用 flex-direction 属性创建一行\"},{\"english\":\"Apply the flex-direction Property to Create Rows in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多行\"},{\"english\":\"Use the flex-direction Property to Make a Column\",\"chinese\":\"使用 flex-direction 属性创建一列\"},{\"english\":\"Apply the flex-direction Property to Create a Column in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多列\"},{\"english\":\"Align Elements Using the justify-content Property\",\"chinese\":\"使用 justify-content 属性对齐元素\"},{\"english\":\"Use the justify-content Property in the Tweet Embed\",\"chinese\":\"在推文中使用 justify-content 属性\"},{\"english\":\"Align Elements Using the align-items Property\",\"chinese\":\"使用 align-items 属性对齐元素\"},{\"english\":\"Use the align-items Property in the Tweet Embed\",\"chinese\":\"在推文中使用 align-items 属性\"},{\"english\":\"Use the flex-wrap Property to Wrap a Row or Column\",\"chinese\":\"使用 flex-wrap 属性包裹一行或一列\"},{\"english\":\"Use the flex-shrink Property to Shrink Items\",\"chinese\":\"使用 flex-shrink 属性收缩项目\"},{\"english\":\"Use the flex-grow Property to Expand Items\",\"chinese\":\"使用 flex-shrink 属性扩展项目\"},{\"english\":\"Use the flex-basis Property to Set the Initial Size of an Item\",\"chinese\":\"使用 flex-basic 属性设置项目的初始大小\"},{\"english\":\"Use the flex Shorthand Property\",\"chinese\":\"使用 flex 短方法属性\"},{\"english\":\"Use the order Property to Rearrange Items\",\"chinese\":\"使用 order 属性重新排列项目\"},{\"english\":\"Use the align-self Property\",\"chinese\":\"使用 align-self 属性\"},{\"english\":\"Introduction to the CSS Grid Challenges\",\"chinese\":\"CSS 网格介绍\"},{\"english\":\"Create Your First CSS Grid\",\"chinese\":\"创建你的第一个 CSS 网格\"},{\"english\":\"Add Columns with grid-template-columns\",\"chinese\":\"使用 grid-template-columns 添加多列\"},{\"english\":\"Add Rows with grid-template-rows\",\"chinese\":\"使用 grid-template-rows 添加多行\"},{\"english\":\"Use CSS Grid units to Change the Size of Columns and Rows\",\"chinese\":\"使用 CSS 网格单位来更改列和行的大小\"},{\"english\":\"Create a Column Gap Using grid-column-gap\",\"chinese\":\"使用 grid-column-gap 创建多列之间的间距\"},{\"english\":\"Create a Row Gap using grid-row-gap\",\"chinese\":\"使用 grid-row-gap 创建多行之间的间距\"},{\"english\":\"Add Gaps Faster with grid-gap\",\"chinese\":\"使用 grid-gap 更快地添加间距\"},{\"english\":\"Use grid-column to Control Spacing\",\"chinese\":\"使用 grid-column 来控制剩余部分\"},{\"english\":\"Use grid-row to Control Spacing\",\"chinese\":\"使用 grid-row 来控制剩余部分\"},{\"english\":\"Align an Item Horizontally using justify-self\",\"chinese\":\"使用 justify-self 水平对齐项目\"},{\"english\":\"Align an Item Vertically using align-self\",\"chinese\":\"使用 align-self 垂直对齐项目\"},{\"english\":\"Align All Items Horizontally using justify-items\",\"chinese\":\"使用 justify-items 水平对齐所有项目\"},{\"english\":\"Align All Items Vertically using align-items\",\"chinese\":\"使用 align-items 垂直对齐所有项目\"},{\"english\":\"Divide the Grid Into an Area Template\",\"chinese\":\"将网格划分为区域模板\"},{\"english\":\"Place Items in Grid Areas Using the grid-area Property\",\"chinese\":\"使用 grid-area 属性将项目放置在网格区域中\"},{\"english\":\"Use grid-area Without Creating an Areas Template\",\"chinese\":\"使用 grid-area 创建区域模板\"},{\"english\":\"Reduce Repetition Using the repeat Function\",\"chinese\":\"使用 repeat 函数减少重复\"},{\"english\":\"Limit Item Size Using the minmax Function\",\"chinese\":\"使用 minmax 函数限制项目大小\"},{\"english\":\"Create Flexible Layouts Using auto-fill\",\"chinese\":\"使用 auto-fill 创建弹性布局\"},{\"english\":\"Create Flexible Layouts Using auto-fit\",\"chinese\":\"使用 auto-fit 创建弹性布局\"},{\"english\":\"Use Media Queries to Create Responsive Layouts\",\"chinese\":\"使用媒体查询创建响应式布局\"},{\"english\":\"Create Grids within Grids\",\"chinese\":\"在网格中创建网格\"},{\"english\":\"Introduction to the Responsive Web Design Projects\",\"chinese\":\"响应式 Web 设计项目介绍\"},{\"english\":\"Build a Tribute Page\",\"chinese\":\"制作一个致敬页\"},{\"english\":\"Build a Survey Form\",\"chinese\":\"制作一个调查表格\"},{\"english\":\"Build a Product Landing Page\",\"chinese\":\"制作一个产品登录页\"},{\"english\":\"Build a Technical Documentation Page\",\"chinese\":\"制作一个技术文档页面\"},{\"english\":\"Build a Personal Portfolio Webpage\",\"chinese\":\"制作一个个人作品集网页\"},{\"english\":\"Introduction to JavaScript\",\"chinese\":\"JavaScript 介绍\"},{\"english\":\"Comment Your JavaScript Code\",\"chinese\":\"给代码添加注释\"},{\"english\":\"Declare JavaScript Variables\",\"chinese\":\"声明变量\"},{\"english\":\"Storing Values with the Assignment Operator\",\"chinese\":\"使用赋值运算符存储值\"},{\"english\":\"Initializing Variables with the Assignment Operator\",\"chinese\":\"使用赋值运算符初始化变量\"},{\"english\":\"Understanding Uninitialized Variables\",\"chinese\":\"理解未初始化的变量\"},{\"english\":\"Understanding Case Sensitivity in Variables\",\"chinese\":\"了解变量名区分大小写\"},{\"english\":\"Add Two Numbers with JavaScript\",\"chinese\":\"加法运算\"},{\"english\":\"Subtract One Number from Another with JavaScript\",\"chinese\":\"减法运算\"},{\"english\":\"Multiply Two Numbers with JavaScript\",\"chinese\":\"乘法运算\"},{\"english\":\"Divide One Number by Another with JavaScript\",\"chinese\":\"除法运算\"},{\"english\":\"Increment a Number with JavaScript\",\"chinese\":\"数字递增\"},{\"english\":\"Decrement a Number with JavaScript\",\"chinese\":\"数字递减\"},{\"english\":\"Create Decimal Numbers with JavaScript\",\"chinese\":\"创建一个小数\"},{\"english\":\"Multiply Two Decimals with JavaScript\",\"chinese\":\"两个小数相乘\"},{\"english\":\"Divide One Decimal by Another with JavaScript\",\"chinese\":\"两个小数相除\"},{\"english\":\"Finding a Remainder in JavaScript\",\"chinese\":\"求余运算\"},{\"english\":\"Compound Assignment With Augmented Addition\",\"chinese\":\"复合赋值之 +=\"},{\"english\":\"Compound Assignment With Augmented Subtraction\",\"chinese\":\"复合赋值之 -=\"},{\"english\":\"Compound Assignment With Augmented Multiplication\",\"chinese\":\"复合赋值之 *=\"},{\"english\":\"Compound Assignment With Augmented Division\",\"chinese\":\"复合赋值之 /=\"},{\"english\":\"Declare String Variables\",\"chinese\":\"声明字符串变量\"},{\"english\":\"Escaping Literal Quotes in Strings\",\"chinese\":\"转义字符串中的引号\"},{\"english\":\"Quoting Strings with Single Quotes\",\"chinese\":\"用单引号引用字符串\"},{\"english\":\"Escape Sequences in Strings\",\"chinese\":\"字符串中的转义序列\"},{\"english\":\"Concatenating Strings with Plus Operator\",\"chinese\":\"用加号运算符连接字符串\"},{\"english\":\"Concatenating Strings with the Plus Equals Operator\",\"chinese\":\"用 += 运算符连接字符串\"},{\"english\":\"Constructing Strings with Variables\",\"chinese\":\"用变量构造字符串\"},{\"english\":\"Appending Variables to Strings\",\"chinese\":\"将变量附加到字符串\"},{\"english\":\"Find the Length of a String\",\"chinese\":\"查找字符串的长度\"},{\"english\":\"Use Bracket Notation to Find the First Character in a String\",\"chinese\":\"使用方括号查找字符串中的第一个字符\"},{\"english\":\"Understand String Immutability\",\"chinese\":\"了解字符串的不变性\"},{\"english\":\"Use Bracket Notation to Find the Nth Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符\"},{\"english\":\"Use Bracket Notation to Find the Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的最后一个字符\"},{\"english\":\"Use Bracket Notation to Find the Nth-to-Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符到最后一个字符\"},{\"english\":\"Word Blanks\",\"chinese\":\"填词造句\"},{\"english\":\"Store Multiple Values in one Variable using JavaScript Arrays\",\"chinese\":\"使用 JavaScript 数组将多个值存储在一个变量中\"},{\"english\":\"Nest one Array within Another Array\",\"chinese\":\"将一个数组嵌套在另一个数组中\"},{\"english\":\"Access Array Data with Indexes\",\"chinese\":\"通过索引访问数组中的数据\"},{\"english\":\"Modify Array Data With Indexes\",\"chinese\":\"通过索引修改数组中的数据\"},{\"english\":\"Access Multi-Dimensional Arrays With Indexes\",\"chinese\":\"使用索引访问多维数组\"},{\"english\":\"Manipulate Arrays With push()\",\"chinese\":\"使用 push() 操作数组\"},{\"english\":\"Manipulate Arrays With pop()\",\"chinese\":\"使用 pop() 操作数组\"},{\"english\":\"Manipulate Arrays With shift()\",\"chinese\":\"使用 shift() 操作数组\"},{\"english\":\"Manipulate Arrays With unshift()\",\"chinese\":\"使用 unshift() 操作数组\"},{\"english\":\"Shopping List\",\"chinese\":\"购物清单\"},{\"english\":\"Write Reusable JavaScript with Functions\",\"chinese\":\"用函数编写可重用代码\"},{\"english\":\"Passing Values to Functions with Arguments\",\"chinese\":\"将值传递给带有参数的函数\"},{\"english\":\"Global Scope and Functions\",\"chinese\":\"全局作用域和函数\"},{\"english\":\"Local Scope and Functions\",\"chinese\":\"局部作用域和函数\"},{\"english\":\"Global vs. Local Scope in Functions\",\"chinese\":\"函数中的全局作用域和局部作用域\"},{\"english\":\"Return a Value from a Function with Return\",\"chinese\":\"函数可以返回某个值\"},{\"english\":\"Understanding Undefined Value returned from a Function\",\"chinese\":\"函数也可以返回 undefined\"},{\"english\":\"Assignment with a Returned Value\",\"chinese\":\"用返回值来赋值\"},{\"english\":\"Stand in Line\",\"chinese\":\"排队\"},{\"english\":\"Understanding Boolean Values\",\"chinese\":\"理解布尔值\"},{\"english\":\"Use Conditional Logic with If Statements\",\"chinese\":\"用 if 语句来表达条件逻辑\"},{\"english\":\"Comparison with the Equality Operator\",\"chinese\":\"相等运算符\"},{\"english\":\"Comparison with the Strict Equality Operator\",\"chinese\":\"严格相等运算符\"},{\"english\":\"Practice comparing different values\",\"chinese\":\"比较不同值\"},{\"english\":\"Comparison with the Inequality Operator\",\"chinese\":\"不等运算符\"},{\"english\":\"Comparison with the Strict Inequality Operator\",\"chinese\":\"严格不等运算符\"},{\"english\":\"Comparison with the Greater Than Operator\",\"chinese\":\"大于运算符\"},{\"english\":\"Comparison with the Greater Than Or Equal To Operator\",\"chinese\":\"大于或等于运算符\"},{\"english\":\"Comparison with the Less Than Operator\",\"chinese\":\"小于运算符\"},{\"english\":\"Comparison with the Less Than Or Equal To Operator\",\"chinese\":\"小于或等于运算符\"},{\"english\":\"Comparisons with the Logical And Operator\",\"chinese\":\"逻辑与运算符\"},{\"english\":\"Comparisons with the Logical Or Operator\",\"chinese\":\"逻辑或运算符\"},{\"english\":\"Introducing Else Statements\",\"chinese\":\"介绍 else 语句\"},{\"english\":\"Introducing Else If Statements\",\"chinese\":\"介绍 else if 语句\"},{\"english\":\"Logical Order in If Else Statements\",\"chinese\":\"if else 语句中的逻辑顺序\"},{\"english\":\"Chaining If Else Statements\",\"chinese\":\"多个 if else 语句\"},{\"english\":\"Golf Code\",\"chinese\":\"高尔夫代码\"},{\"english\":\"Selecting from Many Options with Switch Statements\",\"chinese\":\"使用 Switch 语句从许多选项中进行选择\"},{\"english\":\"Adding a Default Option in Switch Statements\",\"chinese\":\"在 Switch 语句中添加默认选项\"},{\"english\":\"Multiple Identical Options in Switch Statements\",\"chinese\":\"在 Switch 语句添加多个相同选项\"},{\"english\":\"Replacing If Else Chains with Switch\",\"chinese\":\"用一个 Switch 语句来替代多个 if else 语句\"},{\"english\":\"Returning Boolean Values from Functions\",\"chinese\":\"从函数返回布尔值\"},{\"english\":\"Return Early Pattern for Functions\",\"chinese\":\"函数执行到 return 语句就结束\"},{\"english\":\"Counting Cards\",\"chinese\":\"21点游戏\"},{\"english\":\"Build JavaScript Objects\",\"chinese\":\"新建 JavaScript 对象\"},{\"english\":\"Accessing Object Properties with Dot Notation\",\"chinese\":\"通过点符号访问对象属性\"},{\"english\":\"Accessing Object Properties with Bracket Notation\",\"chinese\":\"通过方括号访问对象属性\"},{\"english\":\"Accessing Object Properties with Variables\",\"chinese\":\"通过变量访问对象属性\"},{\"english\":\"Updating Object Properties\",\"chinese\":\"更新对象属性\"},{\"english\":\"Add New Properties to a JavaScript Object\",\"chinese\":\"给对象添加新属性\"},{\"english\":\"Delete Properties from a JavaScript Object\",\"chinese\":\"删除对象的属性\"},{\"english\":\"Using Objects for Lookups\",\"chinese\":\"使用对象进行查找\"},{\"english\":\"Testing Objects for Properties\",\"chinese\":\"测试对象的属性\"},{\"english\":\"Manipulating Complex Objects\",\"chinese\":\"操作复杂对象\"},{\"english\":\"Accessing Nested Objects\",\"chinese\":\"访问嵌套对象\"},{\"english\":\"Accessing Nested Arrays\",\"chinese\":\"访问嵌套数组\"},{\"english\":\"Record Collection\",\"chinese\":\"记录集合\"},{\"english\":\"Iterate with JavaScript While Loops\",\"chinese\":\"while 循环\"},{\"english\":\"Iterate with JavaScript For Loops\",\"chinese\":\"for 循环\"},{\"english\":\"Iterate Odd Numbers With a For Loop\",\"chinese\":\"使用 For 循环遍历数组的奇数\"},{\"english\":\"Count Backwards With a For Loop\",\"chinese\":\"使用 For 循环反向遍历数组\"},{\"english\":\"Iterate Through an Array with a For Loop\",\"chinese\":\"使用 For 循环遍历数组\"},{\"english\":\"Nesting For Loops\",\"chinese\":\"循环嵌套\"},{\"english\":\"Iterate with JavaScript Do...While Loops\",\"chinese\":\"do...while 循环\"},{\"english\":\"Profile Lookup\",\"chinese\":\"资料查找\"},{\"english\":\"Generate Random Fractions with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机分数\"},{\"english\":\"Generate Random Whole Numbers with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机整数\"},{\"english\":\"Generate Random Whole Numbers within a Range\",\"chinese\":\"生成某个范围内的随机整数\"},{\"english\":\"Use the parseInt Function\",\"chinese\":\"使用 parseInt 函数\"},{\"english\":\"Use the parseInt Function with a Radix\",\"chinese\":\"使用 parseInt 函数并传入一个基数\"},{\"english\":\"Use the Conditional (Ternary) Operator\",\"chinese\":\"使用三元运算符\"},{\"english\":\"Use Multiple Conditional (Ternary) Operators\",\"chinese\":\"使用多个三元运算符\"},{\"english\":\"Introduction to the ES6 Challenges\",\"chinese\":\"ES6介绍\"},{\"english\":\"Explore Differences Between the var and let Keywords\",\"chinese\":\"探索 var 和 let 关键字之间的差异\"},{\"english\":\"Compare Scopes of the var and let Keywords\",\"chinese\":\"比较 var 和 let 关键字的作用域\"},{\"english\":\"Declare a Read-Only Variable with the const Keyword\",\"chinese\":\"用 const 关键字声明只读变量\"},{\"english\":\"Mutate an Array Declared with const\",\"chinese\":\"改变一个用 const 声明的数组\"},{\"english\":\"Prevent Object Mutation\",\"chinese\":\"防止对象改变\"},{\"english\":\"Use Arrow Functions to Write Concise Anonymous Functions\",\"chinese\":\"使用箭头函数编写简洁的匿名函数\"},{\"english\":\"Write Arrow Functions with Parameters\",\"chinese\":\"编写带参数的箭头函数\"},{\"english\":\"Write Higher Order Arrow Functions\",\"chinese\":\"编写高阶箭头函数\"},{\"english\":\"Set Default Parameters for Your Functions\",\"chinese\":\"设置函数的默认参数\"},{\"english\":\"Use the Rest Operator with Function Parameters\",\"chinese\":\"将 rest 操作符与函数参数一起使用\"},{\"english\":\"Use the Spread Operator to Evaluate Arrays In-Place\",\"chinese\":\"使用 spread 运算符展开数组项\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Objects\",\"chinese\":\"使用解构赋值从对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Nested Objects\",\"chinese\":\"使用解构赋值从嵌套对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Arrays\",\"chinese\":\"使用解构赋值从数组中分配变量\"},{\"english\":\"Use Destructuring Assignment with the Rest Operator to Reassign Array Elements\",\"chinese\":\"使用解构赋值配合 rest 操作符来重新分配数组元素\"},{\"english\":\"Use Destructuring Assignment to Pass an Object as a Function's Parameters\",\"chinese\":\"使用解构赋值将对象作为函数的参数传递\"},{\"english\":\"Create Strings using Template Literals\",\"chinese\":\"使用模板字面量创建字符串\"},{\"english\":\"Write Concise Object Literal Declarations Using Simple Fields\",\"chinese\":\"使用简单字段编写简洁的对象字面量声明\"},{\"english\":\"Write Concise Declarative Functions with ES6\",\"chinese\":\"用 ES6 编写简洁的函数声明\"},{\"english\":\"Use class Syntax to Define a Constructor Function\",\"chinese\":\"使用 class 语法定义构造函数\"},{\"english\":\"Use getters and setters to Control Access to an Object\",\"chinese\":\"使用 getter 和 setter 来控制对象的访问\"},{\"english\":\"Understand the Differences Between import and require\",\"chinese\":\"了解 import 和 require 之间的差异\"},{\"english\":\"Use export to Reuse a Code Block\",\"chinese\":\"用 export 来重用代码块\"},{\"english\":\"Use * to Import Everything from a File\",\"chinese\":\"用 * 从文件中导入所有内容\"},{\"english\":\"Create an Export Fallback with export default\",\"chinese\":\"用 export default 创建一个默认导出\"},{\"english\":\"Import a Default Export\",\"chinese\":\"导入一个默认的导出\"},{\"english\":\"Introduction to the Regular Expression Challenges\",\"chinese\":\"正则表达式介绍\"},{\"english\":\"Using the Test Method\",\"chinese\":\"使用测试方法\"},{\"english\":\"Match Literal Strings\",\"chinese\":\"匹配文字字符串\"},{\"english\":\"Match a Literal String with Different Possibilities\",\"chinese\":\"同时用多种模式匹配文字字符串\"},{\"english\":\"Ignore Case While Matching\",\"chinese\":\"匹配时忽略大小写\"},{\"english\":\"Extract Matches\",\"chinese\":\"提取匹配项\"},{\"english\":\"Find More Than the First Match\",\"chinese\":\"全局匹配\"},{\"english\":\"Match Anything with Wildcard Period\",\"chinese\":\"用通配符.匹配任何内容\"},{\"english\":\"Match Single Character with Multiple Possibilities\",\"chinese\":\"将单个字符与多种可能性匹配\"},{\"english\":\"Match Letters of the Alphabet\",\"chinese\":\"匹配字母表中的字母\"},{\"english\":\"Match Numbers and Letters of the Alphabet\",\"chinese\":\"匹配字母表中的数字和字母\"},{\"english\":\"Match Single Characters Not Specified\",\"chinese\":\"匹配单个未指定的字符\"},{\"english\":\"Match Characters that Occur One or More Times\",\"chinese\":\"匹配出现一次或多次的字符\"},{\"english\":\"Match Characters that Occur Zero or More Times\",\"chinese\":\"匹配出现零次或多次的字符\"},{\"english\":\"Find Characters with Lazy Matching\",\"chinese\":\"用惰性匹配来查找字符\"},{\"english\":\"Find One or More Criminals in a Hunt\",\"chinese\":\"在狩猎中找到一个或多个罪犯\"},{\"english\":\"Match Beginning String Patterns\",\"chinese\":\"匹配字符串的开头\"},{\"english\":\"Match Ending String Patterns\",\"chinese\":\"匹配字符串的末尾\"},{\"english\":\"Match All Letters and Numbers\",\"chinese\":\"匹配所有的字母和数字\"},{\"english\":\"Match Everything But Letters and Numbers\",\"chinese\":\"匹配除了字母和数字的所有符号\"},{\"english\":\"Match All Numbers\",\"chinese\":\"匹配所有数字\"},{\"english\":\"Match All Non-Numbers\",\"chinese\":\"匹配所有非数字\"},{\"english\":\"Restrict Possible Usernames\",\"chinese\":\"限制可能的用户名\"},{\"english\":\"Match Whitespace\",\"chinese\":\"匹配空白字符\"},{\"english\":\"Match Non-Whitespace Characters\",\"chinese\":\"匹配非空白字符\"},{\"english\":\"Specify Upper and Lower Number of Matches\",\"chinese\":\"指定匹配的上限和下限\"},{\"english\":\"Specify Only the Lower Number of Matches\",\"chinese\":\"只指定匹配的下限\"},{\"english\":\"Specify Exact Number of Matches\",\"chinese\":\"指定匹配的确切数量\"},{\"english\":\"Check for All or None\",\"chinese\":\"检查全部或无\"},{\"english\":\"Positive and Negative Lookahead\",\"chinese\":\"正向先行断言和负向先行断言\"},{\"english\":\"Reuse Patterns Using Capture Groups\",\"chinese\":\"使用捕获组重用模式\"},{\"english\":\"Use Capture Groups to Search and Replace\",\"chinese\":\"使用捕获组搜索和替换\"},{\"english\":\"Remove Whitespace from Start and End\",\"chinese\":\"删除开头和结尾的空白\"},{\"english\":\"Introduction to the Debugging Challenges\",\"chinese\":\"调试介绍\"},{\"english\":\"Use the JavaScript Console to Check the Value of a Variable\",\"chinese\":\"使用控制台检查变量值\"},{\"english\":\"Understanding the Differences between the freeCodeCamp and Browser Console\",\"chinese\":\"了解 freeCodeCamp 和浏览器控制台之间的差异\"},{\"english\":\"Use typeof to Check the Type of a Variable\",\"chinese\":\"使用 type of 检查变量的类型\"},{\"english\":\"Catch Misspelled Variable and Function Names\",\"chinese\":\"捕获拼错的变量名和函数名\"},{\"english\":\"Catch Unclosed Parentheses, Brackets, Braces and Quotes\",\"chinese\":\"捕获未闭合的括号、方括号、大括号和引号\"},{\"english\":\"Catch Mixed Usage of Single and Double Quotes\",\"chinese\":\"捕捉单引号和双引号的混合用法\"},{\"english\":\"Catch Use of Assignment Operator Instead of Equality Operator\",\"chinese\":\"捕获使用赋值运算符而不是相等运算符\"},{\"english\":\"Catch Missing Open and Closing Parenthesis After a Function Call\",\"chinese\":\"捕捉函数调用后缺少的左括号和右括号\"},{\"english\":\"Catch Arguments Passed in the Wrong Order When Calling a Function\",\"chinese\":\"调用函数时，捕获以错误顺序传递的参数\"},{\"english\":\"Catch Off By One Errors When Using Indexing\",\"chinese\":\"捕获使用索引的时候出现的错误\"},{\"english\":\"Use Caution When Reinitializing Variables Inside a Loop\",\"chinese\":\"重新初始化循环中的变量时要小心\"},{\"english\":\"Prevent Infinite Loops with a Valid Terminal Condition\",\"chinese\":\"使用有效的终止条件防止无限循环\"},{\"english\":\"Introduction to the Basic Data Structure Challenges\",\"chinese\":\"数据结构基础介绍\"},{\"english\":\"Use an Array to Store a Collection of Data\",\"chinese\":\"使用数组存储数据集合\"},{\"english\":\"Access an Array's Contents Using Bracket Notation\",\"chinese\":\"使用方括号访问数组的内容\"},{\"english\":\"Add Items to an Array with push() and unshift()\",\"chinese\":\"使用 push() 和 unshift() 添加项目到数组中\"},{\"english\":\"Remove Items from an Array with pop() and shift()\",\"chinese\":\"使用 pop() 和 shift() 从数组中删除项目\"},{\"english\":\"Remove Items Using splice()\",\"chinese\":\"使用 splice() 删除项目\"},{\"english\":\"Add Items Using splice()\",\"chinese\":\"使用 splice() 增加项目\"},{\"english\":\"Copy Array Items Using slice()\",\"chinese\":\"使用 slice() 拷贝数组项目\"},{\"english\":\"Copy an Array with the Spread Operator\",\"chinese\":\"使用扩展运算符复制数组\"},{\"english\":\"Combine Arrays with the Spread Operator\",\"chinese\":\"组合使用数组和扩展运算符\"},{\"english\":\"Check For The Presence of an Element With indexOf()\",\"chinese\":\"使用 indexOf() 检查元素是否存在\"},{\"english\":\"Iterate Through All an Array's Items Using For Loops\",\"chinese\":\"使用 For 循环迭代数组的所有项\"},{\"english\":\"Create complex multi-dimensional arrays\",\"chinese\":\"创建复杂的多维数组\"},{\"english\":\"Add Key-Value Pairs to JavaScript Objects\",\"chinese\":\"将键值对添加到对象中\"},{\"english\":\"Modify an Object Nested Within an Object\",\"chinese\":\"修改嵌套在对象中的对象\"},{\"english\":\"Access Property Names with Bracket Notation\",\"chinese\":\"使用方括号访问属性名称\"},{\"english\":\"Use the delete Keyword to Remove Object Properties\",\"chinese\":\"使用 delete 关键字删除对象属性\"},{\"english\":\"Check if an Object has a Property\",\"chinese\":\"检查对象是否具有某个属性\"},{\"english\":\" Iterate Through the Keys of an Object with a for...in Statement\",\"chinese\":\"使用 for...in 语句迭代对象\"},{\"english\":\"Generate an Array of All Object Keys with Object.keys()\",\"chinese\":\"使用 Object.Keys() 生成对象所有键组成的数组\"},{\"english\":\"Modify an Array Stored in an Object\",\"chinese\":\"修改存储在对象中的数组\"},{\"english\":\"Introduction to Basic Algorithm Scripting\",\"chinese\":\"算法基础介绍\"},{\"english\":\"Convert Celsius to Fahrenheit\",\"chinese\":\"将摄氏温度转换成华氏温度\"},{\"english\":\"Reverse a String\",\"chinese\":\"翻转字符串\"},{\"english\":\"Factorialize a Number\",\"chinese\":\"数字的阶乘\"},{\"english\":\"Find the Longest Word in a String\",\"chinese\":\"查找字符串中最长的单词\"},{\"english\":\"Return Largest Numbers in Arrays\",\"chinese\":\"返回数组中最大的数字\"},{\"english\":\"Confirm the Ending\",\"chinese\":\"检查字符串的结尾\"},{\"english\":\"Repeat a String Repeat a String\",\"chinese\":\"重复字符串\"},{\"english\":\"Truncate a String\",\"chinese\":\"截断字符串\"},{\"english\":\"Finders Keepers\",\"chinese\":\"发现者与看护者\"},{\"english\":\"Boo who\",\"chinese\":\"真假测试\"},{\"english\":\"Title Case a Sentence\",\"chinese\":\"单词的首字母大写\"},{\"english\":\"Slice and Splice\",\"chinese\":\"slice 和 splice\"},{\"english\":\"Falsy Bouncer\",\"chinese\":\"去除数组中的假值\"},{\"english\":\"Where do I Belong\",\"chinese\":\"我身在何处\"},{\"english\":\"Mutations\",\"chinese\":\"集合之间的关系\"},{\"english\":\"Chunky Monkey\",\"chinese\":\"猴子吃香蕉\"},{\"english\":\"Introduction to the Object Oriented Programming Challenges\",\"chinese\":\"面向对象编程介绍\"},{\"english\":\"Create a Basic JavaScript Object\",\"chinese\":\"创建一个基本的 JavaScript 对象\"},{\"english\":\"Use Dot Notation to Access the Properties of an Object\",\"chinese\":\"使用点符号来访问对象的属性\"},{\"english\":\"Create a Method on an Object\",\"chinese\":\"在对象上创建方法\"},{\"english\":\"Make Code More Reusable with the this Keyword\",\"chinese\":\"使用 this 关键字使代码更加可重用\"},{\"english\":\"Define a Constructor Function\",\"chinese\":\"定义构造函数\"},{\"english\":\"Use a Constructor to Create Objects\",\"chinese\":\"使用构造函数创建对象\"},{\"english\":\"Extend Constructors to Receive Arguments\",\"chinese\":\"扩展构造函数以接收参数\"},{\"english\":\"Verify an Object's Constructor with instanceof\",\"chinese\":\"使用 instance of 验证对象的构造函数\"},{\"english\":\"Understand Own Properties\",\"chinese\":\"了解自己的属性\"},{\"english\":\"Use Prototype Properties to Reduce Duplicate Code\",\"chinese\":\"使用原型属性来减少重复代码\"},{\"english\":\"Iterate Over All Properties\",\"chinese\":\"迭代所有属性\"},{\"english\":\"Understand the Constructor Property\",\"chinese\":\"了解构造函数属性\"},{\"english\":\"Change the Prototype to a New Object\",\"chinese\":\"将原型更改为新对象\"},{\"english\":\"Remember to Set the Constructor Property when Changing the Prototype\",\"chinese\":\"更改原型时，记得设置构造函数属性\"},{\"english\":\"Understand Where an Object’s Prototype Comes From\",\"chinese\":\"了解对象的原型来自哪里\"},{\"english\":\"Understand the Prototype Chain\",\"chinese\":\"了解原型链\"},{\"english\":\"Use Inheritance So You Don't Repeat Yourself\",\"chinese\":\"使用继承避免重复\"},{\"english\":\"Inherit Behaviors from a Supertype\",\"chinese\":\"从超类继承行为\"},{\"english\":\"Set the Child's Prototype to an Instance of the Parent\",\"chinese\":\"将子辈的原型设置为父辈的实例\"},{\"english\":\"Reset an Inherited Constructor Property\",\"chinese\":\"重置一个继承的构造函数属性\"},{\"english\":\"Add Methods After Inheritance\",\"chinese\":\"继承后添加方法\"},{\"english\":\"Override Inherited Methods\",\"chinese\":\"重写继承的方法\"},{\"english\":\"Use a Mixin to Add Common Behavior Between Unrelated Objects\",\"chinese\":\"使用 Mixin 在不相关对象之间添加共同行为\"},{\"english\":\"Use Closure to Protect Properties Within an Object from Being Modified Externally\",\"chinese\":\"使用闭包保护对象内的属性不被外部修改\"},{\"english\":\"Understand the Immediately Invoked Function Expression (IIFE)\",\"chinese\":\"了解立即调用函数表达（IIFE）\"},{\"english\":\"Use an IIFE to Create a Module\",\"chinese\":\" 使用 IIFE 创建一个模块\"},{\"english\":\"Introduction to the Functional Programming Challenges\",\"chinese\":\"函数式编程介绍\"},{\"english\":\"Learn About Functional Programming\",\"chinese\":\"学习函数式编程\"},{\"english\":\"Understand Functional Programming Terminology\",\"chinese\":\"了解函数式编程术语\"},{\"english\":\"Understand the Hazards of Using Imperative Code\",\"chinese\":\"了解使用命令式编程的危害\"},{\"english\":\"Avoid Mutations and Side Effects Using Functional Programming\",\"chinese\":\"使用函数式编程避免突变和副作用\"},{\"english\":\"Pass Arguments to Avoid External Dependence in a Function\",\"chinese\":\"传递参数以避免函数中的外部依赖\"},{\"english\":\"Refactor Global Variables Out of Functions\",\"chinese\":\"在函数中重构全局变量\"},{\"english\":\"Use the map Method to Extract Data from an Array\",\"chinese\":\"使用 map 方法从数组中提取数据\"},{\"english\":\"Implement map on a Prototype\",\"chinese\":\"在原型上实现 map 方法\"},{\"english\":\"Use the filter Method to Extract Data from an Array\",\"chinese\":\"使用 filter 方法从数组中提取数据\"},{\"english\":\"Implement the filter Method on a Prototype\",\"chinese\":\"在原型上实现 filter 方法\"},{\"english\":\"Return Part of an Array Using the slice Method\",\"chinese\":\"使用 slice 方法返回数组的一部分\"},{\"english\":\"Remove Elements from an Array Using slice Instead of splice\",\"chinese\":\"使用 slice 而不是 splice 从数组中移除元素\"},{\"english\":\"Combine Two Arrays Using the concat Method\",\"chinese\":\"使用 concat 方法组合两个数组\"},{\"english\":\"Add Elements to the End of an Array Using concat Instead of push\",\"chinese\":\"使用 concat 而不是 push 将元素添加到数组的末尾\"},{\"english\":\"Use the reduce Method to Analyze Data\",\"chinese\":\"使用 reduce 方法分析数据\"},{\"english\":\"Sort an Array Alphabetically using the sort Method\",\"chinese\":\"使用 sort 方法按字母顺序给数组排序\"},{\"english\":\"Return a Sorted Array Without Changing the Original Array\",\"chinese\":\"在不更改原始数组的前提下返回排序后的数组\"},{\"english\":\"Split a String into an Array Using the split Method\",\"chinese\":\"使用 split 方法将字符串拆分成数组\"},{\"english\":\"Combine an Array into a String Using the join Method\",\"chinese\":\"使用 join 方法将数组组合成字符串\"},{\"english\":\"Apply Functional Programming to Convert Strings to URL Slugs\",\"chinese\":\"应用函数式编程将字符串转换为URL片段\"},{\"english\":\"Use the every Method to Check that Every Element in an Array Meets a Criteria\",\"chinese\":\"使用 every 方法检查数组中的每个元素是否符合条件\"},{\"english\":\"Use the some Method to Check that Any Elements in an Array Meet a Criteria\",\"chinese\":\"使用 some 方法检查数组中是否有元素是否符合条件\"},{\"english\":\"Introduction to Currying and Partial Application\",\"chinese\":\"函数柯里化\"},{\"english\":\"Introduction to the Intermediate Algorithm Scripting Challenges\",\"chinese\":\"算法中级介绍\"},{\"english\":\"Sum All Numbers in a Range\",\"chinese\":\"范围内的数字求和\"},{\"english\":\"Diff Two Arrays\",\"chinese\":\"区分两个数组\"},{\"english\":\"Seek and Destroy\",\"chinese\":\"瞄准和消灭\"},{\"english\":\"Wherefore art thou\",\"chinese\":\"罗密欧与朱丽叶\"},{\"english\":\"Spinal Tap Case\",\"chinese\":\"短线连接格式\"},{\"english\":\"Pig Latin\",\"chinese\":\"儿童黑话\"},{\"english\":\"Search and Replace\",\"chinese\":\"搜索和替换\"},{\"english\":\"DNA Pairing\",\"chinese\":\"DNA 配对\"},{\"english\":\"Missing letters\",\"chinese\":\"丢失的字母\"},{\"english\":\"Sorted Union\",\"chinese\":\"集合排序\"},{\"english\":\"Convert HTML Entities\",\"chinese\":\"转换HTML实体\"},{\"english\":\"Sum All Odd Fibonacci Numbers\",\"chinese\":\"求斐波那契数组中的奇数之和\"},{\"english\":\"Sum All Primes\",\"chinese\":\"对所有素数求和\"},{\"english\":\"Smallest Common Multiple\",\"chinese\":\"最小公倍数\"},{\"english\":\"Drop it\",\"chinese\":\"放弃\"},{\"english\":\"Steamroller\",\"chinese\":\"扁平化\"},{\"english\":\"Binary Agents\",\"chinese\":\"二进制转化\"},{\"english\":\"Everything Be True\",\"chinese\":\"真假值判断\"},{\"english\":\"Arguments Optional\",\"chinese\":\"可选参数\"},{\"english\":\"Make a Person\",\"chinese\":\"构造一个 Person 类\"},{\"english\":\"Map the Debris\",\"chinese\":\"绘制碎片图\"},{\"english\":\"Introduction to the JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"算法和数据结构介绍\"},{\"english\":\"Palindrome Checker\",\"chinese\":\"回文检查器\"},{\"english\":\"Roman Numeral Converter\",\"chinese\":\"罗马数字转换器\"},{\"english\":\"Caesars Cipher\",\"chinese\":\"凯撒密码\"},{\"english\":\"Telephone Number Validator\",\"chinese\":\"电话号码验证器\"},{\"english\":\"Cash Register\",\"chinese\":\"收银机\"},{\"english\":\"Introduction to the Bootstrap Challenges\",\"chinese\":\"Bootstrap 介绍\"},{\"english\":\"Use Responsive Design with Bootstrap Fluid Containers\",\"chinese\":\"使用 Fluid 容器实现响应式设计\"},{\"english\":\"Make Images Mobile Responsive\",\"chinese\":\"使图片自适应移动端\"},{\"english\":\"Center Text with Bootstrap\",\"chinese\":\"用 Bootstrap 居中文本\"},{\"english\":\"Create a Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 按钮\"},{\"english\":\"Create a Block Element Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 块级元素\"},{\"english\":\"Taste the Bootstrap Button Color Rainbow\",\"chinese\":\"体验 Bootstrap 彩虹色的按钮\"},{\"english\":\"Call out Optional Actions with btn-info\",\"chinese\":\"使用 btn-info 调出可选操作\"},{\"english\":\"Warn Your Users of a Dangerous Action with btn-danger\",\"chinese\":\"使用 btn-danger 警告你的用户，这是危险操作。\"},{\"english\":\"Use the Bootstrap Grid to Put Elements Side By Side\",\"chinese\":\"使用 Bootstrap 网格并排放置元素\"},{\"english\":\"Ditch Custom CSS for Bootstrap\",\"chinese\":\"用 Bootstrap 来取代我们之前的自定义样式\"},{\"english\":\"Use a span to Target Inline Elements\",\"chinese\":\"使用 span 创建行内元素\"},{\"english\":\"Create a Custom Heading\",\"chinese\":\"创建自定义标题\"},{\"english\":\"Add Font Awesome Icons to our Buttons\",\"chinese\":\"将字体图标添加到我们的按钮中\"},{\"english\":\"Add Font Awesome Icons to all of our Buttons\",\"chinese\":\"将字体图标添加到我们所有的按钮上\"},{\"english\":\"Responsively Style Radio Buttons\",\"chinese\":\"响应式风格的单选按钮\"},{\"english\":\"Responsively Style Checkboxes\",\"chinese\":\"响应式风格的复选框\"},{\"english\":\"Style Text Inputs as Form Controls\",\"chinese\":\"给表单控件的输入框添加样式\"},{\"english\":\"Line up Form Elements Responsively with Bootstrap\",\"chinese\":\"使用 Bootstrap 响应式排列表单元素\"},{\"english\":\"Create a Bootstrap Headline\",\"chinese\":\"创建一个 Bootstrap 标题\"},{\"english\":\"House our page within a Bootstrap container-fluid div\",\"chinese\":\"将我们的页面放在 Fluid 容器中\"},{\"english\":\"Create a Bootstrap Row\",\"chinese\":\"创建一个 Bootstrap Row\"},{\"english\":\"Split Your Bootstrap Row\",\"chinese\":\"分割你的 Bootstrap Row\"},{\"english\":\"Create Bootstrap Wells\",\"chinese\":\"创建 Bootstrap Wells\"},{\"english\":\"Add Elements within Your Bootstrap Wells\",\"chinese\":\"在 Bootstrap Wells 中添加元素\"},{\"english\":\"Apply the Default Bootstrap Button Style\",\"chinese\":\"给 Bootstrap 按钮添加默认样式\"},{\"english\":\"Create a Class to Target with jQuery Selectors\",\"chinese\":\"分别给每个目标元素的 class 属性添加一个 target 值\"},{\"english\":\"Add id Attributes to Bootstrap Elements\",\"chinese\":\"给 Bootstrap 元素添加id属性\"},{\"english\":\"Label Bootstrap Wells\",\"chinese\":\"给 Bootstrap Wells 贴标签\"},{\"english\":\"Give Each Element a Unique id\",\"chinese\":\"给每个元素一个唯一的 id\"},{\"english\":\"Label Bootstrap Buttons\",\"chinese\":\"给 Bootstrap 按钮贴标签\"},{\"english\":\"Use Comments to Clarify Code\",\"chinese\":\"使用注释来说明代码\"},{\"english\":\"Introduction to jQuery\",\"chinese\":\"jQuery 介绍\"},{\"english\":\"Learn How Script Tags and Document Ready Work\",\"chinese\":\"了解 Script 和 Document 是如何工作的\"},{\"english\":\"Target HTML Elements with Selectors Using jQuery\",\"chinese\":\"使用 jQuery 配合元素选择器选择元素\"},{\"english\":\"Target Elements by Class Using jQuery\",\"chinese\":\"使用 jQuery 配合 class 选择器选择元素\"},{\"english\":\"Target Elements by id Using jQuery\",\"chinese\":\"使用 jQuery 配合 id 选择器选择元素\"},{\"english\":\"Delete Your jQuery Functions\",\"chinese\":\"删除 jQuery 函数\"},{\"english\":\"Target the Same Element with Multiple jQuery Selectors\",\"chinese\":\"用多个 jQuery 选择器瞄准同一个元素\"},{\"english\":\"Remove Classes from an Element with jQuery\",\"chinese\":\"使用 jQuery 从元素中移除 class\"},{\"english\":\"Change the CSS of an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素的 CSS\"},{\"english\":\"Disable an Element Using jQuery\",\"chinese\":\"使用 jQuery 禁用元素\"},{\"english\":\"Change Text Inside an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素内部的文本\"},{\"english\":\"Remove an Element Using jQuery\",\"chinese\":\"使用 jQuery 删除元素\"},{\"english\":\"Use appendTo to Move Elements with jQuery\",\"chinese\":\"使用 jQuery 的 appendTo 方法可以移动元素\"},{\"english\":\"Clone an Element Using jQuery\",\"chinese\":\"使用 jQuery 克隆元素\"},{\"english\":\"Target the Parent of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的父元素\"},{\"english\":\"Target the Children of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的子元素\"},{\"english\":\"Target a Specific Child of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的特定子元素\"},{\"english\":\"Target Even Elements Using jQuery\",\"chinese\":\"使用 jQuery 选择偶数元素\"},{\"english\":\"Use jQuery to Modify the Entire Page\",\"chinese\":\"使用 jQuery 修改整个页面\"},{\"english\":\"Introduction to the Sass Challenges\",\"chinese\":\"Sass 介绍\"},{\"english\":\"Store Data with Sass Variables\",\"chinese\":\"用 Sass 变量存储数据\"},{\"english\":\"Nest CSS with Sass\",\"chinese\":\"用 Sass 嵌套 CSS\"},{\"english\":\"Create Reusable CSS with Mixins\",\"chinese\":\"用 Mixins 创建可重用 CSS\"},{\"english\":\"Use @if and @else to Add Logic To Your Styles\",\"chinese\":\"使用 @if 和 @else 为你的样式添加逻辑\"},{\"english\":\"Use @for to Create a Sass Loop\",\"chinese\":\"使用 @for 创建一个 Sass 循环\"},{\"english\":\"Use @each to Map Over Items in a List\",\"chinese\":\"使用 @each 遍历列表中的项目\"},{\"english\":\"Apply a Style Until a Condition is Met with @while\",\"chinese\":\"使用 @while 当条件满足时样式生效\"},{\"english\":\"Split Your Styles into Smaller Chunks with Partials\",\"chinese\":\"用 Partials 将你的样式分成小块\"},{\"english\":\"Extend One Set of CSS Styles to Another Element\",\"chinese\":\"将一组CSS样式扩展到另一个元素\"},{\"english\":\"Introduction to the React Challenges\",\"chinese\":\"React 介绍\"},{\"english\":\"Create a Simple JSX Element\",\"chinese\":\"创建一个简单的 JSX 元素\"},{\"english\":\"Create a Complex JSX Element\",\"chinese\":\"创建一个复杂的 JSX 元素\"},{\"english\":\"Add Comments in JSX\",\"chinese\":\"在 JSX 中添加注释\"},{\"english\":\"Render HTML Elements to the DOM\",\"chinese\":\"渲染 HTML 元素为 DOM 树\"},{\"english\":\"Define an HTML Class in JSX\",\"chinese\":\"在 JSX 中定义一个 HTML Class\"},{\"english\":\"Learn About Self-Closing JSX Tags\",\"chinese\":\"了解自动闭合的 JSX 标记\"},{\"english\":\"Create a Stateless Functional Component\",\"chinese\":\"创建一个无状态的函数组件\"},{\"english\":\"Create a React Component\",\"chinese\":\"创建一个 React 组件\"},{\"english\":\"Create a Component with Composition\",\"chinese\":\"用组合的方式创建一个 React 组件 \"},{\"english\":\"Use React to Render Nested Components\",\"chinese\":\"使用 React 渲染嵌套组件\"},{\"english\":\"Compose React Components\",\"chinese\":\"组合 React 组件\"},{\"english\":\"Render a Class Component to the DOM\",\"chinese\":\"渲染 class 组件为 Dom 树\"},{\"english\":\"Write a React Component from Scratch\",\"chinese\":\"从零开始写一个 React 组件\"},{\"english\":\"Pass Props to a Stateless Functional Component\",\"chinese\":\"将 Props 传递给无状态函数组件\"},{\"english\":\"Pass an Array as Props\",\"chinese\":\"传递一个数组作为 Props\"},{\"english\":\"Use Default Props\",\"chinese\":\"使用默认的 Props\"},{\"english\":\"Override Default Props\",\"chinese\":\"覆盖默认的 Props\"},{\"english\":\"Use PropTypes to Define the Props You Expect\",\"chinese\":\"使用 PropTypes 来定义你期望的 Props\"},{\"english\":\"Access Props Using this.props\",\"chinese\":\"使用 this.props 访问 Props\"},{\"english\":\"Review Using Props with Stateless Functional Components\",\"chinese\":\"复习如何使用 Props 和无状态函数组件\"},{\"english\":\"Create a Stateful Component\",\"chinese\":\"创建一个有状态的组件\"},{\"english\":\"Render State in the User Interface\",\"chinese\":\"在用户界面中渲染状态\"},{\"english\":\"Render State in the User Interface Another Way\",\"chinese\":\"以另一种方式在用户界面中渲染状态\"},{\"english\":\"Set State with this.setState\",\"chinese\":\"用 this.setState 设置状态\"},{\"english\":\"Bind 'this' to a Class Method\",\"chinese\":\"将 this 绑定到 Class 方法\"},{\"english\":\"Use State to Toggle an Element\",\"chinese\":\"使用 State 切换元素\"},{\"english\":\"Write a Simple Counter\",\"chinese\":\"写一个简单的计数器\"},{\"english\":\"Create a Controlled Input\",\"chinese\":\"创建一个可以控制的输入框\"},{\"english\":\"Create a Controlled Form\",\"chinese\":\"创建一个可以控制的表单\"},{\"english\":\"Pass State as Props to Child Components\",\"chinese\":\"将 State 作为 Props 传递给子组件\"},{\"english\":\"Pass a Callback as Props\",\"chinese\":\"传递回调作为 Props\"},{\"english\":\"Use the Lifecycle Method componentWillMount\",\"chinese\":\"使用生命周期方法：componentWillMount\"},{\"english\":\"Use the Lifecycle Method componentDidMount\",\"chinese\":\"使用生命周期方法：componentDidMount\"},{\"english\":\"Add Event Listeners\",\"chinese\":\"添加事件侦听器\"},{\"english\":\"Manage Updates with Lifecycle Methods\",\"chinese\":\"使用生命周期方法管理更新\"},{\"english\":\"Optimize Re-Renders with shouldComponentUpdate\",\"chinese\":\"使用 shouldComponentUpdate 优化重新渲染\"},{\"english\":\"Introducing Inline Styles\",\"chinese\":\"介绍内联样式\"},{\"english\":\"Add Inline Styles in React\",\"chinese\":\"在 React 中添加内联样式\"},{\"english\":\"Use Advanced JavaScript in React Render Method\",\"chinese\":\"在 React Render 方法中使用 JavaScript\"},{\"english\":\"Render with an If/Else Condition\",\"chinese\":\"使用 If/Else 条件进行渲染\"},{\"english\":\"Use && for a More Concise Conditional\",\"chinese\":\"使用 && 获得更简洁的条件\"},{\"english\":\"Use a Ternary Expression for Conditional Rendering\",\"chinese\":\"使用三元表达式进行条件渲染\"},{\"english\":\"Render Conditionally from Props\",\"chinese\":\"根据 Props 有条件地渲染\"},{\"english\":\"Change Inline CSS Conditionally Based on Component State\",\"chinese\":\"根据组件状态有条件地更改内联 CSS\"},{\"english\":\"Use Array.map() to Dynamically Render Elements\",\"chinese\":\"使用 Array.map() 动态渲染元素\"},{\"english\":\"Give Sibling Elements a Unique Key Attribute\",\"chinese\":\"给同级元素一个唯一的键属性\"},{\"english\":\"Use Array.filter() to Dynamically Filter an Array\",\"chinese\":\"使用 Array.Filter() 动态过滤数组\"},{\"english\":\"Render React on the Server with renderToString\",\"chinese\":\"用 renderToString 在服务器上渲染 React\"},{\"english\":\"Introduction to the Redux Challenges\",\"chinese\":\"Redux 介绍\"},{\"english\":\"Create a Redux Store\",\"chinese\":\"创建一个 Redux Store\"},{\"english\":\"Get State from the Redux Store\",\"chinese\":\"从 Redux Store 获取状态\"},{\"english\":\"Define a Redux Action\",\"chinese\":\"定义一个 Redux Action\"},{\"english\":\"Define an Action Creator\",\"chinese\":\"定义一个 Action Creator\"},{\"english\":\"Dispatch an Action Event\",\"chinese\":\"分发 Action Event\"},{\"english\":\"Handle an Action in the Store\",\"chinese\":\"在 Store 里处理 Action\"},{\"english\":\"Use a Switch Statement to Handle Multiple Actions\",\"chinese\":\"使用 Switch 语句处理多个 Actions\"},{\"english\":\"Use const for Action Types\",\"chinese\":\"使用 const 声明 Action Types\"},{\"english\":\"Register a Store Listener\",\"chinese\":\"注册 Store 监听器\"},{\"english\":\"Combine Multiple Reducers\",\"chinese\":\"组合多个 Reduces\"},{\"english\":\"Send Action Data to the Store\",\"chinese\":\"发送 Action Data 给 Store\"},{\"english\":\"Use Middleware to Handle Asynchronous Actions\",\"chinese\":\"使用中间件处理异步操作\"},{\"english\":\"Write a Counter with Redux\",\"chinese\":\"用 Redux 写一个计数器\"},{\"english\":\"Never Mutate State\",\"chinese\":\"永不改变状态\"},{\"english\":\"Use the Spread Operator on Arrays\",\"chinese\":\"在数组中使用扩展运算符\"},{\"english\":\"Remove an Item from an Array\",\"chinese\":\"从数组中删除项目\"},{\"english\":\"Copy an Object with Object.assign\",\"chinese\":\"使用 Object.assign 拷贝对象\"},{\"english\":\"Introduction to the React and Redux Challenges\",\"chinese\":\"React 和 Redux 介绍\"},{\"english\":\"Getting Started with React Redux\",\"chinese\":\"React 和 Redux 入门\"},{\"english\":\"Manage State Locally First\",\"chinese\":\"首先在本地管理状态\"},{\"english\":\"Extract State Logic to Redux\",\"chinese\":\"提取状态逻辑给 Redux\"},{\"english\":\"Use Provider to Connect Redux to React\",\"chinese\":\"使用 Provider 连接 Redux 和 React\"},{\"english\":\"Map State to Props\",\"chinese\":\"映射 State 到 Props\"},{\"english\":\"Map Dispatch to Props\",\"chinese\":\"映射 Dispatch 到 Props\"},{\"english\":\"Connect Redux to React\",\"chinese\":\"连接 Redux 和 React\"},{\"english\":\"Connect Redux to the Messages App\",\"chinese\":\"将 Redux 连接到 Messages App\"},{\"english\":\"Extract Local State into Redux\",\"chinese\":\"将局部状态提取到 Redux 中\"},{\"english\":\"Moving Forward From Here\",\"chinese\":\"从这里前进\"},{\"english\":\"Introduction to the Front End Libraries Projects\",\"chinese\":\"项目实战介绍\"},{\"english\":\"Build a Random Quote Machine\",\"chinese\":\"构建一个随机引语生成器\"},{\"english\":\"Build a Markdown Previewer\",\"chinese\":\"构建一个 Markdown 文件预览器\"},{\"english\":\"Build a Drum Machine\",\"chinese\":\"构建一台鼓式机器\"},{\"english\":\"Build a JavaScript Calculator\",\"chinese\":\"构建一个 JavaScript 计算器\"},{\"english\":\"Build a Pomodoro Clock\",\"chinese\":\"构建一个番茄时钟\"},{\"english\":\"Introduction to the Data Visualization with D3 Challenges\",\"chinese\":\"数据可视化\"},{\"english\":\"Add Document Elements with D3\",\"chinese\":\"用 D3 给文档添加元素\"},{\"english\":\"Select a Group of Elements with D3\",\"chinese\":\"用 D3 选择一组元素\"},{\"english\":\"Work with Data in D3\",\"chinese\":\"使用 D3 中的数据\"},{\"english\":\"Work with Dynamic Data in D3\",\"chinese\":\"使用 D3 中的动态数据\"},{\"english\":\"Add Inline Styling to Elements\",\"chinese\":\"给元素添加内联样式\"},{\"english\":\"Change Styles Based on Data\",\"chinese\":\"根据数据更改样式\"},{\"english\":\"Add Classes with D3\",\"chinese\":\"用 D3 添加 Class\"},{\"english\":\"Update the Height of an Element Dynamically\",\"chinese\":\"动态更新元素的高度\"},{\"english\":\"Change the Presentation of a Bar Chart\",\"chinese\":\"更改条形图的显示方式\"},{\"english\":\"Learn About SVG in D3\",\"chinese\":\"了解 D3 中的 SVG\"},{\"english\":\"Display Shapes with SVG\",\"chinese\":\"用 SVG 显示形状\"},{\"english\":\"Create a Bar for Each Data Point in the Set\",\"chinese\":\"为集合中的每个数据点创建一个 Bar\"},{\"english\":\"Dynamically Set the Coordinates for Each Bar\",\"chinese\":\"动态设置每个 Bar 的坐标\"},{\"english\":\"Dynamically Change the Height of Each Bar\",\"chinese\":\"动态更改每个条的高度\"},{\"english\":\"Invert SVG Elements\",\"chinese\":\"反转 SVG 元素\"},{\"english\":\"Change the Color of an SVG Element\",\"chinese\":\"更改 SVG 元素的颜色\"},{\"english\":\"Add Labels to D3 Elements\",\"chinese\":\"给 D3 元素添加标签\"},{\"english\":\"Style D3 Labels\",\"chinese\":\"给 D3 标签添加样式\"},{\"english\":\"Add a Hover Effect to a D3 Element\",\"chinese\":\"给 D3 元素添加悬停效果\"},{\"english\":\"Add a Tooltip to a D3 Element\",\"chinese\":\"给 D3 元素添加工具提示\"},{\"english\":\"Create a Scatterplot with SVG Circles\",\"chinese\":\"使用 SVG Circles 创建散点图\"},{\"english\":\"Add Attributes to the Circle Elements\",\"chinese\":\"给 Circle 元素添加属性\"},{\"english\":\"Add Labels to Scatter Plot Circles\",\"chinese\":\"向散点图的 Circles 添加标签\"},{\"english\":\"Create a Linear Scale with D3\",\"chinese\":\"用 D3 创建线性比例\"},{\"english\":\"Set a Domain and a Range on a Scale\",\"chinese\":\"按比例设置域和范围\"},{\"english\":\"Use the d3.max and d3.min Functions to Find Minimum and Maximum Values in a Dataset\",\"chinese\":\"使用 d3.max 和 d3.min 函数在数据集中查找最小值和最大值\"},{\"english\":\"Use Dynamic Scales\",\"chinese\":\"使用动态比例\"},{\"english\":\"Use a Pre-Defined Scale to Place Elements\",\"chinese\":\"使用预定义的比例放置元素\"},{\"english\":\"Add Axes to a Visualization\",\"chinese\":\"添加坐标轴到可视化中\"},{\"english\":\"Introduction to the JSON APIs and AJAX Challenges\",\"chinese\":\"介绍 JSON 和 AJAX\"},{\"english\":\"Handle Click Events with JavaScript using the onclick property\",\"chinese\":\"使用 onclick 属性处理点击事件\"},{\"english\":\"Change Text with click Events\",\"chinese\":\"通过单击事件更改文本\"},{\"english\":\"Get JSON with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法获取 JSON\"},{\"english\":\"Access the JSON Data from an API\",\"chinese\":\"访问来自 API 的 JSON 数据\"},{\"english\":\"Convert JSON Data to HTML\",\"chinese\":\"将 JSON 数据转换为 HTML\"},{\"english\":\"Render Images from Data Sources\",\"chinese\":\"渲染数据源的图像\"},{\"english\":\"Pre-filter JSON to Get the Data You Need\",\"chinese\":\"预先过滤 JSON 以获得所需的数据\"},{\"english\":\"Get Geolocation Data to Find A User's GPS Coordinates\",\"chinese\":\"根据地理位置数据找到用户的 GPS 坐标\"},{\"english\":\"Post Data with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法发送数据\"},{\"english\":\"Introduction to the Data Visualization Projects\",\"chinese\":\"介绍数据可视化\"},{\"english\":\"Visualize Data with a Bar Chart\",\"chinese\":\"用条形图可视化数据\"},{\"english\":\"Visualize Data with a Scatterplot Graph\",\"chinese\":\"用散点图可视化数据\"},{\"english\":\"Visualize Data with a Heat Map\",\"chinese\":\"用热图可视化数据\"},{\"english\":\"Visualize Data with a Choropleth Map\",\"chinese\":\"用地区分布图可视化数据\"},{\"english\":\"Visualize Data with a Treemap Diagram\",\"chinese\":\"用树形图可视化数据\"},{\"english\":\"Introduction to the Managing Packages with npm Challenges\",\"chinese\":\"介绍 Node 包管理器——npm\"},{\"english\":\"How to Use package.json, the Core of Any Node.js Project or npm Package\",\"chinese\":\"如何使用 package.json 成为 Node.js 项目或 npm 包的核心\"},{\"english\":\"Add a Description to Your package.json\",\"chinese\":\"给 package.json 添加一个描述\"},{\"english\":\"Add Keywords to Your package.json\",\"chinese\":\"给 package.json 添加关键词\"},{\"english\":\"Add a License to Your package.json\",\"chinese\":\"给 package.json 添加许可证\"},{\"english\":\"Add a Version to Your package.json\",\"chinese\":\"给 package.json 添加版本号\"},{\"english\":\"Expand Your Project with External Packages from npm\",\"chinese\":\"使用 npm 的外部软件包扩展您的项目\"},{\"english\":\"Manage npm Dependencies By Understanding Semantic Versioning\",\"chinese\":\"通过理解语义版本化来管理 npm 依赖关系\"},{\"english\":\"Use the Tilde-Character to Always Use the Latest Patch Version of a Dependency\",\"chinese\":\"用波浪字符始终使用依赖项的最新补丁版本\"},{\"english\":\"Use the Caret-Character to Use the Latest Minor Version of a Dependency\",\"chinese\":\"用插入字符可以使用依赖项的最新次要版本\"},{\"english\":\"Remove a Package from Your Dependencies\",\"chinese\":\"从依赖项中删除包\"},{\"english\":\"Introduction to the Basic Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 基础\"},{\"english\":\"Meet the Node console\",\"chinese\":\"认识 Node 的控制台\"},{\"english\":\"Start a Working Express Server\",\"chinese\":\"启动一个 Express 服务器\"},{\"english\":\"Serve an HTML File\",\"chinese\":\"服务 HTML 文件\"},{\"english\":\"Serve Static Assets\",\"chinese\":\"服务静态资源\"},{\"english\":\"Serve JSON on a Specific Route\",\"chinese\":\"服务指定路由上的 JSON\"},{\"english\":\"Use the .env File\",\"chinese\":\"使用 .env 文件\"},{\"english\":\"Implement a Root-Level Request Logger Middleware\",\"chinese\":\"实现一个根层的请求记录器中间件\"},{\"english\":\"Chain Middleware to Create a Time Server\",\"chinese\":\"使用链中间件来创建时间服务器\"},{\"english\":\"Get Route Parameter Input from the Client\",\"chinese\":\"从客户端获取路由参数输入\"},{\"english\":\"Get Query Parameter Input from the Client\",\"chinese\":\"从客户端获取查询参数输入\"},{\"english\":\"Use body-parser to Parse POST Requests\",\"chinese\":\"使用 body-parser 来解析POST请求\"},{\"english\":\"Get Data from POST Requests\",\"chinese\":\"从 POST 请求中获取数据\"},{\"english\":\"Introduction to the MongoDB and Mongoose Challenges\",\"chinese\":\"介绍 MongogDB 和 Mongoose\"},{\"english\":\"Install and Set Up Mongoose\",\"chinese\":\"安装和设置 Mongoose\"},{\"english\":\"Create a Model\",\"chinese\":\"创建一个模型\"},{\"english\":\"Create and Save a Record of a Model\",\"chinese\":\"用模型来创建并保存一条记录\"},{\"english\":\"Create Many Records with model.create()\",\"chinese\":\"使用 model.create() 创建许多记录\"},{\"english\":\"Use model.find() to Search Your Database\",\"chinese\":\"使用 model.find() 查找数据库\"},{\"english\":\"Use model.findOne() to Return a Single Matching Document from Your Database\",\"chinese\":\"使用 model.findOne() 从数据库中返回一个匹配的文档\"},{\"english\":\"Use model.findById() to Search Your Database By _id\",\"chinese\":\"使用 model.findById() 按 _id 搜索数据库\"},{\"english\":\"Perform Classic Updates by Running Find, Edit, then Save\",\"chinese\":\"通过运行 find、edit、save 来执行经典更新\"},{\"english\":\"Perform New Updates on a Document Using model.findOneAndUpdate()\",\"chinese\":\"使用 model.findOneAndUpdate() 对文档执行新的更新\"},{\"english\":\"Delete One Document Using model.findByIdAndRemove\",\"chinese\":\"使用 model.findByIdAndRemove() 删除一个文档\"},{\"english\":\"Delete Many Documents with model.remove()\",\"chinese\":\"使用 model.remove() 删除许多文档\"},{\"english\":\"Chain Search Query Helpers to Narrow Search Results\",\"chinese\":\"通过链搜索查询帮助器缩小搜索结果\"},{\"english\":\"Introduction to the APIs and Microservices Projects\",\"chinese\":\"介绍 API 和 微服务\"},{\"english\":\"Timestamp Microservice\",\"chinese\":\"时间戳\"},{\"english\":\"Request Header Parser Microservice\",\"chinese\":\"请求头解析器\"},{\"english\":\"URL Shortener Microservice\",\"chinese\":\"短网址\"},{\"english\":\"Exercise Tracker\",\"chinese\":\"运动跟踪器\"},{\"english\":\"File Metadata Microservice\",\"chinese\":\"文件元数据\"},{\"english\":\"Introduction to Information Security with HelmetJS Challenges\",\"chinese\":\"介绍信息安全必备工具——Helmet\"},{\"english\":\"Install and Require Helmet\",\"chinese\":\"安装和引入 Helmet\"},{\"english\":\"Hide Potentially Dangerous Information Using helmet.hidePoweredBy()\",\"chinese\":\"使用 helmet.hidePoweredBy() 隐藏潜在的危险信息\"},{\"english\":\"Mitigate the Risk of Clickjacking with helmet.frameguard()\",\"chinese\":\"使用 helmet.frameguard() 降低点击劫持的风险\"},{\"english\":\"Mitigate the Risk of Cross Site Scripting (XSS) Attacks with helmet.xssFilter()\",\"chinese\":\"使用 helmet.xssFilter() 降低跨站点脚本（XSS）攻击的风险\"},{\"english\":\"Avoid Inferring the Response MIME Type with helmet.noSniff()\",\"chinese\":\"使用 helment.noSniff() 避免推断响应的 MIME 类型\"},{\"english\":\"Prevent IE from Opening Untrusted HTML with helmet.ieNoOpen()\",\"chinese\":\"使用 helment.ieNoOpen() 防止 IE 打开不受信任的 HTML\"},{\"english\":\"Ask Browsers to Access Your Site via HTTPS Only with helmet.hsts()\",\"chinese\":\"使用 helmet.hsts() 要求浏览器只通过HTTPS访问你的网站\"},{\"english\":\"Disable DNS Prefetching with helmet.dnsPrefetchControl()\",\"chinese\":\"使用 helmet.dnsPrefetchControl() 禁用 DNS 预取\"},{\"english\":\"Disable Client-Side Caching with helmet.noCache()\",\"chinese\":\"使用 helment.noCache() 禁用客户端缓存\"},{\"english\":\"Set a Content Security Policy with helmet.contentSecurityPolicy()\",\"chinese\":\"使用 helment.contentSecurityPolicy() 设置内容安全策略\"},{\"english\":\"Configure Helmet Using the ‘parent’ helmet() Middleware\",\"chinese\":\"使用 helmet() 中间件来配置 Helmet\"},{\"english\":\"Understand BCrypt Hashes\",\"chinese\":\"了解加密哈希\"},{\"english\":\"Hash and Compare Passwords Asynchronously\",\"chinese\":\"异步哈希和比较密码\"},{\"english\":\"Hash and Compare Passwords Synchronously\",\"chinese\":\"同步哈希和比较密码 \"},{\"english\":\"Introduction to the Quality Assurance with Chai Challenges\",\"chinese\":\"介绍质量保证必备工具——Chai\"},{\"english\":\"Learn How JavaScript Assertions Work\",\"chinese\":\"了解 JavaScript 断言是如何工作的\"},{\"english\":\"Test if a Variable or Function is Defined\",\"chinese\":\"测试变量或函数是否已定义\"},{\"english\":\"Use Assert.isOK and Assert.isNotOK\",\"chinese\":\"使用 Assert.isok() 和 Assert.isNotOK()\"},{\"english\":\"Test for Truthiness\",\"chinese\":\"真假测试\"},{\"english\":\"Use the Double Equals to Assert Equality\",\"chinese\":\"用两个等号断言相等\"},{\"english\":\"Use the Triple Equals to Assert Strict Equality\",\"chinese\":\"用三个等号断言严格相等\"},{\"english\":\"Assert Deep Equality with .deepEqual and .notDeepEqual\",\"chinese\":\"用 Assert.deepEqual() 和 Assert.notDeepEqual() 断言深度相等\"},{\"english\":\"Compare the Properties of Two Elements\",\"chinese\":\"比较两个元素的属性\"},{\"english\":\"Test if One Value is Below or At Least as Large as Another\",\"chinese\":\"测试一个值是否小于或等于另一个值\"},{\"english\":\"Test if a Value Falls within a Specific Range\",\"chinese\":\"测试某个值是否在特定范围内\"},{\"english\":\"Test if a Value is an Array\",\"chinese\":\"测试某个值是否为数组\"},{\"english\":\"Test if an Array Contains an Item\",\"chinese\":\"测试数组是否包含某个项目\"},{\"english\":\"Test if a Value is a String\",\"chinese\":\"测试某个值是否为字符串\"},{\"english\":\"Test if a String Contains a Substring\",\"chinese\":\"测试字符串是否包含子字符串\"},{\"english\":\"Use Regular Expressions to Test a String\",\"chinese\":\"使用正则表达式测试字符串\"},{\"english\":\"Test if an Object has a Property\",\"chinese\":\"测试对象是否具有某个属性\"},{\"english\":\"Test if a Value is of a Specific Data Structure Type\",\"chinese\":\"测试某个值是否是特定的数据类型\"},{\"english\":\"Test if an Object is an Instance of a Constructor\",\"chinese\":\"测试对象是否是构造函数的实例\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP\",\"chinese\":\"使用 Chai-HTTP 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP II\",\"chinese\":\"使用 Chai-HTTP II 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP III - PUT method\",\"chinese\":\"使用 Chai-HTTP III 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP IV - PUT method\",\"chinese\":\"使用 Chai-HTTP IV 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser\",\"chinese\":\"使用 无头浏览器 运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser II\",\"chinese\":\"使用 无头浏览器 II 运行功能测试\"},{\"english\":\"Introduction to the Advances Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 高级\"},{\"english\":\"Set up a Template Engine\",\"chinese\":\"设置模板引擎\"},{\"english\":\"Use a Template Engine's Powers\",\"chinese\":\"使用模板引擎\"},{\"english\":\"Set up Passport\",\"chinese\":\"设置 Passport\"},{\"english\":\"Serialization of a User Object\",\"chinese\":\"用户对象的序列化\"},{\"english\":\"Implement the Serialization of a Passport User\",\"chinese\":\"实现 Passport 用户的序列化\"},{\"english\":\"Authentication Strategies\",\"chinese\":\"身份验证策略\"},{\"english\":\"How to Use Passport Strategies\",\"chinese\":\"如何使用 Passport 策略\"},{\"english\":\"Create New Middleware\",\"chinese\":\"创建新的中间件\"},{\"english\":\"How to Put a Profile Together\",\"chinese\":\"如何将 Profile 放在一起\"},{\"english\":\"Logging a User Out\",\"chinese\":\"用户退出\"},{\"english\":\"Registration of New Users\",\"chinese\":\"注册新用户\"},{\"english\":\"Hashing Your Passwords\",\"chinese\":\"哈希密码\"},{\"english\":\"Clean Up Your Project with Modules\",\"chinese\":\"使用模块清理项目\"},{\"english\":\"Implementation of Social Authentication\",\"chinese\":\"实现第一种社交登录\"},{\"english\":\"Implementation of Social Authentication II\",\"chinese\":\"实现第二种社交登录\"},{\"english\":\"Implementation of Social Authentication III\",\"chinese\":\"实现第三种社交登录\"},{\"english\":\"Set up the Environment\",\"chinese\":\"设置环境\"},{\"english\":\"Communicate by Emitting\",\"chinese\":\"通过 Emitting 通信\"},{\"english\":\"Handle a Disconnect\",\"chinese\":\"处理连接断开\"},{\"english\":\"Authentication with Socket.IO\",\"chinese\":\"用 Socket.IO 进行身份验证\"},{\"english\":\"Announce New Users\",\"chinese\":\"用户公告\"},{\"english\":\"Send and Display Chat Messages\",\"chinese\":\"发送和显示聊天消息\"},{\"english\":\"Introduction to the Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Metric-Imperial Converter\",\"chinese\":\"公制英制转换器\"},{\"english\":\"Issue Tracker\",\"chinese\":\"问题跟踪器\"},{\"english\":\"Personal Library\",\"chinese\":\"个人图书馆\"},{\"english\":\"Stock Price Checker\",\"chinese\":\"股票价格检查器\"},{\"english\":\"Anonymous Message Board\",\"chinese\":\"匿名留言板\"},{\"english\":\"Introduction to the Coding Interview Algorithms\",\"chinese\":\"算法面试介绍\"},{\"english\":\"Find the Symmetric Difference\",\"chinese\":\"找到对等分差\"},{\"english\":\"Inventory Update\",\"chinese\":\"更新库存\"},{\"english\":\"No Repeats Please\",\"chinese\":\"请不要重复\"},{\"english\":\"Pairwise\",\"chinese\":\"结对\"},{\"english\":\"Implement Bubble Sort\",\"chinese\":\"冒泡排序\"},{\"english\":\"Implement Selection Sort\",\"chinese\":\"选择排序\"},{\"english\":\"Implement Insertion Sort\",\"chinese\":\"插入排序\"},{\"english\":\"Implement Quick Sort\",\"chinese\":\"快速排序\"},{\"english\":\"Implement Merge Sort\",\"chinese\":\"合并排序\"},{\"english\":\"Introduction to the Coding Interview Data Structure Questions\",\"chinese\":\"数据结构面试介绍\"},{\"english\":\"Typed Arrays\",\"chinese\":\"类型数组\"},{\"english\":\"Learn how a Stack Works\",\"chinese\":\"了解栈如何工作\"},{\"english\":\"Create a Stack Class\",\"chinese\":\"创建一个栈\"},{\"english\":\"Create a Queue Class\",\"chinese\":\"创建一个队列\"},{\"english\":\"Create a Priority Queue Class\",\"chinese\":\"创建一个优先队列\"},{\"english\":\"Create a Circular Queue\",\"chinese\":\"创建一个循环队列\"},{\"english\":\"Create a Set Class\",\"chinese\":\"介绍一种新的数据结构：集合（Set）\"},{\"english\":\"Remove from a Set\",\"chinese\":\"从集合中移除\"},{\"english\":\"Size of the Set\",\"chinese\":\"集合的大小\"},{\"english\":\"Perform a Union on Two Sets\",\"chinese\":\"求两个集合的并集\"},{\"english\":\"Perform an Intersection on Two Sets of Data\",\"chinese\":\"求两个集合的交集\"},{\"english\":\"Perform a Difference on Two Sets of Data\",\"chinese\":\"求两个集合的差异\"},{\"english\":\"Perform a Subset Check on Two Sets of Data\",\"chinese\":\"求某个集合是否为另一个集合的子集\"},{\"english\":\"Create and Add to Sets in ES6\",\"chinese\":\"创建集合并添加项目\"},{\"english\":\"Remove items from a set in ES6\",\"chinese\":\"移除集合中的项目\"},{\"english\":\"Use .has and .size on an ES6 Set\",\"chinese\":\"使用集合的 has 和 size 方法\"},{\"english\":\"Use Spread and Notes for ES5 Set() Integration\",\"chinese\":\"扩展运算符既可以用于数组，也可以用于集合。\"},{\"english\":\"Create a Map Data Structure\",\"chinese\":\"介绍一种新的数据结构：映射（Map）\"},{\"english\":\"Create an ES6 JavaScript Map\",\"chinese\":\"创建一个 JavaScript 映射\"},{\"english\":\"Create a Hash Table\",\"chinese\":\"创建一个哈希表\"},{\"english\":\"Work with Nodes in a Linked List\",\"chinese\":\"使用链表中的节点\"},{\"english\":\"Create a Linked List Class\",\"chinese\":\"引入一种新的数据结构：链表\"},{\"english\":\"Remove Elements from a Linked List\",\"chinese\":\"从链表中删除元素\"},{\"english\":\"Search within a Linked List\",\"chinese\":\"在链表中搜索\"},{\"english\":\"Remove Elements from a Linked List by Index\",\"chinese\":\"在链表中按索引删除元素\"},{\"english\":\"Add Elements at a Specific Index in a Linked List\",\"chinese\":\"在链表的指定索引处添加元素\"},{\"english\":\"Create a Doubly Linked List\",\"chinese\":\"创建一个双向链表\"},{\"english\":\"Reverse a Doubly Linked List\",\"chinese\":\"反转双向链表\"},{\"english\":\"Find the Minimum and Maximum Value in a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小值和最大值\"},{\"english\":\"Add a New Element to a Binary Search Tree\",\"chinese\":\"将新元素添加到二叉树中\"},{\"english\":\"Check if an Element is Present in a Binary Search Tree\",\"chinese\":\"检查二叉树中是否存在某个元素\"},{\"english\":\"Find the Minimum and Maximum Height of a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小高度和最大高度\"},{\"english\":\"Use Depth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用深度优先搜索\"},{\"english\":\"Use Breadth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用广度优先搜索\"},{\"english\":\"Delete a Leaf Node in a Binary Search Tree\",\"chinese\":\"删除二叉树中的叶子节点\"},{\"english\":\"Delete a Node with One Child in a Binary Search Tree\",\"chinese\":\"删除二叉树中有一个子节点的节点\"},{\"english\":\"Delete a Node with Two Children in a Binary Search Tree\",\"chinese\":\"删除二叉树中有两个子节点的节点\"},{\"english\":\"Invert a Binary Tree\",\"chinese\":\"反转二叉树\"},{\"english\":\"Create a Trie Search Tree\",\"chinese\":\"创建一个字典树\"},{\"english\":\"Insert an Element into a Max Heap\",\"chinese\":\"插入一个元素到最大堆中\"},{\"english\":\"Remove an Element from a Max Heap\",\"chinese\":\"从最大堆中删除一个元素\"},{\"english\":\"Implement Heap Sort with a Min Heap\",\"chinese\":\"在最小堆中实现堆排序\"},{\"english\":\"Adjacency List\",\"chinese\":\"邻接表\"},{\"english\":\"Adjacency Matrix\",\"chinese\":\"邻接矩阵\"},{\"english\":\"Incidence Matrix\",\"chinese\":\"关联矩阵\"},{\"english\":\"Breadth-First Search\",\"chinese\":\"广度优先搜索\"},{\"english\":\"Depth-First Search\",\"chinese\":\"深度优先搜索\"},{\"english\":\"Introduction to the Coding Interview Take Home Projects\",\"chinese\":\"私人项目介绍\"},{\"english\":\"Show the Local Weather\",\"chinese\":\"展示当地的天气\"},{\"english\":\"Build a Wikipedia Viewer\",\"chinese\":\"维基百科查看器\"},{\"english\":\"Use the Twitch JSON API\",\"chinese\":\"使用 Twitch 的 JSON API\"},{\"english\":\"Build an Image Search Abstraction Layer\",\"chinese\":\"图像搜索抽象层\"},{\"english\":\"Build a Tic Tac Toe Game\",\"chinese\":\"井字游戏\"},{\"english\":\"Build a Simon Game\",\"chinese\":\"西蒙游戏\"},{\"english\":\"Build a Camper Leaderboard\",\"chinese\":\"学员排行榜\"},{\"english\":\"Build a Recipe Box\",\"chinese\":\"食谱盒\"},{\"english\":\"Build the Game of Life\",\"chinese\":\"游戏人生\"},{\"english\":\"Build a Roguelike Dungeon Crawler Game\",\"chinese\":\"地牢围攻\"},{\"english\":\"P2P Video Chat Application\",\"chinese\":\"P2P 视频聊天应用\"},{\"english\":\"Show National Contiguity with a Force Directed Graph\",\"chinese\":\"用力有向图显示国家之间的地理联系\"},{\"english\":\"Map Data Across the Globe\",\"chinese\":\"全球地图数据\"},{\"english\":\"Manage a Book Trading Club\",\"chinese\":\"管理图书交易俱乐部\"},{\"english\":\"Build a Pinterest Clone\",\"chinese\":\"克隆 Pinterest\"},{\"english\":\"Build a Nightlife Coordination App\",\"chinese\":\"构建一个协调夜生活的应用\"},{\"english\":\"Chart the Stock Market\",\"chinese\":\"绘制股票市场图\"},{\"english\":\"Build a Voting App\",\"chinese\":\"构建一个投票应用\"},{\"english\":\"Build a Pong Game\",\"chinese\":\"构建一个乒乓游戏\"},{\"english\":\"Build a Light-Bright App\",\"chinese\":\"构建一个灯光明亮的应用\"},{\"english\":\"Introduction to the Rosetta Code Problems\",\"chinese\":\"介绍罗刹塔代码\"},{\"english\":\"100 doors\",\"chinese\":\"百扇门\"},{\"english\":\"24 game\",\"chinese\":\"24 点游戏\"},{\"english\":\"9 billion names of God the integer\",\"chinese\":\"上帝的九十亿个名字\"},{\"english\":\"ABC Problem\",\"chinese\":\"ABC 难题\"},{\"english\":\"Introduction to the Project Euler Problems\",\"chinese\":\"欧拉计划介绍\"},{\"english\":\"Problem 1: Multiples of 3 and 5\",\"chinese\":\"关卡 1：3 和 5 的倍数\"},{\"english\":\"Problem 2: Even Fibonacci Numbers\",\"chinese\":\"关卡 2：偶斐波那契数\"},{\"english\":\"Problem 3: Largest prime factor\",\"chinese\":\"关卡 3：最大质因数\"},{\"english\":\"Problem 4: Largest palindrome product\",\"chinese\":\"关卡 4：最大回文乘积\"},{\"english\":\"Problem 5: Smallest multiple\",\"chinese\":\"关卡 5：最小倍数\"},{\"english\":\"Problem 6: Sum square difference\",\"chinese\":\"关卡 6：平方的和与和的平方之差\"},{\"english\":\"Problem 7: 10001st prime\",\"chinese\":\"关卡 7：第 10001 个素数\"},{\"english\":\"Problem 8: Largest product in a series\",\"chinese\":\"关卡 8：连续数字最大乘积\"},{\"english\":\"Problem 9: Special Pythagorean triplet\",\"chinese\":\"关卡 9：特殊毕达哥拉斯三元组\"},{\"english\":\"Problem 10: Summation of primes\",\"chinese\":\"关卡 10：素数的和\"},{\"english\":\"Problem 11: Largest product in a grid\",\"chinese\":\"关卡 11：方阵中的最大乘积\"},{\"english\":\"Problem 12: Highly divisible triangular number\",\"chinese\":\"关卡 12：高度可约的三角形数\"},{\"english\":\"Problem 13: Large sum\",\"chinese\":\"关卡 13：大和\"},{\"english\":\"Problem 14: Longest Collatz sequence\",\"chinese\":\"关卡 14：最长考拉兹序列\"},{\"english\":\"Problem 15: Lattice paths\",\"chinese\":\"关卡 15：网格路径\"},{\"english\":\"Problem 16: Power digit sum\",\"chinese\":\"关卡 16：幂的数字和\"},{\"english\":\"Problem 17: Number letter counts\",\"chinese\":\"关卡 17：表达数字的英文字母计数\"},{\"english\":\"Problem 18: Maximum path sum I\",\"chinese\":\"关卡 18：最大路径和 I\"},{\"english\":\"Problem 19: Counting Sundays\",\"chinese\":\"关卡 19：数星期日\"},{\"english\":\"Problem 20: Factorial digit sum\",\"chinese\":\"关卡 20：阶乘数字和\"},{\"english\":\"Problem 21: Amicable numbers\",\"chinese\":\"关卡 21：亲和数\"},{\"english\":\"Problem 22: Names scores\",\"chinese\":\"关卡 22：姓名得分\"},{\"english\":\"Problem 23: Non-abundant sums\",\"chinese\":\"关卡 23：并非盈数之和\"},{\"english\":\"Problem 24: Lexicographic permutations\",\"chinese\":\"关卡 24：字典序排列\"},{\"english\":\"Problem 25: 1000-digit Fibonacci number\",\"chinese\":\"关卡 25：一千位斐波那契数\"},{\"english\":\"Problem 26: Reciprocal cycles\",\"chinese\":\"关卡 26：倒数的循环节\"},{\"english\":\"Problem 27: Quadratic primes\",\"chinese\":\"关卡 27：二次“素数生成”多项式\"},{\"english\":\"Problem 28: Number spiral diagonals\",\"chinese\":\"关卡 28：螺旋数阵对角线\"},{\"english\":\"Problem 29: Distinct powers\",\"chinese\":\"关卡 29：不同的幂\"},{\"english\":\"Problem 30: Digit n powers\",\"chinese\":\"关卡 30：各位数字的五次幂\"},{\"english\":\"Problem 31: Coin sums\",\"chinese\":\"关卡 31：硬币求和\"},{\"english\":\"Problem 32: Pandigital products\",\"chinese\":\"关卡 32：全数字的乘积\"},{\"english\":\"Problem 33: Digit cancelling fractions\",\"chinese\":\"关卡 33：消去数字的分数\"},{\"english\":\"Problem 34: Digit factorials\",\"chinese\":\"关卡 34：各位数字的阶乘\"},{\"english\":\"Problem 35: Circular primes\",\"chinese\":\"关卡 35：圆周素数\"},{\"english\":\"Problem 36: Double-base palindromes\",\"chinese\":\"关卡 36：双进制回文数\"},{\"english\":\"Problem 37: Truncatable primes\",\"chinese\":\"关卡 37：可截素数\"},{\"english\":\"Problem 38: Pandigital multiples\",\"chinese\":\"关卡 38：全数字的倍数\"},{\"english\":\"Problem 39: Integer right triangles\",\"chinese\":\"关卡 39：整数边长直角三角形\"},{\"english\":\"Problem 40: Champernowne's constant\",\"chinese\":\"关卡 40：钱珀瑙恩常数\"},{\"english\":\"Problem 41: Pandigital prime\",\"chinese\":\"关卡 41：全数字的素数\"},{\"english\":\"Problem 42: Coded triangle numbers\",\"chinese\":\"关卡 42：编码三角形数\"},{\"english\":\"Problem 43: Sub-string divisibility\",\"chinese\":\"关卡 43：子串的可整除性\"},{\"english\":\"Problem 44: Pentagon numbers\",\"chinese\":\"关卡 44：五边形数\"}]\n\n/***/ }),\n\n/***/ 914:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\t__webpack_require__(1237);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction ButtonSpacer() {\n\t  return _react2.default.createElement('div', { className: 'button-spacer' });\n\t}\n\t\n\tButtonSpacer.displayName = 'ButtonSpacer';\n\t\n\texports.default = ButtonSpacer;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 375:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(4);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Row = __webpack_require__(238);\n\t\n\tvar _Row2 = _interopRequireDefault(_Row);\n\t\n\tvar _Col = __webpack_require__(143);\n\t\n\tvar _Col2 = _interopRequireDefault(_Col);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction FullWidthRow(_ref) {\n\t  var children = _ref.children;\n\t\n\t  return _react2.default.createElement(\n\t    _Row2.default,\n\t    null,\n\t    _react2.default.createElement(\n\t      _Col2.default,\n\t      { sm: 8, smOffset: 2, xs: 12 },\n\t      children\n\t    )\n\t  );\n\t}\n\t\n\tFullWidthRow.displayName = 'FullWidthRow';\n\tFullWidthRow.propTypes = {\n\t  children: _propTypes2.default.any\n\t};\n\t\n\texports.default = FullWidthRow;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1237:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 945:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.query = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(4);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _gatsbyLink = __webpack_require__(223);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _reactHelmet = __webpack_require__(151);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _Button = __webpack_require__(38);\n\t\n\tvar _Button2 = _interopRequireDefault(_Button);\n\t\n\tvar _ListGroup = __webpack_require__(4402);\n\t\n\tvar _ListGroup2 = _interopRequireDefault(_ListGroup);\n\t\n\tvar _ListGroupItem = __webpack_require__(729);\n\t\n\tvar _ListGroupItem2 = _interopRequireDefault(_ListGroupItem);\n\t\n\tvar _FullWidthRow = __webpack_require__(375);\n\t\n\tvar _FullWidthRow2 = _interopRequireDefault(_FullWidthRow);\n\t\n\tvar _ButtonSpacer = __webpack_require__(914);\n\t\n\tvar _ButtonSpacer2 = _interopRequireDefault(_ButtonSpacer);\n\t\n\tvar _propTypes3 = __webpack_require__(124);\n\t\n\t__webpack_require__(1249);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar dict = __webpack_require__(181); /* global graphql */\n\t\n\tvar propTypes = {\n\t  data: _propTypes2.default.shape({\n\t    markdownRemark: _propTypes3.MarkdownRemark,\n\t    allChallengeNode: _propTypes3.AllChallengeNode\n\t  })\n\t};\n\t\n\tfunction renderMenuItems(_ref) {\n\t  var _ref$edges = _ref.edges,\n\t      edges = _ref$edges === undefined ? [] : _ref$edges;\n\t\n\t  return edges.map(function (_ref2) {\n\t    var node = _ref2.node;\n\t    return node;\n\t  }).map(function (_ref3) {\n\t    var title = _ref3.title,\n\t        slug = _ref3.fields.slug;\n\t\n\t    dict.forEach(function (item) {\n\t      if (item.english == title) {\n\t        title = item.chinese;\n\t      }\n\t    });\n\t    return _react2.default.createElement(\n\t      _gatsbyLink2.default,\n\t      { key: 'intro-' + slug, to: slug },\n\t      _react2.default.createElement(\n\t        _ListGroupItem2.default,\n\t        null,\n\t        title\n\t      )\n\t    );\n\t  });\n\t}\n\t\n\tfunction handleCurriculumClick() {\n\t  return (0, _gatsbyLink.navigateTo)('/');\n\t}\n\t\n\tfunction IntroductionPage(_ref4) {\n\t  var _ref4$data = _ref4.data,\n\t      markdownRemark = _ref4$data.markdownRemark,\n\t      allChallengeNode = _ref4$data.allChallengeNode;\n\t  var html = markdownRemark.html,\n\t      block = markdownRemark.frontmatter.block;\n\t\n\t  var firstLesson = allChallengeNode && allChallengeNode.edges[0].node;\n\t  var firstLessonPath = firstLesson ? firstLesson.fields.slug : '/strange-place';\n\t  return _react2.default.createElement(\n\t    _react.Fragment,\n\t    null,\n\t    _react2.default.createElement(\n\t      _reactHelmet2.default,\n\t      null,\n\t      _react2.default.createElement(\n\t        'title',\n\t        null,\n\t        block,\n\t        ' | freeCodeCamp'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      _FullWidthRow2.default,\n\t      null,\n\t      _react2.default.createElement('div', {\n\t        className: 'intro-layout',\n\t        dangerouslySetInnerHTML: { __html: html }\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      _FullWidthRow2.default,\n\t      null,\n\t      _react2.default.createElement(\n\t        _gatsbyLink2.default,\n\t        { className: 'btn btn-lg btn-primary btn-block', to: firstLessonPath },\n\t        '\\u56DE\\u5230\\u7B2C\\u4E00\\u4E2A\\u5C0F\\u8282'\n\t      ),\n\t      _react2.default.createElement(_ButtonSpacer2.default, null),\n\t      _react2.default.createElement(\n\t        _Button2.default,\n\t        {\n\t          block: true,\n\t          bsSize: 'lg',\n\t          className: 'btn-primary-invert',\n\t          onClick: handleCurriculumClick\n\t        },\n\t        '\\u67E5\\u770B\\u6240\\u6709\\u7684\\u8BFE\\u7A0B'\n\t      ),\n\t      _react2.default.createElement(_ButtonSpacer2.default, null),\n\t      _react2.default.createElement('hr', null)\n\t    ),\n\t    _react2.default.createElement(\n\t      _FullWidthRow2.default,\n\t      null,\n\t      _react2.default.createElement(\n\t        'h2',\n\t        { className: 'intro-toc-title' },\n\t        '\\u8BFE\\u7A0B\\u76EE\\u5F55'\n\t      ),\n\t      _react2.default.createElement(\n\t        _ListGroup2.default,\n\t        { className: 'intro-toc' },\n\t        allChallengeNode ? renderMenuItems(allChallengeNode) : null\n\t      )\n\t    )\n\t  );\n\t}\n\t\n\tIntroductionPage.displayName = 'IntroductionPage';\n\tIntroductionPage.propTypes = propTypes;\n\t\n\texports.default = IntroductionPage;\n\tvar query = exports.query = '** extracted graphql fragment **';\n\n/***/ }),\n\n/***/ 1249:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-introduction-intro-js-8420b7907cdeadcefece.js","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _elementType = _interopRequireDefault(require(\"prop-types-extra/lib/elementType\"));\n\nvar _ListGroupItem = _interopRequireDefault(require(\"./ListGroupItem\"));\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _ValidComponentChildren = _interopRequireDefault(require(\"./utils/ValidComponentChildren\"));\n\nvar propTypes = {\n  /**\n   * You can use a custom element type for this component.\n   *\n   * If not specified, it will be treated as `'li'` if every child is a\n   * non-actionable `<ListGroupItem>`, and `'div'` otherwise.\n   */\n  componentClass: _elementType.default\n};\n\nfunction getDefaultComponent(children) {\n  if (!children) {\n    // FIXME: This is the old behavior. Is this right?\n    return 'div';\n  }\n\n  if (_ValidComponentChildren.default.some(children, function (child) {\n    return child.type !== _ListGroupItem.default || child.props.href || child.props.onClick;\n  })) {\n    return 'div';\n  }\n\n  return 'ul';\n}\n\nvar ListGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(ListGroup, _React$Component);\n\n  function ListGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ListGroup.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        _this$props$component = _this$props.componentClass,\n        Component = _this$props$component === void 0 ? getDefaultComponent(children) : _this$props$component,\n        className = _this$props.className,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"children\", \"componentClass\", \"className\"]);\n\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);\n\n    var useListItem = Component === 'ul' && _ValidComponentChildren.default.every(children, function (child) {\n      return child.type === _ListGroupItem.default;\n    });\n\n    return _react.default.createElement(Component, (0, _extends2.default)({}, elementProps, {\n      className: (0, _classnames.default)(className, classes)\n    }), useListItem ? _ValidComponentChildren.default.map(children, function (child) {\n      return (0, _react.cloneElement)(child, {\n        listItem: true\n      });\n    }) : children);\n  };\n\n  return ListGroup;\n}(_react.default.Component);\n\nListGroup.propTypes = propTypes;\n\nvar _default = (0, _bootstrapUtils.bsClass)('list-group', ListGroup);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-bootstrap/lib/ListGroup.js\n// module id = 4402\n// module chunks = 125088136674209","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/values\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _StyleConfig = require(\"./utils/StyleConfig\");\n\nvar propTypes = {\n  active: _propTypes.default.any,\n  disabled: _propTypes.default.any,\n  header: _propTypes.default.node,\n  listItem: _propTypes.default.bool,\n  onClick: _propTypes.default.func,\n  href: _propTypes.default.string,\n  type: _propTypes.default.string\n};\nvar defaultProps = {\n  listItem: false\n};\n\nvar ListGroupItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(ListGroupItem, _React$Component);\n\n  function ListGroupItem() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ListGroupItem.prototype;\n\n  _proto.renderHeader = function renderHeader(header, headingClassName) {\n    if (_react.default.isValidElement(header)) {\n      return (0, _react.cloneElement)(header, {\n        className: (0, _classnames.default)(header.props.className, headingClassName)\n      });\n    }\n\n    return _react.default.createElement(\"h4\", {\n      className: headingClassName\n    }, header);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        disabled = _this$props.disabled,\n        className = _this$props.className,\n        header = _this$props.header,\n        listItem = _this$props.listItem,\n        children = _this$props.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"active\", \"disabled\", \"className\", \"header\", \"listItem\", \"children\"]);\n\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = (0, _extends2.default)({}, (0, _bootstrapUtils.getClassSet)(bsProps), {\n      active: active,\n      disabled: disabled\n    });\n    var Component;\n\n    if (elementProps.href) {\n      Component = 'a';\n    } else if (elementProps.onClick) {\n      Component = 'button';\n      elementProps.type = elementProps.type || 'button';\n    } else if (listItem) {\n      Component = 'li';\n    } else {\n      Component = 'span';\n    }\n\n    elementProps.className = (0, _classnames.default)(className, classes); // TODO: Deprecate `header` prop.\n\n    if (header) {\n      return _react.default.createElement(Component, elementProps, this.renderHeader(header, (0, _bootstrapUtils.prefix)(bsProps, 'heading')), _react.default.createElement(\"p\", {\n        className: (0, _bootstrapUtils.prefix)(bsProps, 'text')\n      }, children));\n    }\n\n    return _react.default.createElement(Component, elementProps, children);\n  };\n\n  return ListGroupItem;\n}(_react.default.Component);\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\n\nvar _default = (0, _bootstrapUtils.bsClass)('list-group-item', (0, _bootstrapUtils.bsStyles)((0, _values.default)(_StyleConfig.State), ListGroupItem));\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-bootstrap/lib/ListGroupItem.js\n// module id = 729\n// module chunks = 125088136674209","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\n// TODO: This module should be ElementChildren, and should use named exports.\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid components\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func.\n * @param {*} context Context for func.\n * @return {object} Object containing the ordered map of results.\n */\nfunction map(children, func, context) {\n  var index = 0;\n  return _react.default.Children.map(children, function (child) {\n    if (!_react.default.isValidElement(child)) {\n      return child;\n    }\n\n    return func.call(context, child, index++);\n  });\n}\n/**\n * Iterates through children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func.\n * @param {*} context Context for context.\n */\n\n\nfunction forEach(children, func, context) {\n  var index = 0;\n\n  _react.default.Children.forEach(children, function (child) {\n    if (!_react.default.isValidElement(child)) {\n      return;\n    }\n\n    func.call(context, child, index++);\n  });\n}\n/**\n * Count the number of \"valid components\" in the Children container.\n *\n * @param {?*} children Children tree container.\n * @returns {number}\n */\n\n\nfunction count(children) {\n  var result = 0;\n\n  _react.default.Children.forEach(children, function (child) {\n    if (!_react.default.isValidElement(child)) {\n      return;\n    }\n\n    ++result;\n  });\n\n  return result;\n}\n/**\n * Finds children that are typically specified as `props.children`,\n * but only iterates over children that are \"valid components\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func.\n * @param {*} context Context for func.\n * @returns {array} of children that meet the func return statement\n */\n\n\nfunction filter(children, func, context) {\n  var index = 0;\n  var result = [];\n\n  _react.default.Children.forEach(children, function (child) {\n    if (!_react.default.isValidElement(child)) {\n      return;\n    }\n\n    if (func.call(context, child, index++)) {\n      result.push(child);\n    }\n  });\n\n  return result;\n}\n\nfunction find(children, func, context) {\n  var index = 0;\n  var result;\n\n  _react.default.Children.forEach(children, function (child) {\n    if (result) {\n      return;\n    }\n\n    if (!_react.default.isValidElement(child)) {\n      return;\n    }\n\n    if (func.call(context, child, index++)) {\n      result = child;\n    }\n  });\n\n  return result;\n}\n\nfunction every(children, func, context) {\n  var index = 0;\n  var result = true;\n\n  _react.default.Children.forEach(children, function (child) {\n    if (!result) {\n      return;\n    }\n\n    if (!_react.default.isValidElement(child)) {\n      return;\n    }\n\n    if (!func.call(context, child, index++)) {\n      result = false;\n    }\n  });\n\n  return result;\n}\n\nfunction some(children, func, context) {\n  var index = 0;\n  var result = false;\n\n  _react.default.Children.forEach(children, function (child) {\n    if (result) {\n      return;\n    }\n\n    if (!_react.default.isValidElement(child)) {\n      return;\n    }\n\n    if (func.call(context, child, index++)) {\n      result = true;\n    }\n  });\n\n  return result;\n}\n\nfunction toArray(children) {\n  var result = [];\n\n  _react.default.Children.forEach(children, function (child) {\n    if (!_react.default.isValidElement(child)) {\n      return;\n    }\n\n    result.push(child);\n  });\n\n  return result;\n}\n\nvar _default = {\n  map: map,\n  forEach: forEach,\n  count: count,\n  find: find,\n  filter: filter,\n  every: every,\n  some: some,\n  toArray: toArray\n};\nexports.default = _default;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-bootstrap/lib/utils/ValidComponentChildren.js\n// module id = 498\n// module chunks = 114276838955818 125088136674209","module.exports = [{\"english\":\"Responsive Web Design\",\"chinese\":\"响应式 Web 设计\"},{\"english\":\"Javascript Algorithms And Data Structures\",\"chinese\":\"算法和数据结构\"},{\"english\":\"Front End Libraries\",\"chinese\":\"前端库和框架\"},{\"english\":\"Data Visualization\",\"chinese\":\"数据可视化\"},{\"english\":\"Apis And Microservices\",\"chinese\":\"API 和微服务\"},{\"english\":\"Information Security And Quality Assurance\",\"chinese\":\"信息安全和质量保证\"},{\"english\":\"Coding Interview Prep\",\"chinese\":\"面试攻略\"},{\"english\":\"Basic HTML and HTML5\",\"chinese\":\"HTML 基础\"},{\"english\":\"Basic CSS\",\"chinese\":\"CSS 基础\"},{\"english\":\"Applied Visual Design\",\"chinese\":\"应用视觉设计\"},{\"english\":\"Applied Accessibility\",\"chinese\":\"应用无障碍\"},{\"english\":\"Responsive Web Design Principles\",\"chinese\":\"响应式 Web 设计原则\"},{\"english\":\"CSS Flexbox\",\"chinese\":\"CSS 弹性盒子\"},{\"english\":\"CSS Grid\",\"chinese\":\"CSS 网格\"},{\"english\":\"Responsive Web Design Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Basic JavaScript\",\"chinese\":\"JavaScript 基础\"},{\"english\":\"ES6\",\"chinese\":\"ES6\"},{\"english\":\"Regular Expressions\",\"chinese\":\"正则表达式\"},{\"english\":\"Debugging\",\"chinese\":\"调试\"},{\"english\":\"Basic Data Structures\",\"chinese\":\"数据结构基础\"},{\"english\":\"Basic Algorithm Scripting\",\"chinese\":\"算法基础\"},{\"english\":\"Object Oriented Programming\",\"chinese\":\"面向对象编程\"},{\"english\":\"Functional Programming\",\"chinese\":\"函数式编程\"},{\"english\":\"Intermediate Algorithm Scripting\",\"chinese\":\"算法中级\"},{\"english\":\"JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Bootstrap\",\"chinese\":\"Bootstrap\"},{\"english\":\"jQuery\",\"chinese\":\"jQuery\"},{\"english\":\"Sass\",\"chinese\":\"Sass\"},{\"english\":\"React\",\"chinese\":\"React\"},{\"english\":\"Redux\",\"chinese\":\"Redux\"},{\"english\":\"React and Redux\",\"chinese\":\"React 和 Redux\"},{\"english\":\"Front End Libraries Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Data Visualization with D3\",\"chinese\":\"用 D3 实现数据可视化\"},{\"english\":\"JSON APIs and Ajax\",\"chinese\":\"JSON 和 Ajax\"},{\"english\":\"Data Visualization Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Managing Packages with Npm\",\"chinese\":\"用 Npm 来管理模块\"},{\"english\":\"Basic Node and Express\",\"chinese\":\"Node 和 Express 基础\"},{\"english\":\"MongoDB and Mongoose\",\"chinese\":\"MongoDB 和 Mongoose\"},{\"english\":\"Apis and Microservices Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Information Security with HelmetJS\",\"chinese\":\"信息安全——Helmet.js\"},{\"english\":\"Quality Assurance and Testing with Chai\",\"chinese\":\"质量保证和测试——Chai.js\"},{\"english\":\"Advanced Node and Express\",\"chinese\":\"Node 和 Express 高级\"},{\"english\":\"Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Algorithms\",\"chinese\":\"算法\"},{\"english\":\"Data Structures\",\"chinese\":\"数据结构\"},{\"english\":\"Take Home Projects\",\"chinese\":\"私人项目\"},{\"english\":\"Rosetta Code\",\"chinese\":\"罗塞塔代码\"},{\"english\":\"Project Euler\",\"chinese\":\"欧拉计划\"},{\"english\":\"Introduction to Basic HTML and HTML5\",\"chinese\":\"HTML 基础介绍\"},{\"english\":\"Say Hello to HTML Elements\",\"chinese\":\"向 HTML 元素问好\"},{\"english\":\"Headline with the h2 Element\",\"chinese\":\"用 h2 元素代表副标题\"},{\"english\":\"Inform with the Paragraph Element\",\"chinese\":\"用 p 元素代表段落\"},{\"english\":\"Fill in the Blank with Placeholder Text\",\"chinese\":\"用占位符文本填充空白\"},{\"english\":\"Uncomment HTML\",\"chinese\":\"去除 HTML 的注释\"},{\"english\":\"Comment out HTML\",\"chinese\":\"给 HTML 添加注释\"},{\"english\":\"Delete HTML Elements\",\"chinese\":\"删除 HTML 元素\"},{\"english\":\"Introduction to HTML5 Elements\",\"chinese\":\"HTML5 元素介绍\"},{\"english\":\"Add Images to Your Website\",\"chinese\":\"给网站添加图片\"},{\"english\":\"Link to External Pages with Anchor Elements\",\"chinese\":\"用锚点实现网页间的跳转\"},{\"english\":\"Link to Internal Sections of a Page with Anchor Elements\",\"chinese\":\"用锚点实现网页内部跳转\"},{\"english\":\"Nest an Anchor Element within a Paragraph\",\"chinese\":\"将锚点嵌套在段落中\"},{\"english\":\"Make Dead Links Using the Hash Symbol\",\"chinese\":\"用 # 号来创建固定链接\"},{\"english\":\"Turn an Image into a Link\",\"chinese\":\"给图片添加链接\"},{\"english\":\"Create a Bulleted Unordered List\",\"chinese\":\"创建一个无序列表\"},{\"english\":\"Create an Ordered List\",\"chinese\":\"创建一个有序列表\"},{\"english\":\"Create a Text Field\",\"chinese\":\"创建一个输入框\"},{\"english\":\"Add Placeholder Text to a Text Field\",\"chinese\":\"给输入框添加占位符文本\"},{\"english\":\"Create a Form Element\",\"chinese\":\"创建一个表单\"},{\"english\":\"Add a Submit Button to a Form\",\"chinese\":\"给表单添加提交按钮\"},{\"english\":\"Use HTML5 to Require a Field\",\"chinese\":\"给表单添加一个必填字段\"},{\"english\":\"Create a Set of Radio Buttons\",\"chinese\":\"创建一组单选按钮\"},{\"english\":\"Create a Set of Checkboxes\",\"chinese\":\"创建一组复选框\"},{\"english\":\"Check Radio Buttons and Checkboxes by Default\",\"chinese\":\"给单选按钮和复选框添加默认选中项\"},{\"english\":\"Nest Many Elements within a Single div Element\",\"chinese\":\"元素嵌套\"},{\"english\":\"Declare the Doctype of an HTML Document\",\"chinese\":\"声明 HTML 文档的文档类型\"},{\"english\":\"Define the Head and Body of an HTML Document\",\"chinese\":\"定义 HTML 文档的标题和正文\"},{\"english\":\"Introduction to Basic CSS\",\"chinese\":\"CSS 基础介绍\"},{\"english\":\"Change the Color of Text\",\"chinese\":\"更改文本的颜色\"},{\"english\":\"Use CSS Selectors to Style Elements\",\"chinese\":\"使用元素选择器来设置元素的样式\"},{\"english\":\"Use a CSS Class to Style an Element\",\"chinese\":\"使用 class 选择器设置单个元素的样式\"},{\"english\":\"Style Multiple Elements with a CSS Class\",\"chinese\":\"使用 class 选择器设置多个元素的样式\"},{\"english\":\"Change the Font Size of an Element\",\"chinese\":\"更改元素的字体大小\"},{\"english\":\"Set the Font Family of an Element\",\"chinese\":\"设置元素的字体家族\"},{\"english\":\"Import a Google Font\",\"chinese\":\"引入谷歌字体\"},{\"english\":\"Specify How Fonts Should Degrade\",\"chinese\":\"字体如何优雅降级\"},{\"english\":\"Size Your Images\",\"chinese\":\"调整图片的大小\"},{\"english\":\"Add Borders Around Your Elements\",\"chinese\":\"在元素周围添加边框\"},{\"english\":\"Add Rounded Corners with border-radius\",\"chinese\":\"用 border-radius 添加圆角边框\"},{\"english\":\"Make Circular Images with a border-radius\",\"chinese\":\"用 border-radius 制作圆形图片\"},{\"english\":\"Give a Background Color to a div Element\",\"chinese\":\"给 div 元素添加背景色\"},{\"english\":\"Set the id of an Element\",\"chinese\":\"设置元素的 id\"},{\"english\":\"Use an id Attribute to Style an Element\",\"chinese\":\"使用 id 属性来设定元素的样式\"},{\"english\":\"Adjust the Padding of an Element\",\"chinese\":\"调整元素的内边距\"},{\"english\":\"Adjust the Margin of an Element\",\"chinese\":\"调整元素的外边距\"},{\"english\":\"Add a Negative Margin to an Element\",\"chinese\":\"给元素添加负外边距\"},{\"english\":\"Add Different Padding to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的内边距\"},{\"english\":\"Add Different Margins to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的外边距\"},{\"english\":\"Use Clockwise Notation to Specify the Padding of an Element\",\"chinese\":\"使用顺时针方向指定元素的内边距\"},{\"english\":\"Use Clockwise Notation to Specify the Margin of an Element\",\"chinese\":\"使用顺时针方向指定元素的外边距\"},{\"english\":\"Use Attribute Selectors to Style Elements\",\"chinese\":\"使用属性选择器来设置元素的样式\"},{\"english\":\"Understand Absolute versus Relative Units\",\"chinese\":\"理解绝对单位与相对单位\"},{\"english\":\"Style the HTML Body Element\",\"chinese\":\"给 HTML 的 Body 元素添加样式\"},{\"english\":\"Inherit Styles from the Body Element\",\"chinese\":\"从 Body 元素继承样式\"},{\"english\":\"Prioritize One Style Over Another\",\"chinese\":\"样式中的优先级\"},{\"english\":\"Override Styles in Subsequent CSS\",\"chinese\":\"Class 选择器的优先级高于继承样式\"},{\"english\":\"Override Class Declarations by Styling ID Attributes\",\"chinese\":\"ID 选择器优先级高于 Class 选择器\"},{\"english\":\"Override Class Declarations with Inline Styles\",\"chinese\":\"内联样式的优先级高于 ID 选择器\"},{\"english\":\"Override All Other Styles by using Important\",\"chinese\":\"Important 的优先级最高\"},{\"english\":\"Use Hex Code for Specific Colors\",\"chinese\":\"使用十六进制编码获得指定颜色\"},{\"english\":\"Use Hex Code to Mix Colors\",\"chinese\":\"使用十六进制编码混合颜色\"},{\"english\":\"Use Abbreviated Hex Code\",\"chinese\":\"使用缩写的十六进制编码\"},{\"english\":\"Use RGB values to Color Elements\",\"chinese\":\"使用 RGB 值为元素上色\"},{\"english\":\"Use RGB to Mix Colors\",\"chinese\":\"使用 RGB 混合颜色\"},{\"english\":\"Use CSS Variables to change several elements at once\",\"chinese\":\"使用 CSS 变量一次更改多个元素\"},{\"english\":\"Create a custom CSS Variable\",\"chinese\":\"创建一个自定义的 CSS 变量\"},{\"english\":\"Use a custom CSS Variable\",\"chinese\":\"使用一个自定义的 CSS 变量\"},{\"english\":\"Attach a Fallback value to a CSS Variable\",\"chinese\":\"给 CSS 变量附加回退值\"},{\"english\":\"Cascading CSS variables\",\"chinese\":\"层级 CSS 变量\"},{\"english\":\"Change a variable for a specific area\",\"chinese\":\"更改特定区域的变量\"},{\"english\":\"Use a media query to change a variable\",\"chinese\":\"使用媒体查询更改变量\"},{\"english\":\"Introduction to the Applied Visual Design Challenges\",\"chinese\":\"应用视觉设计介绍\"},{\"english\":\"Create Visual Balance Using the text-align Property\",\"chinese\":\"使用 text-align 属性创建视觉平衡\"},{\"english\":\"Adjust the Width of an Element Using the width Property\",\"chinese\":\"使用 width 属性调整元素的宽度\"},{\"english\":\"Adjust the Height of an Element Using the height Property\",\"chinese\":\"使用 height 属性调整元素的宽度\"},{\"english\":\"Use the strong Tag to Make Text Bold\",\"chinese\":\"使用 strong 标签加粗文本\"},{\"english\":\"Use the u Tag to Underline Text\",\"chinese\":\"使用 u 标签给文本添加下划线\"},{\"english\":\"Use the em Tag to Italicize Text\",\"chinese\":\"使用 em 标签强调文本\"},{\"english\":\"Use the s Tag to Strikethrough Text\",\"chinese\":\"使用 s 标签给文本添加删除线\"},{\"english\":\"Create a Horizontal Line Using the hr Element\",\"chinese\":\"使用 hr 标签创建水平线\"},{\"english\":\"Adjust the background-color Property of Text\",\"chinese\":\"调整文本的背景色\"},{\"english\":\"Adjust the Size of a Header Versus a Paragraph Tag\",\"chinese\":\"调整标题与段落的大小\"},{\"english\":\"Add a box-shadow to a Card-like Element\",\"chinese\":\"给卡片元素添加 box-shadow\"},{\"english\":\"Decrease the Opacity of an Element\",\"chinese\":\"降低元素的 opactiy\"},{\"english\":\"Use the text-transform Property to Make Text Uppercase\",\"chinese\":\"使用 text-transform 属性给文本添加大写效果\"},{\"english\":\"Set the font-size for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-size\"},{\"english\":\"Set the font-weight for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-weight\"},{\"english\":\"Set the font-size of Paragraph Text\",\"chinese\":\"设置段落文本的 font-size\"},{\"english\":\"Set the line-height of Paragraphs\",\"chinese\":\"设置段落的 line-height\"},{\"english\":\"Adjust the Hover State of an Anchor Tag\",\"chinese\":\"调整锚点的悬停状态\"},{\"english\":\"Change an Element's Relative Position\",\"chinese\":\"更改元素的相对位置\"},{\"english\":\"Move a Relatively Positioned Element with CSS Offsets\",\"chinese\":\"使用 CSS 偏移移动相对定位的元素\"},{\"english\":\"Lock an Element to its Parent with Absolute Positioning\",\"chinese\":\"绝对定位的参照物是元素的父元素\"},{\"english\":\"Lock an Element to the Browser Window with Fixed Positioning\",\"chinese\":\"固定定位的参照物是浏览器的窗口\"},{\"english\":\"Push Elements Left or Right with the float Property\",\"chinese\":\"使用 float 属性将元素左浮动或右浮动\"},{\"english\":\"Change the Position of Overlapping Elements with the z-index Property\",\"chinese\":\"使用 z-index 属性更改重叠元素的位置\"},{\"english\":\"Center an Element Horizontally Using the margin Property\",\"chinese\":\"使用 margin 属性将元素水平居中\"},{\"english\":\"Learn about Complementary Colors\",\"chinese\":\"了解互补色\"},{\"english\":\"Learn about Tertiary Colors\",\"chinese\":\"了解三原色\"},{\"english\":\"Adjust the Color of Various Elements to Complementary Colors\",\"chinese\":\"将各种元素的颜色调整为互补色\"},{\"english\":\"Adjust the Hue of a Color\",\"chinese\":\"调整颜色的色相\"},{\"english\":\"Adjust the Tone of a Color\",\"chinese\":\"调整颜色的色调\"},{\"english\":\"Create a Gradual CSS Linear Gradient\",\"chinese\":\"创建一个 CSS 线性渐变\"},{\"english\":\"Use a CSS Linear Gradient to Create a Striped Element\",\"chinese\":\"使用 CSS 线性渐变创建条纹元素\"},{\"english\":\"Create Texture by Adding a Subtle Pattern as a Background Image\",\"chinese\":\"通过添加细微图案作为背景图像来创建纹理\"},{\"english\":\"Use the CSS Transform scale Property to Change the Size of an Element\",\"chinese\":\"使用 CSS Transform scale 属性可以更改元素的大小\"},{\"english\":\"Use the CSS Transform scale Property to Scale an Element on Hover\",\"chinese\":\"使用CSS Transform scale 属性在悬停时缩放元素\"},{\"english\":\"Use the CSS Transform Property skewX to Skew an Element Along the X-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿X轴倾斜元素\"},{\"english\":\"Use the CSS Transform Property skewY to Skew an Element Along the Y-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿Y轴倾斜元素\"},{\"english\":\"Create a Graphic Using CSS\",\"chinese\":\"使用 CSS 创建一个图形\"},{\"english\":\"Create a More Complex Shape Using CSS and HTML\",\"chinese\":\"使用 CSS 和 HTML 创建更复杂的形状\"},{\"english\":\"Learn How the CSS @keyframes and animation Properties Work\",\"chinese\":\"了解 CSS 的关键帧和动画是如何工作的\"},{\"english\":\"Use CSS Animation to Change the Hover State of a Button\",\"chinese\":\"使用CSS动画更改按钮的悬停状态\"},{\"english\":\"Modify Fill Mode of an Animation\",\"chinese\":\"修改动画的填充模式\"},{\"english\":\"Create Movement Using CSS Animation\",\"chinese\":\"使用 CSS 动画创建运动\"},{\"english\":\"Create Visual Direction by Fading an Element from Left to Right\",\"chinese\":\"通过从左到右淡化元素来创建视觉方向\"},{\"english\":\"Animate Elements Continually Using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作永不停止的动画\"},{\"english\":\"Make a CSS Heartbeat using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作 CSS 心跳\"},{\"english\":\"Animate Elements at Variable Rates\",\"chinese\":\"以可变速率来给元素添加动画\"},{\"english\":\"Animate Multiple Elements at Variable Rates\",\"chinese\":\"以可变速率来给多个元素添加动画\"},{\"english\":\"Change Animation Timing with Keywords\",\"chinese\":\"使用关键字更改动画定时器\"},{\"english\":\"Learn How Bezier Curves Work\",\"chinese\":\"学习贝塞尔曲线的原理\"},{\"english\":\"Use a Bezier Curve to Move a Graphic\",\"chinese\":\"使用贝塞尔曲线移动图形\"},{\"english\":\"Make Motion More Natural Using a Bezier Curve\",\"chinese\":\"使用贝塞尔曲线让运动更加自然\"},{\"english\":\"Introduction to the Applied Accessibility Challenges\",\"chinese\":\"应用无障碍介绍\"},{\"english\":\"Add a Text Alternative to Images for Visually Impaired Accessibility\",\"chinese\":\"为视觉受损的用户添加替代图像的文本\"},{\"english\":\"Know When Alt Text Should be Left Blank\",\"chinese\":\"知道 Alt 文本何时应该留空\"},{\"english\":\"Use Headings to Show Hierarchical Relationships of Content\",\"chinese\":\"使用标题显示内容的层次关系\"},{\"english\":\"Jump Straight to the Content Using the main Element\",\"chinese\":\"使用 main 元素包裹主题内容\"},{\"english\":\"Wrap Content in the article Element\",\"chinese\":\"使用 article 元素包裹文章内容\"},{\"english\":\"Make Screen Reader Navigation Easier with the header Landmark\",\"chinese\":\"使用 header 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the nav Landmark\",\"chinese\":\"使用 nav 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the footer Landmark\",\"chinese\":\"使用 footer 元素使屏幕阅读器更容易导航\"},{\"english\":\"Improve Accessibility of Audio Content with the audio Element\",\"chinese\":\"使用 audio 元素提高音频内容的可访问性\"},{\"english\":\"Improve Chart Accessibility with the figure Element\",\"chinese\":\"使用 figure 元素提高图表的可访问性\"},{\"english\":\"Improve Form Field Accessibility with the label Element\",\"chinese\":\"使用 label 元素提高表单的可访问性\"},{\"english\":\"Wrap Radio Buttons in a fieldset Element for Better Accessibility\",\"chinese\":\"将单选按钮包裹在 fieldset 元素中以获得更好的可访问性\"},{\"english\":\"Add an Accessible Date Picker\",\"chinese\":\"添加可访问的日期选择器\"},{\"english\":\"Standardize Times with the HTML5 datetime Attribute\",\"chinese\":\"使用 HTML5 的 datatime 属性标准化时间\"},{\"english\":\"Make Elements Only Visible to a Screen Reader by Using Custom CSS\",\"chinese\":\"使用自定义 CSS 让元素仅对屏幕阅读器可见\"},{\"english\":\"Improve Readability with High Contrast Text\",\"chinese\":\"使用高对比度文本提高可读性\"},{\"english\":\"Avoid Colorblindness Issues by Using Sufficient Contrast\",\"chinese\":\"通过使用充足的对比度避免色盲问题\"},{\"english\":\"Avoid Colorblindness Issues by Carefully Choosing Colors that Convey Information\",\"chinese\":\"通过仔细选择传达信息的颜色来避免色盲问题\"},{\"english\":\"Give Links Meaning by Using Descriptive Link Text\",\"chinese\":\"使用描述性链接文本赋予链接含义\"},{\"english\":\"Make Links Navigatable with HTML Access Keys\",\"chinese\":\"通过给元素添加 accesskey 属性来让用户可以在链接之间快速导航\"},{\"english\":\"Use tabindex to Add Keyboard Focus to an Element\",\"chinese\":\"使用 tabindex 将键盘焦点添加到元素中\"},{\"english\":\"Use tabindex to Specify the Order of Keyboard Focus for Several Elements\",\"chinese\":\"使用 tabindex 指定多个元素的键盘焦点顺序\"},{\"english\":\"Introduction to the Responsive Web Design Challenges\",\"chinese\":\"响应式 Web 设计介绍\"},{\"english\":\"Create a Media Query\",\"chinese\":\"创建一个媒介查询\"},{\"english\":\"Make an Image Responsive\",\"chinese\":\"使图片根据设备尺寸自如响应\"},{\"english\":\"Use a Retina Image for Higher Resolution Displays\",\"chinese\":\"针对高分辨率屏幕应使用视网膜图片\"},{\"english\":\"Make Typography Responsive\",\"chinese\":\"使排版根据设备尺寸自如响应\"},{\"english\":\"Introduction to the CSS Flexbox Challenges\",\"chinese\":\"CSS弹性盒子介绍\"},{\"english\":\"Use display: flex to Position Two Boxes\",\"chinese\":\"使用 display: flex 定位两个盒子\"},{\"english\":\"Add Flex Superpowers to the Tweet Embed\",\"chinese\":\"在推文中添加弹性盒子布局\"},{\"english\":\"Use the flex-direction Property to Make a Row\",\"chinese\":\"使用 flex-direction 属性创建一行\"},{\"english\":\"Apply the flex-direction Property to Create Rows in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多行\"},{\"english\":\"Use the flex-direction Property to Make a Column\",\"chinese\":\"使用 flex-direction 属性创建一列\"},{\"english\":\"Apply the flex-direction Property to Create a Column in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多列\"},{\"english\":\"Align Elements Using the justify-content Property\",\"chinese\":\"使用 justify-content 属性对齐元素\"},{\"english\":\"Use the justify-content Property in the Tweet Embed\",\"chinese\":\"在推文中使用 justify-content 属性\"},{\"english\":\"Align Elements Using the align-items Property\",\"chinese\":\"使用 align-items 属性对齐元素\"},{\"english\":\"Use the align-items Property in the Tweet Embed\",\"chinese\":\"在推文中使用 align-items 属性\"},{\"english\":\"Use the flex-wrap Property to Wrap a Row or Column\",\"chinese\":\"使用 flex-wrap 属性包裹一行或一列\"},{\"english\":\"Use the flex-shrink Property to Shrink Items\",\"chinese\":\"使用 flex-shrink 属性收缩项目\"},{\"english\":\"Use the flex-grow Property to Expand Items\",\"chinese\":\"使用 flex-shrink 属性扩展项目\"},{\"english\":\"Use the flex-basis Property to Set the Initial Size of an Item\",\"chinese\":\"使用 flex-basic 属性设置项目的初始大小\"},{\"english\":\"Use the flex Shorthand Property\",\"chinese\":\"使用 flex 短方法属性\"},{\"english\":\"Use the order Property to Rearrange Items\",\"chinese\":\"使用 order 属性重新排列项目\"},{\"english\":\"Use the align-self Property\",\"chinese\":\"使用 align-self 属性\"},{\"english\":\"Introduction to the CSS Grid Challenges\",\"chinese\":\"CSS 网格介绍\"},{\"english\":\"Create Your First CSS Grid\",\"chinese\":\"创建你的第一个 CSS 网格\"},{\"english\":\"Add Columns with grid-template-columns\",\"chinese\":\"使用 grid-template-columns 添加多列\"},{\"english\":\"Add Rows with grid-template-rows\",\"chinese\":\"使用 grid-template-rows 添加多行\"},{\"english\":\"Use CSS Grid units to Change the Size of Columns and Rows\",\"chinese\":\"使用 CSS 网格单位来更改列和行的大小\"},{\"english\":\"Create a Column Gap Using grid-column-gap\",\"chinese\":\"使用 grid-column-gap 创建多列之间的间距\"},{\"english\":\"Create a Row Gap using grid-row-gap\",\"chinese\":\"使用 grid-row-gap 创建多行之间的间距\"},{\"english\":\"Add Gaps Faster with grid-gap\",\"chinese\":\"使用 grid-gap 更快地添加间距\"},{\"english\":\"Use grid-column to Control Spacing\",\"chinese\":\"使用 grid-column 来控制剩余部分\"},{\"english\":\"Use grid-row to Control Spacing\",\"chinese\":\"使用 grid-row 来控制剩余部分\"},{\"english\":\"Align an Item Horizontally using justify-self\",\"chinese\":\"使用 justify-self 水平对齐项目\"},{\"english\":\"Align an Item Vertically using align-self\",\"chinese\":\"使用 align-self 垂直对齐项目\"},{\"english\":\"Align All Items Horizontally using justify-items\",\"chinese\":\"使用 justify-items 水平对齐所有项目\"},{\"english\":\"Align All Items Vertically using align-items\",\"chinese\":\"使用 align-items 垂直对齐所有项目\"},{\"english\":\"Divide the Grid Into an Area Template\",\"chinese\":\"将网格划分为区域模板\"},{\"english\":\"Place Items in Grid Areas Using the grid-area Property\",\"chinese\":\"使用 grid-area 属性将项目放置在网格区域中\"},{\"english\":\"Use grid-area Without Creating an Areas Template\",\"chinese\":\"使用 grid-area 创建区域模板\"},{\"english\":\"Reduce Repetition Using the repeat Function\",\"chinese\":\"使用 repeat 函数减少重复\"},{\"english\":\"Limit Item Size Using the minmax Function\",\"chinese\":\"使用 minmax 函数限制项目大小\"},{\"english\":\"Create Flexible Layouts Using auto-fill\",\"chinese\":\"使用 auto-fill 创建弹性布局\"},{\"english\":\"Create Flexible Layouts Using auto-fit\",\"chinese\":\"使用 auto-fit 创建弹性布局\"},{\"english\":\"Use Media Queries to Create Responsive Layouts\",\"chinese\":\"使用媒体查询创建响应式布局\"},{\"english\":\"Create Grids within Grids\",\"chinese\":\"在网格中创建网格\"},{\"english\":\"Introduction to the Responsive Web Design Projects\",\"chinese\":\"响应式 Web 设计项目介绍\"},{\"english\":\"Build a Tribute Page\",\"chinese\":\"制作一个致敬页\"},{\"english\":\"Build a Survey Form\",\"chinese\":\"制作一个调查表格\"},{\"english\":\"Build a Product Landing Page\",\"chinese\":\"制作一个产品登录页\"},{\"english\":\"Build a Technical Documentation Page\",\"chinese\":\"制作一个技术文档页面\"},{\"english\":\"Build a Personal Portfolio Webpage\",\"chinese\":\"制作一个个人作品集网页\"},{\"english\":\"Introduction to JavaScript\",\"chinese\":\"JavaScript 介绍\"},{\"english\":\"Comment Your JavaScript Code\",\"chinese\":\"给代码添加注释\"},{\"english\":\"Declare JavaScript Variables\",\"chinese\":\"声明变量\"},{\"english\":\"Storing Values with the Assignment Operator\",\"chinese\":\"使用赋值运算符存储值\"},{\"english\":\"Initializing Variables with the Assignment Operator\",\"chinese\":\"使用赋值运算符初始化变量\"},{\"english\":\"Understanding Uninitialized Variables\",\"chinese\":\"理解未初始化的变量\"},{\"english\":\"Understanding Case Sensitivity in Variables\",\"chinese\":\"了解变量名区分大小写\"},{\"english\":\"Add Two Numbers with JavaScript\",\"chinese\":\"加法运算\"},{\"english\":\"Subtract One Number from Another with JavaScript\",\"chinese\":\"减法运算\"},{\"english\":\"Multiply Two Numbers with JavaScript\",\"chinese\":\"乘法运算\"},{\"english\":\"Divide One Number by Another with JavaScript\",\"chinese\":\"除法运算\"},{\"english\":\"Increment a Number with JavaScript\",\"chinese\":\"数字递增\"},{\"english\":\"Decrement a Number with JavaScript\",\"chinese\":\"数字递减\"},{\"english\":\"Create Decimal Numbers with JavaScript\",\"chinese\":\"创建一个小数\"},{\"english\":\"Multiply Two Decimals with JavaScript\",\"chinese\":\"两个小数相乘\"},{\"english\":\"Divide One Decimal by Another with JavaScript\",\"chinese\":\"两个小数相除\"},{\"english\":\"Finding a Remainder in JavaScript\",\"chinese\":\"求余运算\"},{\"english\":\"Compound Assignment With Augmented Addition\",\"chinese\":\"复合赋值之 +=\"},{\"english\":\"Compound Assignment With Augmented Subtraction\",\"chinese\":\"复合赋值之 -=\"},{\"english\":\"Compound Assignment With Augmented Multiplication\",\"chinese\":\"复合赋值之 *=\"},{\"english\":\"Compound Assignment With Augmented Division\",\"chinese\":\"复合赋值之 /=\"},{\"english\":\"Declare String Variables\",\"chinese\":\"声明字符串变量\"},{\"english\":\"Escaping Literal Quotes in Strings\",\"chinese\":\"转义字符串中的引号\"},{\"english\":\"Quoting Strings with Single Quotes\",\"chinese\":\"用单引号引用字符串\"},{\"english\":\"Escape Sequences in Strings\",\"chinese\":\"字符串中的转义序列\"},{\"english\":\"Concatenating Strings with Plus Operator\",\"chinese\":\"用加号运算符连接字符串\"},{\"english\":\"Concatenating Strings with the Plus Equals Operator\",\"chinese\":\"用 += 运算符连接字符串\"},{\"english\":\"Constructing Strings with Variables\",\"chinese\":\"用变量构造字符串\"},{\"english\":\"Appending Variables to Strings\",\"chinese\":\"将变量附加到字符串\"},{\"english\":\"Find the Length of a String\",\"chinese\":\"查找字符串的长度\"},{\"english\":\"Use Bracket Notation to Find the First Character in a String\",\"chinese\":\"使用方括号查找字符串中的第一个字符\"},{\"english\":\"Understand String Immutability\",\"chinese\":\"了解字符串的不变性\"},{\"english\":\"Use Bracket Notation to Find the Nth Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符\"},{\"english\":\"Use Bracket Notation to Find the Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的最后一个字符\"},{\"english\":\"Use Bracket Notation to Find the Nth-to-Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符到最后一个字符\"},{\"english\":\"Word Blanks\",\"chinese\":\"填词造句\"},{\"english\":\"Store Multiple Values in one Variable using JavaScript Arrays\",\"chinese\":\"使用 JavaScript 数组将多个值存储在一个变量中\"},{\"english\":\"Nest one Array within Another Array\",\"chinese\":\"将一个数组嵌套在另一个数组中\"},{\"english\":\"Access Array Data with Indexes\",\"chinese\":\"通过索引访问数组中的数据\"},{\"english\":\"Modify Array Data With Indexes\",\"chinese\":\"通过索引修改数组中的数据\"},{\"english\":\"Access Multi-Dimensional Arrays With Indexes\",\"chinese\":\"使用索引访问多维数组\"},{\"english\":\"Manipulate Arrays With push()\",\"chinese\":\"使用 push() 操作数组\"},{\"english\":\"Manipulate Arrays With pop()\",\"chinese\":\"使用 pop() 操作数组\"},{\"english\":\"Manipulate Arrays With shift()\",\"chinese\":\"使用 shift() 操作数组\"},{\"english\":\"Manipulate Arrays With unshift()\",\"chinese\":\"使用 unshift() 操作数组\"},{\"english\":\"Shopping List\",\"chinese\":\"购物清单\"},{\"english\":\"Write Reusable JavaScript with Functions\",\"chinese\":\"用函数编写可重用代码\"},{\"english\":\"Passing Values to Functions with Arguments\",\"chinese\":\"将值传递给带有参数的函数\"},{\"english\":\"Global Scope and Functions\",\"chinese\":\"全局作用域和函数\"},{\"english\":\"Local Scope and Functions\",\"chinese\":\"局部作用域和函数\"},{\"english\":\"Global vs. Local Scope in Functions\",\"chinese\":\"函数中的全局作用域和局部作用域\"},{\"english\":\"Return a Value from a Function with Return\",\"chinese\":\"函数可以返回某个值\"},{\"english\":\"Understanding Undefined Value returned from a Function\",\"chinese\":\"函数也可以返回 undefined\"},{\"english\":\"Assignment with a Returned Value\",\"chinese\":\"用返回值来赋值\"},{\"english\":\"Stand in Line\",\"chinese\":\"排队\"},{\"english\":\"Understanding Boolean Values\",\"chinese\":\"理解布尔值\"},{\"english\":\"Use Conditional Logic with If Statements\",\"chinese\":\"用 if 语句来表达条件逻辑\"},{\"english\":\"Comparison with the Equality Operator\",\"chinese\":\"相等运算符\"},{\"english\":\"Comparison with the Strict Equality Operator\",\"chinese\":\"严格相等运算符\"},{\"english\":\"Practice comparing different values\",\"chinese\":\"比较不同值\"},{\"english\":\"Comparison with the Inequality Operator\",\"chinese\":\"不等运算符\"},{\"english\":\"Comparison with the Strict Inequality Operator\",\"chinese\":\"严格不等运算符\"},{\"english\":\"Comparison with the Greater Than Operator\",\"chinese\":\"大于运算符\"},{\"english\":\"Comparison with the Greater Than Or Equal To Operator\",\"chinese\":\"大于或等于运算符\"},{\"english\":\"Comparison with the Less Than Operator\",\"chinese\":\"小于运算符\"},{\"english\":\"Comparison with the Less Than Or Equal To Operator\",\"chinese\":\"小于或等于运算符\"},{\"english\":\"Comparisons with the Logical And Operator\",\"chinese\":\"逻辑与运算符\"},{\"english\":\"Comparisons with the Logical Or Operator\",\"chinese\":\"逻辑或运算符\"},{\"english\":\"Introducing Else Statements\",\"chinese\":\"介绍 else 语句\"},{\"english\":\"Introducing Else If Statements\",\"chinese\":\"介绍 else if 语句\"},{\"english\":\"Logical Order in If Else Statements\",\"chinese\":\"if else 语句中的逻辑顺序\"},{\"english\":\"Chaining If Else Statements\",\"chinese\":\"多个 if else 语句\"},{\"english\":\"Golf Code\",\"chinese\":\"高尔夫代码\"},{\"english\":\"Selecting from Many Options with Switch Statements\",\"chinese\":\"使用 Switch 语句从许多选项中进行选择\"},{\"english\":\"Adding a Default Option in Switch Statements\",\"chinese\":\"在 Switch 语句中添加默认选项\"},{\"english\":\"Multiple Identical Options in Switch Statements\",\"chinese\":\"在 Switch 语句添加多个相同选项\"},{\"english\":\"Replacing If Else Chains with Switch\",\"chinese\":\"用一个 Switch 语句来替代多个 if else 语句\"},{\"english\":\"Returning Boolean Values from Functions\",\"chinese\":\"从函数返回布尔值\"},{\"english\":\"Return Early Pattern for Functions\",\"chinese\":\"函数执行到 return 语句就结束\"},{\"english\":\"Counting Cards\",\"chinese\":\"21点游戏\"},{\"english\":\"Build JavaScript Objects\",\"chinese\":\"新建 JavaScript 对象\"},{\"english\":\"Accessing Object Properties with Dot Notation\",\"chinese\":\"通过点符号访问对象属性\"},{\"english\":\"Accessing Object Properties with Bracket Notation\",\"chinese\":\"通过方括号访问对象属性\"},{\"english\":\"Accessing Object Properties with Variables\",\"chinese\":\"通过变量访问对象属性\"},{\"english\":\"Updating Object Properties\",\"chinese\":\"更新对象属性\"},{\"english\":\"Add New Properties to a JavaScript Object\",\"chinese\":\"给对象添加新属性\"},{\"english\":\"Delete Properties from a JavaScript Object\",\"chinese\":\"删除对象的属性\"},{\"english\":\"Using Objects for Lookups\",\"chinese\":\"使用对象进行查找\"},{\"english\":\"Testing Objects for Properties\",\"chinese\":\"测试对象的属性\"},{\"english\":\"Manipulating Complex Objects\",\"chinese\":\"操作复杂对象\"},{\"english\":\"Accessing Nested Objects\",\"chinese\":\"访问嵌套对象\"},{\"english\":\"Accessing Nested Arrays\",\"chinese\":\"访问嵌套数组\"},{\"english\":\"Record Collection\",\"chinese\":\"记录集合\"},{\"english\":\"Iterate with JavaScript While Loops\",\"chinese\":\"while 循环\"},{\"english\":\"Iterate with JavaScript For Loops\",\"chinese\":\"for 循环\"},{\"english\":\"Iterate Odd Numbers With a For Loop\",\"chinese\":\"使用 For 循环遍历数组的奇数\"},{\"english\":\"Count Backwards With a For Loop\",\"chinese\":\"使用 For 循环反向遍历数组\"},{\"english\":\"Iterate Through an Array with a For Loop\",\"chinese\":\"使用 For 循环遍历数组\"},{\"english\":\"Nesting For Loops\",\"chinese\":\"循环嵌套\"},{\"english\":\"Iterate with JavaScript Do...While Loops\",\"chinese\":\"do...while 循环\"},{\"english\":\"Profile Lookup\",\"chinese\":\"资料查找\"},{\"english\":\"Generate Random Fractions with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机分数\"},{\"english\":\"Generate Random Whole Numbers with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机整数\"},{\"english\":\"Generate Random Whole Numbers within a Range\",\"chinese\":\"生成某个范围内的随机整数\"},{\"english\":\"Use the parseInt Function\",\"chinese\":\"使用 parseInt 函数\"},{\"english\":\"Use the parseInt Function with a Radix\",\"chinese\":\"使用 parseInt 函数并传入一个基数\"},{\"english\":\"Use the Conditional (Ternary) Operator\",\"chinese\":\"使用三元运算符\"},{\"english\":\"Use Multiple Conditional (Ternary) Operators\",\"chinese\":\"使用多个三元运算符\"},{\"english\":\"Introduction to the ES6 Challenges\",\"chinese\":\"ES6介绍\"},{\"english\":\"Explore Differences Between the var and let Keywords\",\"chinese\":\"探索 var 和 let 关键字之间的差异\"},{\"english\":\"Compare Scopes of the var and let Keywords\",\"chinese\":\"比较 var 和 let 关键字的作用域\"},{\"english\":\"Declare a Read-Only Variable with the const Keyword\",\"chinese\":\"用 const 关键字声明只读变量\"},{\"english\":\"Mutate an Array Declared with const\",\"chinese\":\"改变一个用 const 声明的数组\"},{\"english\":\"Prevent Object Mutation\",\"chinese\":\"防止对象改变\"},{\"english\":\"Use Arrow Functions to Write Concise Anonymous Functions\",\"chinese\":\"使用箭头函数编写简洁的匿名函数\"},{\"english\":\"Write Arrow Functions with Parameters\",\"chinese\":\"编写带参数的箭头函数\"},{\"english\":\"Write Higher Order Arrow Functions\",\"chinese\":\"编写高阶箭头函数\"},{\"english\":\"Set Default Parameters for Your Functions\",\"chinese\":\"设置函数的默认参数\"},{\"english\":\"Use the Rest Operator with Function Parameters\",\"chinese\":\"将 rest 操作符与函数参数一起使用\"},{\"english\":\"Use the Spread Operator to Evaluate Arrays In-Place\",\"chinese\":\"使用 spread 运算符展开数组项\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Objects\",\"chinese\":\"使用解构赋值从对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Nested Objects\",\"chinese\":\"使用解构赋值从嵌套对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Arrays\",\"chinese\":\"使用解构赋值从数组中分配变量\"},{\"english\":\"Use Destructuring Assignment with the Rest Operator to Reassign Array Elements\",\"chinese\":\"使用解构赋值配合 rest 操作符来重新分配数组元素\"},{\"english\":\"Use Destructuring Assignment to Pass an Object as a Function's Parameters\",\"chinese\":\"使用解构赋值将对象作为函数的参数传递\"},{\"english\":\"Create Strings using Template Literals\",\"chinese\":\"使用模板字面量创建字符串\"},{\"english\":\"Write Concise Object Literal Declarations Using Simple Fields\",\"chinese\":\"使用简单字段编写简洁的对象字面量声明\"},{\"english\":\"Write Concise Declarative Functions with ES6\",\"chinese\":\"用 ES6 编写简洁的函数声明\"},{\"english\":\"Use class Syntax to Define a Constructor Function\",\"chinese\":\"使用 class 语法定义构造函数\"},{\"english\":\"Use getters and setters to Control Access to an Object\",\"chinese\":\"使用 getter 和 setter 来控制对象的访问\"},{\"english\":\"Understand the Differences Between import and require\",\"chinese\":\"了解 import 和 require 之间的差异\"},{\"english\":\"Use export to Reuse a Code Block\",\"chinese\":\"用 export 来重用代码块\"},{\"english\":\"Use * to Import Everything from a File\",\"chinese\":\"用 * 从文件中导入所有内容\"},{\"english\":\"Create an Export Fallback with export default\",\"chinese\":\"用 export default 创建一个默认导出\"},{\"english\":\"Import a Default Export\",\"chinese\":\"导入一个默认的导出\"},{\"english\":\"Introduction to the Regular Expression Challenges\",\"chinese\":\"正则表达式介绍\"},{\"english\":\"Using the Test Method\",\"chinese\":\"使用测试方法\"},{\"english\":\"Match Literal Strings\",\"chinese\":\"匹配文字字符串\"},{\"english\":\"Match a Literal String with Different Possibilities\",\"chinese\":\"同时用多种模式匹配文字字符串\"},{\"english\":\"Ignore Case While Matching\",\"chinese\":\"匹配时忽略大小写\"},{\"english\":\"Extract Matches\",\"chinese\":\"提取匹配项\"},{\"english\":\"Find More Than the First Match\",\"chinese\":\"全局匹配\"},{\"english\":\"Match Anything with Wildcard Period\",\"chinese\":\"用通配符.匹配任何内容\"},{\"english\":\"Match Single Character with Multiple Possibilities\",\"chinese\":\"将单个字符与多种可能性匹配\"},{\"english\":\"Match Letters of the Alphabet\",\"chinese\":\"匹配字母表中的字母\"},{\"english\":\"Match Numbers and Letters of the Alphabet\",\"chinese\":\"匹配字母表中的数字和字母\"},{\"english\":\"Match Single Characters Not Specified\",\"chinese\":\"匹配单个未指定的字符\"},{\"english\":\"Match Characters that Occur One or More Times\",\"chinese\":\"匹配出现一次或多次的字符\"},{\"english\":\"Match Characters that Occur Zero or More Times\",\"chinese\":\"匹配出现零次或多次的字符\"},{\"english\":\"Find Characters with Lazy Matching\",\"chinese\":\"用惰性匹配来查找字符\"},{\"english\":\"Find One or More Criminals in a Hunt\",\"chinese\":\"在狩猎中找到一个或多个罪犯\"},{\"english\":\"Match Beginning String Patterns\",\"chinese\":\"匹配字符串的开头\"},{\"english\":\"Match Ending String Patterns\",\"chinese\":\"匹配字符串的末尾\"},{\"english\":\"Match All Letters and Numbers\",\"chinese\":\"匹配所有的字母和数字\"},{\"english\":\"Match Everything But Letters and Numbers\",\"chinese\":\"匹配除了字母和数字的所有符号\"},{\"english\":\"Match All Numbers\",\"chinese\":\"匹配所有数字\"},{\"english\":\"Match All Non-Numbers\",\"chinese\":\"匹配所有非数字\"},{\"english\":\"Restrict Possible Usernames\",\"chinese\":\"限制可能的用户名\"},{\"english\":\"Match Whitespace\",\"chinese\":\"匹配空白字符\"},{\"english\":\"Match Non-Whitespace Characters\",\"chinese\":\"匹配非空白字符\"},{\"english\":\"Specify Upper and Lower Number of Matches\",\"chinese\":\"指定匹配的上限和下限\"},{\"english\":\"Specify Only the Lower Number of Matches\",\"chinese\":\"只指定匹配的下限\"},{\"english\":\"Specify Exact Number of Matches\",\"chinese\":\"指定匹配的确切数量\"},{\"english\":\"Check for All or None\",\"chinese\":\"检查全部或无\"},{\"english\":\"Positive and Negative Lookahead\",\"chinese\":\"正向先行断言和负向先行断言\"},{\"english\":\"Reuse Patterns Using Capture Groups\",\"chinese\":\"使用捕获组重用模式\"},{\"english\":\"Use Capture Groups to Search and Replace\",\"chinese\":\"使用捕获组搜索和替换\"},{\"english\":\"Remove Whitespace from Start and End\",\"chinese\":\"删除开头和结尾的空白\"},{\"english\":\"Introduction to the Debugging Challenges\",\"chinese\":\"调试介绍\"},{\"english\":\"Use the JavaScript Console to Check the Value of a Variable\",\"chinese\":\"使用控制台检查变量值\"},{\"english\":\"Understanding the Differences between the freeCodeCamp and Browser Console\",\"chinese\":\"了解 freeCodeCamp 和浏览器控制台之间的差异\"},{\"english\":\"Use typeof to Check the Type of a Variable\",\"chinese\":\"使用 type of 检查变量的类型\"},{\"english\":\"Catch Misspelled Variable and Function Names\",\"chinese\":\"捕获拼错的变量名和函数名\"},{\"english\":\"Catch Unclosed Parentheses, Brackets, Braces and Quotes\",\"chinese\":\"捕获未闭合的括号、方括号、大括号和引号\"},{\"english\":\"Catch Mixed Usage of Single and Double Quotes\",\"chinese\":\"捕捉单引号和双引号的混合用法\"},{\"english\":\"Catch Use of Assignment Operator Instead of Equality Operator\",\"chinese\":\"捕获使用赋值运算符而不是相等运算符\"},{\"english\":\"Catch Missing Open and Closing Parenthesis After a Function Call\",\"chinese\":\"捕捉函数调用后缺少的左括号和右括号\"},{\"english\":\"Catch Arguments Passed in the Wrong Order When Calling a Function\",\"chinese\":\"调用函数时，捕获以错误顺序传递的参数\"},{\"english\":\"Catch Off By One Errors When Using Indexing\",\"chinese\":\"捕获使用索引的时候出现的错误\"},{\"english\":\"Use Caution When Reinitializing Variables Inside a Loop\",\"chinese\":\"重新初始化循环中的变量时要小心\"},{\"english\":\"Prevent Infinite Loops with a Valid Terminal Condition\",\"chinese\":\"使用有效的终止条件防止无限循环\"},{\"english\":\"Introduction to the Basic Data Structure Challenges\",\"chinese\":\"数据结构基础介绍\"},{\"english\":\"Use an Array to Store a Collection of Data\",\"chinese\":\"使用数组存储数据集合\"},{\"english\":\"Access an Array's Contents Using Bracket Notation\",\"chinese\":\"使用方括号访问数组的内容\"},{\"english\":\"Add Items to an Array with push() and unshift()\",\"chinese\":\"使用 push() 和 unshift() 添加项目到数组中\"},{\"english\":\"Remove Items from an Array with pop() and shift()\",\"chinese\":\"使用 pop() 和 shift() 从数组中删除项目\"},{\"english\":\"Remove Items Using splice()\",\"chinese\":\"使用 splice() 删除项目\"},{\"english\":\"Add Items Using splice()\",\"chinese\":\"使用 splice() 增加项目\"},{\"english\":\"Copy Array Items Using slice()\",\"chinese\":\"使用 slice() 拷贝数组项目\"},{\"english\":\"Copy an Array with the Spread Operator\",\"chinese\":\"使用扩展运算符复制数组\"},{\"english\":\"Combine Arrays with the Spread Operator\",\"chinese\":\"组合使用数组和扩展运算符\"},{\"english\":\"Check For The Presence of an Element With indexOf()\",\"chinese\":\"使用 indexOf() 检查元素是否存在\"},{\"english\":\"Iterate Through All an Array's Items Using For Loops\",\"chinese\":\"使用 For 循环迭代数组的所有项\"},{\"english\":\"Create complex multi-dimensional arrays\",\"chinese\":\"创建复杂的多维数组\"},{\"english\":\"Add Key-Value Pairs to JavaScript Objects\",\"chinese\":\"将键值对添加到对象中\"},{\"english\":\"Modify an Object Nested Within an Object\",\"chinese\":\"修改嵌套在对象中的对象\"},{\"english\":\"Access Property Names with Bracket Notation\",\"chinese\":\"使用方括号访问属性名称\"},{\"english\":\"Use the delete Keyword to Remove Object Properties\",\"chinese\":\"使用 delete 关键字删除对象属性\"},{\"english\":\"Check if an Object has a Property\",\"chinese\":\"检查对象是否具有某个属性\"},{\"english\":\" Iterate Through the Keys of an Object with a for...in Statement\",\"chinese\":\"使用 for...in 语句迭代对象\"},{\"english\":\"Generate an Array of All Object Keys with Object.keys()\",\"chinese\":\"使用 Object.Keys() 生成对象所有键组成的数组\"},{\"english\":\"Modify an Array Stored in an Object\",\"chinese\":\"修改存储在对象中的数组\"},{\"english\":\"Introduction to Basic Algorithm Scripting\",\"chinese\":\"算法基础介绍\"},{\"english\":\"Convert Celsius to Fahrenheit\",\"chinese\":\"将摄氏温度转换成华氏温度\"},{\"english\":\"Reverse a String\",\"chinese\":\"翻转字符串\"},{\"english\":\"Factorialize a Number\",\"chinese\":\"数字的阶乘\"},{\"english\":\"Find the Longest Word in a String\",\"chinese\":\"查找字符串中最长的单词\"},{\"english\":\"Return Largest Numbers in Arrays\",\"chinese\":\"返回数组中最大的数字\"},{\"english\":\"Confirm the Ending\",\"chinese\":\"检查字符串的结尾\"},{\"english\":\"Repeat a String Repeat a String\",\"chinese\":\"重复字符串\"},{\"english\":\"Truncate a String\",\"chinese\":\"截断字符串\"},{\"english\":\"Finders Keepers\",\"chinese\":\"发现者与看护者\"},{\"english\":\"Boo who\",\"chinese\":\"真假测试\"},{\"english\":\"Title Case a Sentence\",\"chinese\":\"单词的首字母大写\"},{\"english\":\"Slice and Splice\",\"chinese\":\"slice 和 splice\"},{\"english\":\"Falsy Bouncer\",\"chinese\":\"去除数组中的假值\"},{\"english\":\"Where do I Belong\",\"chinese\":\"我身在何处\"},{\"english\":\"Mutations\",\"chinese\":\"集合之间的关系\"},{\"english\":\"Chunky Monkey\",\"chinese\":\"猴子吃香蕉\"},{\"english\":\"Introduction to the Object Oriented Programming Challenges\",\"chinese\":\"面向对象编程介绍\"},{\"english\":\"Create a Basic JavaScript Object\",\"chinese\":\"创建一个基本的 JavaScript 对象\"},{\"english\":\"Use Dot Notation to Access the Properties of an Object\",\"chinese\":\"使用点符号来访问对象的属性\"},{\"english\":\"Create a Method on an Object\",\"chinese\":\"在对象上创建方法\"},{\"english\":\"Make Code More Reusable with the this Keyword\",\"chinese\":\"使用 this 关键字使代码更加可重用\"},{\"english\":\"Define a Constructor Function\",\"chinese\":\"定义构造函数\"},{\"english\":\"Use a Constructor to Create Objects\",\"chinese\":\"使用构造函数创建对象\"},{\"english\":\"Extend Constructors to Receive Arguments\",\"chinese\":\"扩展构造函数以接收参数\"},{\"english\":\"Verify an Object's Constructor with instanceof\",\"chinese\":\"使用 instance of 验证对象的构造函数\"},{\"english\":\"Understand Own Properties\",\"chinese\":\"了解自己的属性\"},{\"english\":\"Use Prototype Properties to Reduce Duplicate Code\",\"chinese\":\"使用原型属性来减少重复代码\"},{\"english\":\"Iterate Over All Properties\",\"chinese\":\"迭代所有属性\"},{\"english\":\"Understand the Constructor Property\",\"chinese\":\"了解构造函数属性\"},{\"english\":\"Change the Prototype to a New Object\",\"chinese\":\"将原型更改为新对象\"},{\"english\":\"Remember to Set the Constructor Property when Changing the Prototype\",\"chinese\":\"更改原型时，记得设置构造函数属性\"},{\"english\":\"Understand Where an Object’s Prototype Comes From\",\"chinese\":\"了解对象的原型来自哪里\"},{\"english\":\"Understand the Prototype Chain\",\"chinese\":\"了解原型链\"},{\"english\":\"Use Inheritance So You Don't Repeat Yourself\",\"chinese\":\"使用继承避免重复\"},{\"english\":\"Inherit Behaviors from a Supertype\",\"chinese\":\"从超类继承行为\"},{\"english\":\"Set the Child's Prototype to an Instance of the Parent\",\"chinese\":\"将子辈的原型设置为父辈的实例\"},{\"english\":\"Reset an Inherited Constructor Property\",\"chinese\":\"重置一个继承的构造函数属性\"},{\"english\":\"Add Methods After Inheritance\",\"chinese\":\"继承后添加方法\"},{\"english\":\"Override Inherited Methods\",\"chinese\":\"重写继承的方法\"},{\"english\":\"Use a Mixin to Add Common Behavior Between Unrelated Objects\",\"chinese\":\"使用 Mixin 在不相关对象之间添加共同行为\"},{\"english\":\"Use Closure to Protect Properties Within an Object from Being Modified Externally\",\"chinese\":\"使用闭包保护对象内的属性不被外部修改\"},{\"english\":\"Understand the Immediately Invoked Function Expression (IIFE)\",\"chinese\":\"了解立即调用函数表达（IIFE）\"},{\"english\":\"Use an IIFE to Create a Module\",\"chinese\":\" 使用 IIFE 创建一个模块\"},{\"english\":\"Introduction to the Functional Programming Challenges\",\"chinese\":\"函数式编程介绍\"},{\"english\":\"Learn About Functional Programming\",\"chinese\":\"学习函数式编程\"},{\"english\":\"Understand Functional Programming Terminology\",\"chinese\":\"了解函数式编程术语\"},{\"english\":\"Understand the Hazards of Using Imperative Code\",\"chinese\":\"了解使用命令式编程的危害\"},{\"english\":\"Avoid Mutations and Side Effects Using Functional Programming\",\"chinese\":\"使用函数式编程避免突变和副作用\"},{\"english\":\"Pass Arguments to Avoid External Dependence in a Function\",\"chinese\":\"传递参数以避免函数中的外部依赖\"},{\"english\":\"Refactor Global Variables Out of Functions\",\"chinese\":\"在函数中重构全局变量\"},{\"english\":\"Use the map Method to Extract Data from an Array\",\"chinese\":\"使用 map 方法从数组中提取数据\"},{\"english\":\"Implement map on a Prototype\",\"chinese\":\"在原型上实现 map 方法\"},{\"english\":\"Use the filter Method to Extract Data from an Array\",\"chinese\":\"使用 filter 方法从数组中提取数据\"},{\"english\":\"Implement the filter Method on a Prototype\",\"chinese\":\"在原型上实现 filter 方法\"},{\"english\":\"Return Part of an Array Using the slice Method\",\"chinese\":\"使用 slice 方法返回数组的一部分\"},{\"english\":\"Remove Elements from an Array Using slice Instead of splice\",\"chinese\":\"使用 slice 而不是 splice 从数组中移除元素\"},{\"english\":\"Combine Two Arrays Using the concat Method\",\"chinese\":\"使用 concat 方法组合两个数组\"},{\"english\":\"Add Elements to the End of an Array Using concat Instead of push\",\"chinese\":\"使用 concat 而不是 push 将元素添加到数组的末尾\"},{\"english\":\"Use the reduce Method to Analyze Data\",\"chinese\":\"使用 reduce 方法分析数据\"},{\"english\":\"Sort an Array Alphabetically using the sort Method\",\"chinese\":\"使用 sort 方法按字母顺序给数组排序\"},{\"english\":\"Return a Sorted Array Without Changing the Original Array\",\"chinese\":\"在不更改原始数组的前提下返回排序后的数组\"},{\"english\":\"Split a String into an Array Using the split Method\",\"chinese\":\"使用 split 方法将字符串拆分成数组\"},{\"english\":\"Combine an Array into a String Using the join Method\",\"chinese\":\"使用 join 方法将数组组合成字符串\"},{\"english\":\"Apply Functional Programming to Convert Strings to URL Slugs\",\"chinese\":\"应用函数式编程将字符串转换为URL片段\"},{\"english\":\"Use the every Method to Check that Every Element in an Array Meets a Criteria\",\"chinese\":\"使用 every 方法检查数组中的每个元素是否符合条件\"},{\"english\":\"Use the some Method to Check that Any Elements in an Array Meet a Criteria\",\"chinese\":\"使用 some 方法检查数组中是否有元素是否符合条件\"},{\"english\":\"Introduction to Currying and Partial Application\",\"chinese\":\"函数柯里化\"},{\"english\":\"Introduction to the Intermediate Algorithm Scripting Challenges\",\"chinese\":\"算法中级介绍\"},{\"english\":\"Sum All Numbers in a Range\",\"chinese\":\"范围内的数字求和\"},{\"english\":\"Diff Two Arrays\",\"chinese\":\"区分两个数组\"},{\"english\":\"Seek and Destroy\",\"chinese\":\"瞄准和消灭\"},{\"english\":\"Wherefore art thou\",\"chinese\":\"罗密欧与朱丽叶\"},{\"english\":\"Spinal Tap Case\",\"chinese\":\"短线连接格式\"},{\"english\":\"Pig Latin\",\"chinese\":\"儿童黑话\"},{\"english\":\"Search and Replace\",\"chinese\":\"搜索和替换\"},{\"english\":\"DNA Pairing\",\"chinese\":\"DNA 配对\"},{\"english\":\"Missing letters\",\"chinese\":\"丢失的字母\"},{\"english\":\"Sorted Union\",\"chinese\":\"集合排序\"},{\"english\":\"Convert HTML Entities\",\"chinese\":\"转换HTML实体\"},{\"english\":\"Sum All Odd Fibonacci Numbers\",\"chinese\":\"求斐波那契数组中的奇数之和\"},{\"english\":\"Sum All Primes\",\"chinese\":\"对所有素数求和\"},{\"english\":\"Smallest Common Multiple\",\"chinese\":\"最小公倍数\"},{\"english\":\"Drop it\",\"chinese\":\"放弃\"},{\"english\":\"Steamroller\",\"chinese\":\"扁平化\"},{\"english\":\"Binary Agents\",\"chinese\":\"二进制转化\"},{\"english\":\"Everything Be True\",\"chinese\":\"真假值判断\"},{\"english\":\"Arguments Optional\",\"chinese\":\"可选参数\"},{\"english\":\"Make a Person\",\"chinese\":\"构造一个 Person 类\"},{\"english\":\"Map the Debris\",\"chinese\":\"绘制碎片图\"},{\"english\":\"Introduction to the JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"算法和数据结构介绍\"},{\"english\":\"Palindrome Checker\",\"chinese\":\"回文检查器\"},{\"english\":\"Roman Numeral Converter\",\"chinese\":\"罗马数字转换器\"},{\"english\":\"Caesars Cipher\",\"chinese\":\"凯撒密码\"},{\"english\":\"Telephone Number Validator\",\"chinese\":\"电话号码验证器\"},{\"english\":\"Cash Register\",\"chinese\":\"收银机\"},{\"english\":\"Introduction to the Bootstrap Challenges\",\"chinese\":\"Bootstrap 介绍\"},{\"english\":\"Use Responsive Design with Bootstrap Fluid Containers\",\"chinese\":\"使用 Fluid 容器实现响应式设计\"},{\"english\":\"Make Images Mobile Responsive\",\"chinese\":\"使图片自适应移动端\"},{\"english\":\"Center Text with Bootstrap\",\"chinese\":\"用 Bootstrap 居中文本\"},{\"english\":\"Create a Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 按钮\"},{\"english\":\"Create a Block Element Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 块级元素\"},{\"english\":\"Taste the Bootstrap Button Color Rainbow\",\"chinese\":\"体验 Bootstrap 彩虹色的按钮\"},{\"english\":\"Call out Optional Actions with btn-info\",\"chinese\":\"使用 btn-info 调出可选操作\"},{\"english\":\"Warn Your Users of a Dangerous Action with btn-danger\",\"chinese\":\"使用 btn-danger 警告你的用户，这是危险操作。\"},{\"english\":\"Use the Bootstrap Grid to Put Elements Side By Side\",\"chinese\":\"使用 Bootstrap 网格并排放置元素\"},{\"english\":\"Ditch Custom CSS for Bootstrap\",\"chinese\":\"用 Bootstrap 来取代我们之前的自定义样式\"},{\"english\":\"Use a span to Target Inline Elements\",\"chinese\":\"使用 span 创建行内元素\"},{\"english\":\"Create a Custom Heading\",\"chinese\":\"创建自定义标题\"},{\"english\":\"Add Font Awesome Icons to our Buttons\",\"chinese\":\"将字体图标添加到我们的按钮中\"},{\"english\":\"Add Font Awesome Icons to all of our Buttons\",\"chinese\":\"将字体图标添加到我们所有的按钮上\"},{\"english\":\"Responsively Style Radio Buttons\",\"chinese\":\"响应式风格的单选按钮\"},{\"english\":\"Responsively Style Checkboxes\",\"chinese\":\"响应式风格的复选框\"},{\"english\":\"Style Text Inputs as Form Controls\",\"chinese\":\"给表单控件的输入框添加样式\"},{\"english\":\"Line up Form Elements Responsively with Bootstrap\",\"chinese\":\"使用 Bootstrap 响应式排列表单元素\"},{\"english\":\"Create a Bootstrap Headline\",\"chinese\":\"创建一个 Bootstrap 标题\"},{\"english\":\"House our page within a Bootstrap container-fluid div\",\"chinese\":\"将我们的页面放在 Fluid 容器中\"},{\"english\":\"Create a Bootstrap Row\",\"chinese\":\"创建一个 Bootstrap Row\"},{\"english\":\"Split Your Bootstrap Row\",\"chinese\":\"分割你的 Bootstrap Row\"},{\"english\":\"Create Bootstrap Wells\",\"chinese\":\"创建 Bootstrap Wells\"},{\"english\":\"Add Elements within Your Bootstrap Wells\",\"chinese\":\"在 Bootstrap Wells 中添加元素\"},{\"english\":\"Apply the Default Bootstrap Button Style\",\"chinese\":\"给 Bootstrap 按钮添加默认样式\"},{\"english\":\"Create a Class to Target with jQuery Selectors\",\"chinese\":\"分别给每个目标元素的 class 属性添加一个 target 值\"},{\"english\":\"Add id Attributes to Bootstrap Elements\",\"chinese\":\"给 Bootstrap 元素添加id属性\"},{\"english\":\"Label Bootstrap Wells\",\"chinese\":\"给 Bootstrap Wells 贴标签\"},{\"english\":\"Give Each Element a Unique id\",\"chinese\":\"给每个元素一个唯一的 id\"},{\"english\":\"Label Bootstrap Buttons\",\"chinese\":\"给 Bootstrap 按钮贴标签\"},{\"english\":\"Use Comments to Clarify Code\",\"chinese\":\"使用注释来说明代码\"},{\"english\":\"Introduction to jQuery\",\"chinese\":\"jQuery 介绍\"},{\"english\":\"Learn How Script Tags and Document Ready Work\",\"chinese\":\"了解 Script 和 Document 是如何工作的\"},{\"english\":\"Target HTML Elements with Selectors Using jQuery\",\"chinese\":\"使用 jQuery 配合元素选择器选择元素\"},{\"english\":\"Target Elements by Class Using jQuery\",\"chinese\":\"使用 jQuery 配合 class 选择器选择元素\"},{\"english\":\"Target Elements by id Using jQuery\",\"chinese\":\"使用 jQuery 配合 id 选择器选择元素\"},{\"english\":\"Delete Your jQuery Functions\",\"chinese\":\"删除 jQuery 函数\"},{\"english\":\"Target the Same Element with Multiple jQuery Selectors\",\"chinese\":\"用多个 jQuery 选择器瞄准同一个元素\"},{\"english\":\"Remove Classes from an Element with jQuery\",\"chinese\":\"使用 jQuery 从元素中移除 class\"},{\"english\":\"Change the CSS of an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素的 CSS\"},{\"english\":\"Disable an Element Using jQuery\",\"chinese\":\"使用 jQuery 禁用元素\"},{\"english\":\"Change Text Inside an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素内部的文本\"},{\"english\":\"Remove an Element Using jQuery\",\"chinese\":\"使用 jQuery 删除元素\"},{\"english\":\"Use appendTo to Move Elements with jQuery\",\"chinese\":\"使用 jQuery 的 appendTo 方法可以移动元素\"},{\"english\":\"Clone an Element Using jQuery\",\"chinese\":\"使用 jQuery 克隆元素\"},{\"english\":\"Target the Parent of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的父元素\"},{\"english\":\"Target the Children of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的子元素\"},{\"english\":\"Target a Specific Child of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的特定子元素\"},{\"english\":\"Target Even Elements Using jQuery\",\"chinese\":\"使用 jQuery 选择偶数元素\"},{\"english\":\"Use jQuery to Modify the Entire Page\",\"chinese\":\"使用 jQuery 修改整个页面\"},{\"english\":\"Introduction to the Sass Challenges\",\"chinese\":\"Sass 介绍\"},{\"english\":\"Store Data with Sass Variables\",\"chinese\":\"用 Sass 变量存储数据\"},{\"english\":\"Nest CSS with Sass\",\"chinese\":\"用 Sass 嵌套 CSS\"},{\"english\":\"Create Reusable CSS with Mixins\",\"chinese\":\"用 Mixins 创建可重用 CSS\"},{\"english\":\"Use @if and @else to Add Logic To Your Styles\",\"chinese\":\"使用 @if 和 @else 为你的样式添加逻辑\"},{\"english\":\"Use @for to Create a Sass Loop\",\"chinese\":\"使用 @for 创建一个 Sass 循环\"},{\"english\":\"Use @each to Map Over Items in a List\",\"chinese\":\"使用 @each 遍历列表中的项目\"},{\"english\":\"Apply a Style Until a Condition is Met with @while\",\"chinese\":\"使用 @while 当条件满足时样式生效\"},{\"english\":\"Split Your Styles into Smaller Chunks with Partials\",\"chinese\":\"用 Partials 将你的样式分成小块\"},{\"english\":\"Extend One Set of CSS Styles to Another Element\",\"chinese\":\"将一组CSS样式扩展到另一个元素\"},{\"english\":\"Introduction to the React Challenges\",\"chinese\":\"React 介绍\"},{\"english\":\"Create a Simple JSX Element\",\"chinese\":\"创建一个简单的 JSX 元素\"},{\"english\":\"Create a Complex JSX Element\",\"chinese\":\"创建一个复杂的 JSX 元素\"},{\"english\":\"Add Comments in JSX\",\"chinese\":\"在 JSX 中添加注释\"},{\"english\":\"Render HTML Elements to the DOM\",\"chinese\":\"渲染 HTML 元素为 DOM 树\"},{\"english\":\"Define an HTML Class in JSX\",\"chinese\":\"在 JSX 中定义一个 HTML Class\"},{\"english\":\"Learn About Self-Closing JSX Tags\",\"chinese\":\"了解自动闭合的 JSX 标记\"},{\"english\":\"Create a Stateless Functional Component\",\"chinese\":\"创建一个无状态的函数组件\"},{\"english\":\"Create a React Component\",\"chinese\":\"创建一个 React 组件\"},{\"english\":\"Create a Component with Composition\",\"chinese\":\"用组合的方式创建一个 React 组件 \"},{\"english\":\"Use React to Render Nested Components\",\"chinese\":\"使用 React 渲染嵌套组件\"},{\"english\":\"Compose React Components\",\"chinese\":\"组合 React 组件\"},{\"english\":\"Render a Class Component to the DOM\",\"chinese\":\"渲染 class 组件为 Dom 树\"},{\"english\":\"Write a React Component from Scratch\",\"chinese\":\"从零开始写一个 React 组件\"},{\"english\":\"Pass Props to a Stateless Functional Component\",\"chinese\":\"将 Props 传递给无状态函数组件\"},{\"english\":\"Pass an Array as Props\",\"chinese\":\"传递一个数组作为 Props\"},{\"english\":\"Use Default Props\",\"chinese\":\"使用默认的 Props\"},{\"english\":\"Override Default Props\",\"chinese\":\"覆盖默认的 Props\"},{\"english\":\"Use PropTypes to Define the Props You Expect\",\"chinese\":\"使用 PropTypes 来定义你期望的 Props\"},{\"english\":\"Access Props Using this.props\",\"chinese\":\"使用 this.props 访问 Props\"},{\"english\":\"Review Using Props with Stateless Functional Components\",\"chinese\":\"复习如何使用 Props 和无状态函数组件\"},{\"english\":\"Create a Stateful Component\",\"chinese\":\"创建一个有状态的组件\"},{\"english\":\"Render State in the User Interface\",\"chinese\":\"在用户界面中渲染状态\"},{\"english\":\"Render State in the User Interface Another Way\",\"chinese\":\"以另一种方式在用户界面中渲染状态\"},{\"english\":\"Set State with this.setState\",\"chinese\":\"用 this.setState 设置状态\"},{\"english\":\"Bind 'this' to a Class Method\",\"chinese\":\"将 this 绑定到 Class 方法\"},{\"english\":\"Use State to Toggle an Element\",\"chinese\":\"使用 State 切换元素\"},{\"english\":\"Write a Simple Counter\",\"chinese\":\"写一个简单的计数器\"},{\"english\":\"Create a Controlled Input\",\"chinese\":\"创建一个可以控制的输入框\"},{\"english\":\"Create a Controlled Form\",\"chinese\":\"创建一个可以控制的表单\"},{\"english\":\"Pass State as Props to Child Components\",\"chinese\":\"将 State 作为 Props 传递给子组件\"},{\"english\":\"Pass a Callback as Props\",\"chinese\":\"传递回调作为 Props\"},{\"english\":\"Use the Lifecycle Method componentWillMount\",\"chinese\":\"使用生命周期方法：componentWillMount\"},{\"english\":\"Use the Lifecycle Method componentDidMount\",\"chinese\":\"使用生命周期方法：componentDidMount\"},{\"english\":\"Add Event Listeners\",\"chinese\":\"添加事件侦听器\"},{\"english\":\"Manage Updates with Lifecycle Methods\",\"chinese\":\"使用生命周期方法管理更新\"},{\"english\":\"Optimize Re-Renders with shouldComponentUpdate\",\"chinese\":\"使用 shouldComponentUpdate 优化重新渲染\"},{\"english\":\"Introducing Inline Styles\",\"chinese\":\"介绍内联样式\"},{\"english\":\"Add Inline Styles in React\",\"chinese\":\"在 React 中添加内联样式\"},{\"english\":\"Use Advanced JavaScript in React Render Method\",\"chinese\":\"在 React Render 方法中使用 JavaScript\"},{\"english\":\"Render with an If/Else Condition\",\"chinese\":\"使用 If/Else 条件进行渲染\"},{\"english\":\"Use && for a More Concise Conditional\",\"chinese\":\"使用 && 获得更简洁的条件\"},{\"english\":\"Use a Ternary Expression for Conditional Rendering\",\"chinese\":\"使用三元表达式进行条件渲染\"},{\"english\":\"Render Conditionally from Props\",\"chinese\":\"根据 Props 有条件地渲染\"},{\"english\":\"Change Inline CSS Conditionally Based on Component State\",\"chinese\":\"根据组件状态有条件地更改内联 CSS\"},{\"english\":\"Use Array.map() to Dynamically Render Elements\",\"chinese\":\"使用 Array.map() 动态渲染元素\"},{\"english\":\"Give Sibling Elements a Unique Key Attribute\",\"chinese\":\"给同级元素一个唯一的键属性\"},{\"english\":\"Use Array.filter() to Dynamically Filter an Array\",\"chinese\":\"使用 Array.Filter() 动态过滤数组\"},{\"english\":\"Render React on the Server with renderToString\",\"chinese\":\"用 renderToString 在服务器上渲染 React\"},{\"english\":\"Introduction to the Redux Challenges\",\"chinese\":\"Redux 介绍\"},{\"english\":\"Create a Redux Store\",\"chinese\":\"创建一个 Redux Store\"},{\"english\":\"Get State from the Redux Store\",\"chinese\":\"从 Redux Store 获取状态\"},{\"english\":\"Define a Redux Action\",\"chinese\":\"定义一个 Redux Action\"},{\"english\":\"Define an Action Creator\",\"chinese\":\"定义一个 Action Creator\"},{\"english\":\"Dispatch an Action Event\",\"chinese\":\"分发 Action Event\"},{\"english\":\"Handle an Action in the Store\",\"chinese\":\"在 Store 里处理 Action\"},{\"english\":\"Use a Switch Statement to Handle Multiple Actions\",\"chinese\":\"使用 Switch 语句处理多个 Actions\"},{\"english\":\"Use const for Action Types\",\"chinese\":\"使用 const 声明 Action Types\"},{\"english\":\"Register a Store Listener\",\"chinese\":\"注册 Store 监听器\"},{\"english\":\"Combine Multiple Reducers\",\"chinese\":\"组合多个 Reduces\"},{\"english\":\"Send Action Data to the Store\",\"chinese\":\"发送 Action Data 给 Store\"},{\"english\":\"Use Middleware to Handle Asynchronous Actions\",\"chinese\":\"使用中间件处理异步操作\"},{\"english\":\"Write a Counter with Redux\",\"chinese\":\"用 Redux 写一个计数器\"},{\"english\":\"Never Mutate State\",\"chinese\":\"永不改变状态\"},{\"english\":\"Use the Spread Operator on Arrays\",\"chinese\":\"在数组中使用扩展运算符\"},{\"english\":\"Remove an Item from an Array\",\"chinese\":\"从数组中删除项目\"},{\"english\":\"Copy an Object with Object.assign\",\"chinese\":\"使用 Object.assign 拷贝对象\"},{\"english\":\"Introduction to the React and Redux Challenges\",\"chinese\":\"React 和 Redux 介绍\"},{\"english\":\"Getting Started with React Redux\",\"chinese\":\"React 和 Redux 入门\"},{\"english\":\"Manage State Locally First\",\"chinese\":\"首先在本地管理状态\"},{\"english\":\"Extract State Logic to Redux\",\"chinese\":\"提取状态逻辑给 Redux\"},{\"english\":\"Use Provider to Connect Redux to React\",\"chinese\":\"使用 Provider 连接 Redux 和 React\"},{\"english\":\"Map State to Props\",\"chinese\":\"映射 State 到 Props\"},{\"english\":\"Map Dispatch to Props\",\"chinese\":\"映射 Dispatch 到 Props\"},{\"english\":\"Connect Redux to React\",\"chinese\":\"连接 Redux 和 React\"},{\"english\":\"Connect Redux to the Messages App\",\"chinese\":\"将 Redux 连接到 Messages App\"},{\"english\":\"Extract Local State into Redux\",\"chinese\":\"将局部状态提取到 Redux 中\"},{\"english\":\"Moving Forward From Here\",\"chinese\":\"从这里前进\"},{\"english\":\"Introduction to the Front End Libraries Projects\",\"chinese\":\"项目实战介绍\"},{\"english\":\"Build a Random Quote Machine\",\"chinese\":\"构建一个随机引语生成器\"},{\"english\":\"Build a Markdown Previewer\",\"chinese\":\"构建一个 Markdown 文件预览器\"},{\"english\":\"Build a Drum Machine\",\"chinese\":\"构建一台鼓式机器\"},{\"english\":\"Build a JavaScript Calculator\",\"chinese\":\"构建一个 JavaScript 计算器\"},{\"english\":\"Build a Pomodoro Clock\",\"chinese\":\"构建一个番茄时钟\"},{\"english\":\"Introduction to the Data Visualization with D3 Challenges\",\"chinese\":\"数据可视化\"},{\"english\":\"Add Document Elements with D3\",\"chinese\":\"用 D3 给文档添加元素\"},{\"english\":\"Select a Group of Elements with D3\",\"chinese\":\"用 D3 选择一组元素\"},{\"english\":\"Work with Data in D3\",\"chinese\":\"使用 D3 中的数据\"},{\"english\":\"Work with Dynamic Data in D3\",\"chinese\":\"使用 D3 中的动态数据\"},{\"english\":\"Add Inline Styling to Elements\",\"chinese\":\"给元素添加内联样式\"},{\"english\":\"Change Styles Based on Data\",\"chinese\":\"根据数据更改样式\"},{\"english\":\"Add Classes with D3\",\"chinese\":\"用 D3 添加 Class\"},{\"english\":\"Update the Height of an Element Dynamically\",\"chinese\":\"动态更新元素的高度\"},{\"english\":\"Change the Presentation of a Bar Chart\",\"chinese\":\"更改条形图的显示方式\"},{\"english\":\"Learn About SVG in D3\",\"chinese\":\"了解 D3 中的 SVG\"},{\"english\":\"Display Shapes with SVG\",\"chinese\":\"用 SVG 显示形状\"},{\"english\":\"Create a Bar for Each Data Point in the Set\",\"chinese\":\"为集合中的每个数据点创建一个 Bar\"},{\"english\":\"Dynamically Set the Coordinates for Each Bar\",\"chinese\":\"动态设置每个 Bar 的坐标\"},{\"english\":\"Dynamically Change the Height of Each Bar\",\"chinese\":\"动态更改每个条的高度\"},{\"english\":\"Invert SVG Elements\",\"chinese\":\"反转 SVG 元素\"},{\"english\":\"Change the Color of an SVG Element\",\"chinese\":\"更改 SVG 元素的颜色\"},{\"english\":\"Add Labels to D3 Elements\",\"chinese\":\"给 D3 元素添加标签\"},{\"english\":\"Style D3 Labels\",\"chinese\":\"给 D3 标签添加样式\"},{\"english\":\"Add a Hover Effect to a D3 Element\",\"chinese\":\"给 D3 元素添加悬停效果\"},{\"english\":\"Add a Tooltip to a D3 Element\",\"chinese\":\"给 D3 元素添加工具提示\"},{\"english\":\"Create a Scatterplot with SVG Circles\",\"chinese\":\"使用 SVG Circles 创建散点图\"},{\"english\":\"Add Attributes to the Circle Elements\",\"chinese\":\"给 Circle 元素添加属性\"},{\"english\":\"Add Labels to Scatter Plot Circles\",\"chinese\":\"向散点图的 Circles 添加标签\"},{\"english\":\"Create a Linear Scale with D3\",\"chinese\":\"用 D3 创建线性比例\"},{\"english\":\"Set a Domain and a Range on a Scale\",\"chinese\":\"按比例设置域和范围\"},{\"english\":\"Use the d3.max and d3.min Functions to Find Minimum and Maximum Values in a Dataset\",\"chinese\":\"使用 d3.max 和 d3.min 函数在数据集中查找最小值和最大值\"},{\"english\":\"Use Dynamic Scales\",\"chinese\":\"使用动态比例\"},{\"english\":\"Use a Pre-Defined Scale to Place Elements\",\"chinese\":\"使用预定义的比例放置元素\"},{\"english\":\"Add Axes to a Visualization\",\"chinese\":\"添加坐标轴到可视化中\"},{\"english\":\"Introduction to the JSON APIs and AJAX Challenges\",\"chinese\":\"介绍 JSON 和 AJAX\"},{\"english\":\"Handle Click Events with JavaScript using the onclick property\",\"chinese\":\"使用 onclick 属性处理点击事件\"},{\"english\":\"Change Text with click Events\",\"chinese\":\"通过单击事件更改文本\"},{\"english\":\"Get JSON with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法获取 JSON\"},{\"english\":\"Access the JSON Data from an API\",\"chinese\":\"访问来自 API 的 JSON 数据\"},{\"english\":\"Convert JSON Data to HTML\",\"chinese\":\"将 JSON 数据转换为 HTML\"},{\"english\":\"Render Images from Data Sources\",\"chinese\":\"渲染数据源的图像\"},{\"english\":\"Pre-filter JSON to Get the Data You Need\",\"chinese\":\"预先过滤 JSON 以获得所需的数据\"},{\"english\":\"Get Geolocation Data to Find A User's GPS Coordinates\",\"chinese\":\"根据地理位置数据找到用户的 GPS 坐标\"},{\"english\":\"Post Data with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法发送数据\"},{\"english\":\"Introduction to the Data Visualization Projects\",\"chinese\":\"介绍数据可视化\"},{\"english\":\"Visualize Data with a Bar Chart\",\"chinese\":\"用条形图可视化数据\"},{\"english\":\"Visualize Data with a Scatterplot Graph\",\"chinese\":\"用散点图可视化数据\"},{\"english\":\"Visualize Data with a Heat Map\",\"chinese\":\"用热图可视化数据\"},{\"english\":\"Visualize Data with a Choropleth Map\",\"chinese\":\"用地区分布图可视化数据\"},{\"english\":\"Visualize Data with a Treemap Diagram\",\"chinese\":\"用树形图可视化数据\"},{\"english\":\"Introduction to the Managing Packages with npm Challenges\",\"chinese\":\"介绍 Node 包管理器——npm\"},{\"english\":\"How to Use package.json, the Core of Any Node.js Project or npm Package\",\"chinese\":\"如何使用 package.json 成为 Node.js 项目或 npm 包的核心\"},{\"english\":\"Add a Description to Your package.json\",\"chinese\":\"给 package.json 添加一个描述\"},{\"english\":\"Add Keywords to Your package.json\",\"chinese\":\"给 package.json 添加关键词\"},{\"english\":\"Add a License to Your package.json\",\"chinese\":\"给 package.json 添加许可证\"},{\"english\":\"Add a Version to Your package.json\",\"chinese\":\"给 package.json 添加版本号\"},{\"english\":\"Expand Your Project with External Packages from npm\",\"chinese\":\"使用 npm 的外部软件包扩展您的项目\"},{\"english\":\"Manage npm Dependencies By Understanding Semantic Versioning\",\"chinese\":\"通过理解语义版本化来管理 npm 依赖关系\"},{\"english\":\"Use the Tilde-Character to Always Use the Latest Patch Version of a Dependency\",\"chinese\":\"用波浪字符始终使用依赖项的最新补丁版本\"},{\"english\":\"Use the Caret-Character to Use the Latest Minor Version of a Dependency\",\"chinese\":\"用插入字符可以使用依赖项的最新次要版本\"},{\"english\":\"Remove a Package from Your Dependencies\",\"chinese\":\"从依赖项中删除包\"},{\"english\":\"Introduction to the Basic Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 基础\"},{\"english\":\"Meet the Node console\",\"chinese\":\"认识 Node 的控制台\"},{\"english\":\"Start a Working Express Server\",\"chinese\":\"启动一个 Express 服务器\"},{\"english\":\"Serve an HTML File\",\"chinese\":\"服务 HTML 文件\"},{\"english\":\"Serve Static Assets\",\"chinese\":\"服务静态资源\"},{\"english\":\"Serve JSON on a Specific Route\",\"chinese\":\"服务指定路由上的 JSON\"},{\"english\":\"Use the .env File\",\"chinese\":\"使用 .env 文件\"},{\"english\":\"Implement a Root-Level Request Logger Middleware\",\"chinese\":\"实现一个根层的请求记录器中间件\"},{\"english\":\"Chain Middleware to Create a Time Server\",\"chinese\":\"使用链中间件来创建时间服务器\"},{\"english\":\"Get Route Parameter Input from the Client\",\"chinese\":\"从客户端获取路由参数输入\"},{\"english\":\"Get Query Parameter Input from the Client\",\"chinese\":\"从客户端获取查询参数输入\"},{\"english\":\"Use body-parser to Parse POST Requests\",\"chinese\":\"使用 body-parser 来解析POST请求\"},{\"english\":\"Get Data from POST Requests\",\"chinese\":\"从 POST 请求中获取数据\"},{\"english\":\"Introduction to the MongoDB and Mongoose Challenges\",\"chinese\":\"介绍 MongogDB 和 Mongoose\"},{\"english\":\"Install and Set Up Mongoose\",\"chinese\":\"安装和设置 Mongoose\"},{\"english\":\"Create a Model\",\"chinese\":\"创建一个模型\"},{\"english\":\"Create and Save a Record of a Model\",\"chinese\":\"用模型来创建并保存一条记录\"},{\"english\":\"Create Many Records with model.create()\",\"chinese\":\"使用 model.create() 创建许多记录\"},{\"english\":\"Use model.find() to Search Your Database\",\"chinese\":\"使用 model.find() 查找数据库\"},{\"english\":\"Use model.findOne() to Return a Single Matching Document from Your Database\",\"chinese\":\"使用 model.findOne() 从数据库中返回一个匹配的文档\"},{\"english\":\"Use model.findById() to Search Your Database By _id\",\"chinese\":\"使用 model.findById() 按 _id 搜索数据库\"},{\"english\":\"Perform Classic Updates by Running Find, Edit, then Save\",\"chinese\":\"通过运行 find、edit、save 来执行经典更新\"},{\"english\":\"Perform New Updates on a Document Using model.findOneAndUpdate()\",\"chinese\":\"使用 model.findOneAndUpdate() 对文档执行新的更新\"},{\"english\":\"Delete One Document Using model.findByIdAndRemove\",\"chinese\":\"使用 model.findByIdAndRemove() 删除一个文档\"},{\"english\":\"Delete Many Documents with model.remove()\",\"chinese\":\"使用 model.remove() 删除许多文档\"},{\"english\":\"Chain Search Query Helpers to Narrow Search Results\",\"chinese\":\"通过链搜索查询帮助器缩小搜索结果\"},{\"english\":\"Introduction to the APIs and Microservices Projects\",\"chinese\":\"介绍 API 和 微服务\"},{\"english\":\"Timestamp Microservice\",\"chinese\":\"时间戳\"},{\"english\":\"Request Header Parser Microservice\",\"chinese\":\"请求头解析器\"},{\"english\":\"URL Shortener Microservice\",\"chinese\":\"短网址\"},{\"english\":\"Exercise Tracker\",\"chinese\":\"运动跟踪器\"},{\"english\":\"File Metadata Microservice\",\"chinese\":\"文件元数据\"},{\"english\":\"Introduction to Information Security with HelmetJS Challenges\",\"chinese\":\"介绍信息安全必备工具——Helmet\"},{\"english\":\"Install and Require Helmet\",\"chinese\":\"安装和引入 Helmet\"},{\"english\":\"Hide Potentially Dangerous Information Using helmet.hidePoweredBy()\",\"chinese\":\"使用 helmet.hidePoweredBy() 隐藏潜在的危险信息\"},{\"english\":\"Mitigate the Risk of Clickjacking with helmet.frameguard()\",\"chinese\":\"使用 helmet.frameguard() 降低点击劫持的风险\"},{\"english\":\"Mitigate the Risk of Cross Site Scripting (XSS) Attacks with helmet.xssFilter()\",\"chinese\":\"使用 helmet.xssFilter() 降低跨站点脚本（XSS）攻击的风险\"},{\"english\":\"Avoid Inferring the Response MIME Type with helmet.noSniff()\",\"chinese\":\"使用 helment.noSniff() 避免推断响应的 MIME 类型\"},{\"english\":\"Prevent IE from Opening Untrusted HTML with helmet.ieNoOpen()\",\"chinese\":\"使用 helment.ieNoOpen() 防止 IE 打开不受信任的 HTML\"},{\"english\":\"Ask Browsers to Access Your Site via HTTPS Only with helmet.hsts()\",\"chinese\":\"使用 helmet.hsts() 要求浏览器只通过HTTPS访问你的网站\"},{\"english\":\"Disable DNS Prefetching with helmet.dnsPrefetchControl()\",\"chinese\":\"使用 helmet.dnsPrefetchControl() 禁用 DNS 预取\"},{\"english\":\"Disable Client-Side Caching with helmet.noCache()\",\"chinese\":\"使用 helment.noCache() 禁用客户端缓存\"},{\"english\":\"Set a Content Security Policy with helmet.contentSecurityPolicy()\",\"chinese\":\"使用 helment.contentSecurityPolicy() 设置内容安全策略\"},{\"english\":\"Configure Helmet Using the ‘parent’ helmet() Middleware\",\"chinese\":\"使用 helmet() 中间件来配置 Helmet\"},{\"english\":\"Understand BCrypt Hashes\",\"chinese\":\"了解加密哈希\"},{\"english\":\"Hash and Compare Passwords Asynchronously\",\"chinese\":\"异步哈希和比较密码\"},{\"english\":\"Hash and Compare Passwords Synchronously\",\"chinese\":\"同步哈希和比较密码 \"},{\"english\":\"Introduction to the Quality Assurance with Chai Challenges\",\"chinese\":\"介绍质量保证必备工具——Chai\"},{\"english\":\"Learn How JavaScript Assertions Work\",\"chinese\":\"了解 JavaScript 断言是如何工作的\"},{\"english\":\"Test if a Variable or Function is Defined\",\"chinese\":\"测试变量或函数是否已定义\"},{\"english\":\"Use Assert.isOK and Assert.isNotOK\",\"chinese\":\"使用 Assert.isok() 和 Assert.isNotOK()\"},{\"english\":\"Test for Truthiness\",\"chinese\":\"真假测试\"},{\"english\":\"Use the Double Equals to Assert Equality\",\"chinese\":\"用两个等号断言相等\"},{\"english\":\"Use the Triple Equals to Assert Strict Equality\",\"chinese\":\"用三个等号断言严格相等\"},{\"english\":\"Assert Deep Equality with .deepEqual and .notDeepEqual\",\"chinese\":\"用 Assert.deepEqual() 和 Assert.notDeepEqual() 断言深度相等\"},{\"english\":\"Compare the Properties of Two Elements\",\"chinese\":\"比较两个元素的属性\"},{\"english\":\"Test if One Value is Below or At Least as Large as Another\",\"chinese\":\"测试一个值是否小于或等于另一个值\"},{\"english\":\"Test if a Value Falls within a Specific Range\",\"chinese\":\"测试某个值是否在特定范围内\"},{\"english\":\"Test if a Value is an Array\",\"chinese\":\"测试某个值是否为数组\"},{\"english\":\"Test if an Array Contains an Item\",\"chinese\":\"测试数组是否包含某个项目\"},{\"english\":\"Test if a Value is a String\",\"chinese\":\"测试某个值是否为字符串\"},{\"english\":\"Test if a String Contains a Substring\",\"chinese\":\"测试字符串是否包含子字符串\"},{\"english\":\"Use Regular Expressions to Test a String\",\"chinese\":\"使用正则表达式测试字符串\"},{\"english\":\"Test if an Object has a Property\",\"chinese\":\"测试对象是否具有某个属性\"},{\"english\":\"Test if a Value is of a Specific Data Structure Type\",\"chinese\":\"测试某个值是否是特定的数据类型\"},{\"english\":\"Test if an Object is an Instance of a Constructor\",\"chinese\":\"测试对象是否是构造函数的实例\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP\",\"chinese\":\"使用 Chai-HTTP 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP II\",\"chinese\":\"使用 Chai-HTTP II 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP III - PUT method\",\"chinese\":\"使用 Chai-HTTP III 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP IV - PUT method\",\"chinese\":\"使用 Chai-HTTP IV 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser\",\"chinese\":\"使用 无头浏览器 运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser II\",\"chinese\":\"使用 无头浏览器 II 运行功能测试\"},{\"english\":\"Introduction to the Advances Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 高级\"},{\"english\":\"Set up a Template Engine\",\"chinese\":\"设置模板引擎\"},{\"english\":\"Use a Template Engine's Powers\",\"chinese\":\"使用模板引擎\"},{\"english\":\"Set up Passport\",\"chinese\":\"设置 Passport\"},{\"english\":\"Serialization of a User Object\",\"chinese\":\"用户对象的序列化\"},{\"english\":\"Implement the Serialization of a Passport User\",\"chinese\":\"实现 Passport 用户的序列化\"},{\"english\":\"Authentication Strategies\",\"chinese\":\"身份验证策略\"},{\"english\":\"How to Use Passport Strategies\",\"chinese\":\"如何使用 Passport 策略\"},{\"english\":\"Create New Middleware\",\"chinese\":\"创建新的中间件\"},{\"english\":\"How to Put a Profile Together\",\"chinese\":\"如何将 Profile 放在一起\"},{\"english\":\"Logging a User Out\",\"chinese\":\"用户退出\"},{\"english\":\"Registration of New Users\",\"chinese\":\"注册新用户\"},{\"english\":\"Hashing Your Passwords\",\"chinese\":\"哈希密码\"},{\"english\":\"Clean Up Your Project with Modules\",\"chinese\":\"使用模块清理项目\"},{\"english\":\"Implementation of Social Authentication\",\"chinese\":\"实现第一种社交登录\"},{\"english\":\"Implementation of Social Authentication II\",\"chinese\":\"实现第二种社交登录\"},{\"english\":\"Implementation of Social Authentication III\",\"chinese\":\"实现第三种社交登录\"},{\"english\":\"Set up the Environment\",\"chinese\":\"设置环境\"},{\"english\":\"Communicate by Emitting\",\"chinese\":\"通过 Emitting 通信\"},{\"english\":\"Handle a Disconnect\",\"chinese\":\"处理连接断开\"},{\"english\":\"Authentication with Socket.IO\",\"chinese\":\"用 Socket.IO 进行身份验证\"},{\"english\":\"Announce New Users\",\"chinese\":\"用户公告\"},{\"english\":\"Send and Display Chat Messages\",\"chinese\":\"发送和显示聊天消息\"},{\"english\":\"Introduction to the Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Metric-Imperial Converter\",\"chinese\":\"公制英制转换器\"},{\"english\":\"Issue Tracker\",\"chinese\":\"问题跟踪器\"},{\"english\":\"Personal Library\",\"chinese\":\"个人图书馆\"},{\"english\":\"Stock Price Checker\",\"chinese\":\"股票价格检查器\"},{\"english\":\"Anonymous Message Board\",\"chinese\":\"匿名留言板\"},{\"english\":\"Introduction to the Coding Interview Algorithms\",\"chinese\":\"算法面试介绍\"},{\"english\":\"Find the Symmetric Difference\",\"chinese\":\"找到对等分差\"},{\"english\":\"Inventory Update\",\"chinese\":\"更新库存\"},{\"english\":\"No Repeats Please\",\"chinese\":\"请不要重复\"},{\"english\":\"Pairwise\",\"chinese\":\"结对\"},{\"english\":\"Implement Bubble Sort\",\"chinese\":\"冒泡排序\"},{\"english\":\"Implement Selection Sort\",\"chinese\":\"选择排序\"},{\"english\":\"Implement Insertion Sort\",\"chinese\":\"插入排序\"},{\"english\":\"Implement Quick Sort\",\"chinese\":\"快速排序\"},{\"english\":\"Implement Merge Sort\",\"chinese\":\"合并排序\"},{\"english\":\"Introduction to the Coding Interview Data Structure Questions\",\"chinese\":\"数据结构面试介绍\"},{\"english\":\"Typed Arrays\",\"chinese\":\"类型数组\"},{\"english\":\"Learn how a Stack Works\",\"chinese\":\"了解栈如何工作\"},{\"english\":\"Create a Stack Class\",\"chinese\":\"创建一个栈\"},{\"english\":\"Create a Queue Class\",\"chinese\":\"创建一个队列\"},{\"english\":\"Create a Priority Queue Class\",\"chinese\":\"创建一个优先队列\"},{\"english\":\"Create a Circular Queue\",\"chinese\":\"创建一个循环队列\"},{\"english\":\"Create a Set Class\",\"chinese\":\"介绍一种新的数据结构：集合（Set）\"},{\"english\":\"Remove from a Set\",\"chinese\":\"从集合中移除\"},{\"english\":\"Size of the Set\",\"chinese\":\"集合的大小\"},{\"english\":\"Perform a Union on Two Sets\",\"chinese\":\"求两个集合的并集\"},{\"english\":\"Perform an Intersection on Two Sets of Data\",\"chinese\":\"求两个集合的交集\"},{\"english\":\"Perform a Difference on Two Sets of Data\",\"chinese\":\"求两个集合的差异\"},{\"english\":\"Perform a Subset Check on Two Sets of Data\",\"chinese\":\"求某个集合是否为另一个集合的子集\"},{\"english\":\"Create and Add to Sets in ES6\",\"chinese\":\"创建集合并添加项目\"},{\"english\":\"Remove items from a set in ES6\",\"chinese\":\"移除集合中的项目\"},{\"english\":\"Use .has and .size on an ES6 Set\",\"chinese\":\"使用集合的 has 和 size 方法\"},{\"english\":\"Use Spread and Notes for ES5 Set() Integration\",\"chinese\":\"扩展运算符既可以用于数组，也可以用于集合。\"},{\"english\":\"Create a Map Data Structure\",\"chinese\":\"介绍一种新的数据结构：映射（Map）\"},{\"english\":\"Create an ES6 JavaScript Map\",\"chinese\":\"创建一个 JavaScript 映射\"},{\"english\":\"Create a Hash Table\",\"chinese\":\"创建一个哈希表\"},{\"english\":\"Work with Nodes in a Linked List\",\"chinese\":\"使用链表中的节点\"},{\"english\":\"Create a Linked List Class\",\"chinese\":\"引入一种新的数据结构：链表\"},{\"english\":\"Remove Elements from a Linked List\",\"chinese\":\"从链表中删除元素\"},{\"english\":\"Search within a Linked List\",\"chinese\":\"在链表中搜索\"},{\"english\":\"Remove Elements from a Linked List by Index\",\"chinese\":\"在链表中按索引删除元素\"},{\"english\":\"Add Elements at a Specific Index in a Linked List\",\"chinese\":\"在链表的指定索引处添加元素\"},{\"english\":\"Create a Doubly Linked List\",\"chinese\":\"创建一个双向链表\"},{\"english\":\"Reverse a Doubly Linked List\",\"chinese\":\"反转双向链表\"},{\"english\":\"Find the Minimum and Maximum Value in a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小值和最大值\"},{\"english\":\"Add a New Element to a Binary Search Tree\",\"chinese\":\"将新元素添加到二叉树中\"},{\"english\":\"Check if an Element is Present in a Binary Search Tree\",\"chinese\":\"检查二叉树中是否存在某个元素\"},{\"english\":\"Find the Minimum and Maximum Height of a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小高度和最大高度\"},{\"english\":\"Use Depth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用深度优先搜索\"},{\"english\":\"Use Breadth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用广度优先搜索\"},{\"english\":\"Delete a Leaf Node in a Binary Search Tree\",\"chinese\":\"删除二叉树中的叶子节点\"},{\"english\":\"Delete a Node with One Child in a Binary Search Tree\",\"chinese\":\"删除二叉树中有一个子节点的节点\"},{\"english\":\"Delete a Node with Two Children in a Binary Search Tree\",\"chinese\":\"删除二叉树中有两个子节点的节点\"},{\"english\":\"Invert a Binary Tree\",\"chinese\":\"反转二叉树\"},{\"english\":\"Create a Trie Search Tree\",\"chinese\":\"创建一个字典树\"},{\"english\":\"Insert an Element into a Max Heap\",\"chinese\":\"插入一个元素到最大堆中\"},{\"english\":\"Remove an Element from a Max Heap\",\"chinese\":\"从最大堆中删除一个元素\"},{\"english\":\"Implement Heap Sort with a Min Heap\",\"chinese\":\"在最小堆中实现堆排序\"},{\"english\":\"Adjacency List\",\"chinese\":\"邻接表\"},{\"english\":\"Adjacency Matrix\",\"chinese\":\"邻接矩阵\"},{\"english\":\"Incidence Matrix\",\"chinese\":\"关联矩阵\"},{\"english\":\"Breadth-First Search\",\"chinese\":\"广度优先搜索\"},{\"english\":\"Depth-First Search\",\"chinese\":\"深度优先搜索\"},{\"english\":\"Introduction to the Coding Interview Take Home Projects\",\"chinese\":\"私人项目介绍\"},{\"english\":\"Show the Local Weather\",\"chinese\":\"展示当地的天气\"},{\"english\":\"Build a Wikipedia Viewer\",\"chinese\":\"维基百科查看器\"},{\"english\":\"Use the Twitch JSON API\",\"chinese\":\"使用 Twitch 的 JSON API\"},{\"english\":\"Build an Image Search Abstraction Layer\",\"chinese\":\"图像搜索抽象层\"},{\"english\":\"Build a Tic Tac Toe Game\",\"chinese\":\"井字游戏\"},{\"english\":\"Build a Simon Game\",\"chinese\":\"西蒙游戏\"},{\"english\":\"Build a Camper Leaderboard\",\"chinese\":\"学员排行榜\"},{\"english\":\"Build a Recipe Box\",\"chinese\":\"食谱盒\"},{\"english\":\"Build the Game of Life\",\"chinese\":\"游戏人生\"},{\"english\":\"Build a Roguelike Dungeon Crawler Game\",\"chinese\":\"地牢围攻\"},{\"english\":\"P2P Video Chat Application\",\"chinese\":\"P2P 视频聊天应用\"},{\"english\":\"Show National Contiguity with a Force Directed Graph\",\"chinese\":\"用力有向图显示国家之间的地理联系\"},{\"english\":\"Map Data Across the Globe\",\"chinese\":\"全球地图数据\"},{\"english\":\"Manage a Book Trading Club\",\"chinese\":\"管理图书交易俱乐部\"},{\"english\":\"Build a Pinterest Clone\",\"chinese\":\"克隆 Pinterest\"},{\"english\":\"Build a Nightlife Coordination App\",\"chinese\":\"构建一个协调夜生活的应用\"},{\"english\":\"Chart the Stock Market\",\"chinese\":\"绘制股票市场图\"},{\"english\":\"Build a Voting App\",\"chinese\":\"构建一个投票应用\"},{\"english\":\"Build a Pong Game\",\"chinese\":\"构建一个乒乓游戏\"},{\"english\":\"Build a Light-Bright App\",\"chinese\":\"构建一个灯光明亮的应用\"},{\"english\":\"Introduction to the Rosetta Code Problems\",\"chinese\":\"介绍罗刹塔代码\"},{\"english\":\"100 doors\",\"chinese\":\"百扇门\"},{\"english\":\"24 game\",\"chinese\":\"24 点游戏\"},{\"english\":\"9 billion names of God the integer\",\"chinese\":\"上帝的九十亿个名字\"},{\"english\":\"ABC Problem\",\"chinese\":\"ABC 难题\"},{\"english\":\"Introduction to the Project Euler Problems\",\"chinese\":\"欧拉计划介绍\"},{\"english\":\"Problem 1: Multiples of 3 and 5\",\"chinese\":\"关卡 1：3 和 5 的倍数\"},{\"english\":\"Problem 2: Even Fibonacci Numbers\",\"chinese\":\"关卡 2：偶斐波那契数\"},{\"english\":\"Problem 3: Largest prime factor\",\"chinese\":\"关卡 3：最大质因数\"},{\"english\":\"Problem 4: Largest palindrome product\",\"chinese\":\"关卡 4：最大回文乘积\"},{\"english\":\"Problem 5: Smallest multiple\",\"chinese\":\"关卡 5：最小倍数\"},{\"english\":\"Problem 6: Sum square difference\",\"chinese\":\"关卡 6：平方的和与和的平方之差\"},{\"english\":\"Problem 7: 10001st prime\",\"chinese\":\"关卡 7：第 10001 个素数\"},{\"english\":\"Problem 8: Largest product in a series\",\"chinese\":\"关卡 8：连续数字最大乘积\"},{\"english\":\"Problem 9: Special Pythagorean triplet\",\"chinese\":\"关卡 9：特殊毕达哥拉斯三元组\"},{\"english\":\"Problem 10: Summation of primes\",\"chinese\":\"关卡 10：素数的和\"},{\"english\":\"Problem 11: Largest product in a grid\",\"chinese\":\"关卡 11：方阵中的最大乘积\"},{\"english\":\"Problem 12: Highly divisible triangular number\",\"chinese\":\"关卡 12：高度可约的三角形数\"},{\"english\":\"Problem 13: Large sum\",\"chinese\":\"关卡 13：大和\"},{\"english\":\"Problem 14: Longest Collatz sequence\",\"chinese\":\"关卡 14：最长考拉兹序列\"},{\"english\":\"Problem 15: Lattice paths\",\"chinese\":\"关卡 15：网格路径\"},{\"english\":\"Problem 16: Power digit sum\",\"chinese\":\"关卡 16：幂的数字和\"},{\"english\":\"Problem 17: Number letter counts\",\"chinese\":\"关卡 17：表达数字的英文字母计数\"},{\"english\":\"Problem 18: Maximum path sum I\",\"chinese\":\"关卡 18：最大路径和 I\"},{\"english\":\"Problem 19: Counting Sundays\",\"chinese\":\"关卡 19：数星期日\"},{\"english\":\"Problem 20: Factorial digit sum\",\"chinese\":\"关卡 20：阶乘数字和\"},{\"english\":\"Problem 21: Amicable numbers\",\"chinese\":\"关卡 21：亲和数\"},{\"english\":\"Problem 22: Names scores\",\"chinese\":\"关卡 22：姓名得分\"},{\"english\":\"Problem 23: Non-abundant sums\",\"chinese\":\"关卡 23：并非盈数之和\"},{\"english\":\"Problem 24: Lexicographic permutations\",\"chinese\":\"关卡 24：字典序排列\"},{\"english\":\"Problem 25: 1000-digit Fibonacci number\",\"chinese\":\"关卡 25：一千位斐波那契数\"},{\"english\":\"Problem 26: Reciprocal cycles\",\"chinese\":\"关卡 26：倒数的循环节\"},{\"english\":\"Problem 27: Quadratic primes\",\"chinese\":\"关卡 27：二次“素数生成”多项式\"},{\"english\":\"Problem 28: Number spiral diagonals\",\"chinese\":\"关卡 28：螺旋数阵对角线\"},{\"english\":\"Problem 29: Distinct powers\",\"chinese\":\"关卡 29：不同的幂\"},{\"english\":\"Problem 30: Digit n powers\",\"chinese\":\"关卡 30：各位数字的五次幂\"},{\"english\":\"Problem 31: Coin sums\",\"chinese\":\"关卡 31：硬币求和\"},{\"english\":\"Problem 32: Pandigital products\",\"chinese\":\"关卡 32：全数字的乘积\"},{\"english\":\"Problem 33: Digit cancelling fractions\",\"chinese\":\"关卡 33：消去数字的分数\"},{\"english\":\"Problem 34: Digit factorials\",\"chinese\":\"关卡 34：各位数字的阶乘\"},{\"english\":\"Problem 35: Circular primes\",\"chinese\":\"关卡 35：圆周素数\"},{\"english\":\"Problem 36: Double-base palindromes\",\"chinese\":\"关卡 36：双进制回文数\"},{\"english\":\"Problem 37: Truncatable primes\",\"chinese\":\"关卡 37：可截素数\"},{\"english\":\"Problem 38: Pandigital multiples\",\"chinese\":\"关卡 38：全数字的倍数\"},{\"english\":\"Problem 39: Integer right triangles\",\"chinese\":\"关卡 39：整数边长直角三角形\"},{\"english\":\"Problem 40: Champernowne's constant\",\"chinese\":\"关卡 40：钱珀瑙恩常数\"},{\"english\":\"Problem 41: Pandigital prime\",\"chinese\":\"关卡 41：全数字的素数\"},{\"english\":\"Problem 42: Coded triangle numbers\",\"chinese\":\"关卡 42：编码三角形数\"},{\"english\":\"Problem 43: Sub-string divisibility\",\"chinese\":\"关卡 43：子串的可整除性\"},{\"english\":\"Problem 44: Pentagon numbers\",\"chinese\":\"关卡 44：五边形数\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Map/components/dict.json\n// module id = 181\n// module chunks = 35783957827783 125088136674209 205441848602771","import React from 'react';\n\nimport './button-spacer.css';\n\nfunction ButtonSpacer() {\n  return <div className='button-spacer' />;\n}\n\nButtonSpacer.displayName = 'ButtonSpacer';\n\nexport default ButtonSpacer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/util/ButtonSpacer.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'react-bootstrap';\n\nfunction FullWidthRow({ children }) {\n  return (\n    <Row>\n      <Col sm={8} smOffset={2} xs={12}>\n        {children}\n      </Col>\n    </Row>\n  );\n}\n\nFullWidthRow.displayName = 'FullWidthRow';\nFullWidthRow.propTypes = {\n  children: PropTypes.any\n};\n\nexport default FullWidthRow;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/util/FullWidthRow.js","/* global graphql */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Link, { navigateTo } from 'gatsby-link';\nimport Helmet from 'react-helmet';\nimport { Button, ListGroup, ListGroupItem } from 'react-bootstrap';\n\nimport FullWidthRow from '../../components/util/FullWidthRow';\nimport ButtonSpacer from '../../components/util/ButtonSpacer';\nimport { MarkdownRemark, AllChallengeNode } from '../../redux/propTypes';\n\nimport './intro.css';\nconst dict = require('../../components/Map/components/dict.json')\nconst propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: MarkdownRemark,\n    allChallengeNode: AllChallengeNode\n  })\n};\n\nfunction renderMenuItems({ edges = [] }) {\n  return edges.map(({ node }) => node).map(({ title, fields: { slug } }) => {\n    dict.forEach(item =>{\n      if(item.english == title){\n        title = item.chinese\n      }\n    })\n    return (\n      <Link key={'intro-' + slug} to={slug}>\n        <ListGroupItem>{title}</ListGroupItem>\n      </Link>\n    )\n  });\n}\n\nfunction handleCurriculumClick() {\n  return navigateTo('/');\n}\n\nfunction IntroductionPage({ data: { markdownRemark, allChallengeNode } }) {\n  const { html, frontmatter: { block } } = markdownRemark;\n  const firstLesson = allChallengeNode && allChallengeNode.edges[0].node;\n  const firstLessonPath = firstLesson\n    ? firstLesson.fields.slug\n    : '/strange-place';\n  return (\n    <Fragment>\n      <Helmet>\n        <title>{block} | freeCodeCamp</title>\n      </Helmet>\n      <FullWidthRow>\n        <div\n          className='intro-layout'\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </FullWidthRow>\n      <FullWidthRow>\n        <Link className='btn btn-lg btn-primary btn-block' to={firstLessonPath}>\n          回到第一个小节\n        </Link>\n        <ButtonSpacer />\n        <Button\n          block={true}\n          bsSize='lg'\n          className='btn-primary-invert'\n          onClick={handleCurriculumClick}\n          >\n          查看所有的课程\n        </Button>\n        <ButtonSpacer />\n        <hr />\n      </FullWidthRow>\n      <FullWidthRow>\n        <h2 className='intro-toc-title'>课程目录</h2>\n        <ListGroup className='intro-toc'>\n          {allChallengeNode ? renderMenuItems(allChallengeNode) : null}\n        </ListGroup>\n      </FullWidthRow>\n    </Fragment>\n  );\n}\n\nIntroductionPage.displayName = 'IntroductionPage';\nIntroductionPage.propTypes = propTypes;\n\nexport default IntroductionPage;\n\nexport const query = graphql`\n  query IntroPageBySlug($slug: String!, $block: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        block\n      }\n      html\n    }\n    allChallengeNode(\n      filter: { block: { eq: $block } }\n      sort: { fields: [superOrder, order, suborder] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          title\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/Introduction/Intro.js"],"sourceRoot":""}