webpackJsonp([0xf3682f75cb0a],{3852:function(e,t){e.exports={data:{challengeNode:{title:"Use Conditional Logic with If Statements",description:["<code>If</code>语句用于在代码中做条件判断。关键字<code>if</code>告诉 JavaScript 在小括号中的条件为真的情况下去执行定义在大括号里面的代码。这种条件被称为<code>Boolean</code>条件，因为他们只可能是<code>true</code>（真）或<code>false</code>（假）。","当条件的计算结果为<code>true</code>，程序执行大括号内的语句。当布尔条件的计算结果为<code>false</code>，大括号内的代码将不会执行。","<strong>伪代码</strong>","<blockquote>if(<i>条件为真</i>){<br>  <i>语句被执行</i><br>}</blockquote>","<strong>示例</strong>",'<blockquote>function test (myCondition) {<br>  if (myCondition) {<br>     return "It was true";<br>  }<br>  return "It was false";<br>}<br>test(true);  // 返回 "It was true"<br>test(false); // 返回 "It was false"</blockquote>','当<code>test</code>被调用，并且传递进来的参数值为<code>true</code>，<code>if</code>语句会计算<code>myCondition</code>的结果，看它是真还是假。如果条件为<code>true</code>，函数会返回<code>"It was true"</code>。当<code>test</code>被调用，并且传递进来的参数值为<code>false</code>，<code>myCondition</code><em>不</em> 为<code>true</code>，并且不执行大括号后面的语句，函数返回<code>"It was false"</code>。',"<hr>",'在函数内部创建一个<code>if</code>语句，如果该参数<code>wasThatTrue</code>值为<code>true</code>，返回<code>"Yes, that was true"</code>，否则，并返回<code>"No, that was false"</code>。'],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/use-conditional-logic-with-if-statements",blockName:"Basic JavaScript",tests:[{text:"<code>trueOrFalse</code>应该是一个函数",testString:"assert(typeof trueOrFalse === \"function\", '<code>trueOrFalse</code>应该是一个函数');"},{text:"<code>trueOrFalse(true)</code>应该返回一个字符串",testString:"assert(typeof trueOrFalse(true) === \"string\", '<code>trueOrFalse(true)</code>应该返回一个字符串');"},{text:"<code>trueOrFalse(false)</code>应该返回一个字符串",testString:"assert(typeof trueOrFalse(false) === \"string\", '<code>trueOrFalse(false)</code>应该返回一个字符串');"},{text:'<code>trueOrFalse(true)</code>应该返回 "Yes, that was true"',testString:'assert(trueOrFalse(true) === "Yes, that was true", \'<code>trueOrFalse(true)</code>应该返回 "Yes, that was true"\');'},{text:'<code>trueOrFalse(false)</code>应该返回 "No, that was false"',testString:'assert(trueOrFalse(false) === "No, that was false", \'<code>trueOrFalse(false)</code>应该返回 "No, that was false"\');'}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'// 示例\nfunction ourTrueOrFalse(isItTrue) {\n  if (isItTrue) { \n    return "Yes, it\'s true";\n  }\n  return "No, it\'s false";\n}\n\n// 初始化变量\nfunction trueOrFalse(wasThatTrue) {\n\n  // 请把你的代码写在这条注释以下\n  \n  \n  \n  // 请把你的代码写在这条注释以上.\n\n}\n\n// 你可以修改这一行来测试你的代码\ntrueOrFalse(true);',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-equality-operator",id:"cf1111c1c12feddfaeb3bdef"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/use-conditional-logic-with-if-statements"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-use-conditional-logic-with-if-statements-beb76fc82002508f1310.js.map