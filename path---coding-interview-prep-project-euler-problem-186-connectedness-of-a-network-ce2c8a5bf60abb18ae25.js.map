{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-186-connectedness-of-a-network-ce2c8a5bf60abb18ae25.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-186-connectedness-of-a-network.json"],"names":["webpackJsonp","2957","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,0CAAAC,aAAA,8jBAA6lB,uOAA4O,sNAAAC,cAAA,EAAAC,QAAiRC,KAAA,8EAAAC,UAAA,gBAAAC,QAA2HC,KAAA,iDAAAC,WAAA,gGAAoKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,8DAAAC,GAAA,4BAA+JrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-186-connectedness-of-a-network-ce2c8a5bf60abb18ae25.js","sourcesContent":["webpackJsonp([9087983111238],{\n\n/***/ 2957:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 186: Connectedness of a network\",\"description\":[\"Here are the records from a busy telephone system with one million users:\",\"\",\"RecNrCallerCalled120000710005326001835004393600863701497.........\",\"The telephone number of the caller and the called number in record n are Caller(n) = S2n-1 and Called(n) = S2n where S1,2,3,... come from the \\\"Lagged Fibonacci Generator\\\":\",\"\",\"For 1 ≤ k ≤ 55, Sk = [100003 - 200003k + 300007k3] (modulo 1000000)\",\"For 56 ≤ k, Sk = [Sk-24 + Sk-55] (modulo 1000000)\",\"\",\"If Caller(n) = Called(n) then the user is assumed to have misdialled and the call fails; otherwise the call is successful.\",\"\",\"From the start of the records, we say that any pair of users X and Y are friends if X calls Y or vice-versa. Similarly, X is a friend of a friend of Z if X is a friend of Y and Y is a friend of Z; and so on for longer chains.\",\"\",\"The Prime Minister's phone number is 524287. After how many successful calls, not counting misdials, will 99% of the users (including the PM) be a friend, or a friend of a friend etc., of the Prime Minister?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-186-connectedness-of-a-network\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler186()</code> should return 2325629.\",\"testString\":\"assert.strictEqual(euler186(), 2325629, '<code>euler186()</code> should return 2325629.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler186() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler186();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-187-semiprimes\",\"id\":\"5900f4281000cf542c50ff39\"},\"slug\":\"/coding-interview-prep/project-euler/problem-186-connectedness-of-a-network\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-186-connectedness-of-a-network-ce2c8a5bf60abb18ae25.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 186: Connectedness of a network\",\"description\":[\"Here are the records from a busy telephone system with one million users:\",\"\",\"RecNrCallerCalled120000710005326001835004393600863701497.........\",\"The telephone number of the caller and the called number in record n are Caller(n) = S2n-1 and Called(n) = S2n where S1,2,3,... come from the \\\"Lagged Fibonacci Generator\\\":\",\"\",\"For 1 ≤ k ≤ 55, Sk = [100003 - 200003k + 300007k3] (modulo 1000000)\",\"For 56 ≤ k, Sk = [Sk-24 + Sk-55] (modulo 1000000)\",\"\",\"If Caller(n) = Called(n) then the user is assumed to have misdialled and the call fails; otherwise the call is successful.\",\"\",\"From the start of the records, we say that any pair of users X and Y are friends if X calls Y or vice-versa. Similarly, X is a friend of a friend of Z if X is a friend of Y and Y is a friend of Z; and so on for longer chains.\",\"\",\"The Prime Minister's phone number is 524287. After how many successful calls, not counting misdials, will 99% of the users (including the PM) be a friend, or a friend of a friend etc., of the Prime Minister?\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-186-connectedness-of-a-network\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler186()</code> should return 2325629.\",\"testString\":\"assert.strictEqual(euler186(), 2325629, '<code>euler186()</code> should return 2325629.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler186() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler186();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-187-semiprimes\",\"id\":\"5900f4281000cf542c50ff39\"},\"slug\":\"/coding-interview-prep/project-euler/problem-186-connectedness-of-a-network\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-186-connectedness-of-a-network.json\n// module id = 2957\n// module chunks = 9087983111238"],"sourceRoot":""}