{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-search-and-replace-b078b19a7faa19a6febd.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-search-and-replace.json"],"names":["webpackJsonp","3936","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qBAAAC,aAAA,sSAAAC,cAAA,EAAAC,QAAoXC,KAAA,iGAAAC,UAAA,mCAAAC,QAAiKC,KAAA,iGAAAC,WAAA,yMAAoVD,KAAA,iHAAAC,WAAA,yOAAoYD,KAAA,+GAAAC,WAAA,qOAA8XD,KAAA,mFAAAC,WAAA,6KAA0SD,KAAA,6HAAAC,WAAA,kQAAwaC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,6IAAsMC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,0FAAAC,GAAA,4BAA2LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-search-and-replace-b078b19a7faa19a6febd.js","sourcesContent":["webpackJsonp([235016878378348],{\n\n/***/ 3936:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Search and Replace\",\"description\":[\"在这道题目中，我们需要写一个字符串的搜索与替换函数，它的返回值为完成替换后的新字符串。\",\"这个函数接收的第一个参数为待替换的句子。\",\"第二个参数为句中需要被替换的单词。\",\"第三个参数为替换后的单词。\",\"<strong>注意：</strong><br> 你需要保留被替换单词首字母的大小写格式。即如果传入的第二个参数为 \\\"Book\\\"，第三个参数为 \\\"dog\\\"，那么替换后的结果应为 \\\"Dog\\\"\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>myReplace(\\\"Let us go to the store\\\", \\\"store\\\", \\\"mall\\\")</code>应该返回 \\\"Let us go to the mall\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"Let us go to the store\\\", \\\"store\\\", \\\"mall\\\"), \\\"Let us go to the mall\\\", '<code>myReplace(\\\"Let us go to the store\\\", \\\"store\\\", \\\"mall\\\")</code>应该返回 \\\"Let us go to the mall\\\"。');\"},{\"text\":\"<code>myReplace(\\\"He is Sleeping on the couch\\\", \\\"Sleeping\\\", \\\"sitting\\\")</code>应该返回 \\\"He is Sitting on the couch\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"He is Sleeping on the couch\\\", \\\"Sleeping\\\", \\\"sitting\\\"), \\\"He is Sitting on the couch\\\", '<code>myReplace(\\\"He is Sleeping on the couch\\\", \\\"Sleeping\\\", \\\"sitting\\\")</code>应该返回 \\\"He is Sitting on the couch\\\"。');\"},{\"text\":\"<code>myReplace(\\\"This has a spellngi error\\\", \\\"spellngi\\\", \\\"spelling\\\")</code>应该返回 \\\"This has a spelling error\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"This has a spellngi error\\\", \\\"spellngi\\\", \\\"spelling\\\"), \\\"This has a spelling error\\\", '<code>myReplace(\\\"This has a spellngi error\\\", \\\"spellngi\\\", \\\"spelling\\\")</code>应该返回 \\\"This has a spelling error\\\"。');\"},{\"text\":\"<code>myReplace(\\\"His name is Tom\\\", \\\"Tom\\\", \\\"john\\\")</code>应该返回 \\\"His name is John\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"His name is Tom\\\", \\\"Tom\\\", \\\"john\\\"), \\\"His name is John\\\", '<code>myReplace(\\\"His name is Tom\\\", \\\"Tom\\\", \\\"john\\\")</code>应该返回 \\\"His name is John\\\"。');\"},{\"text\":\"<code>myReplace(\\\"Let us get back to more Coding\\\", \\\"Coding\\\", \\\"algorithms\\\")</code>应该返回 \\\"Let us get back to more Algorithms\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"Let us get back to more Coding\\\", \\\"Coding\\\", \\\"algorithms\\\"), \\\"Let us get back to more Algorithms\\\", '<code>myReplace(\\\"Let us get back to more Coding\\\", \\\"Coding\\\", \\\"algorithms\\\")</code>应该返回 \\\"Let us get back to more Algorithms\\\"。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function myReplace(str, before, after) {\\n  return str;\\n}\\n\\nmyReplace(\\\"A quick brown fox jumped over the lazy dog\\\", \\\"jumped\\\", \\\"leaped\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing\",\"id\":\"a0b5010f579e69b815e7c5d6\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-search-and-replace-b078b19a7faa19a6febd.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Search and Replace\",\"description\":[\"在这道题目中，我们需要写一个字符串的搜索与替换函数，它的返回值为完成替换后的新字符串。\",\"这个函数接收的第一个参数为待替换的句子。\",\"第二个参数为句中需要被替换的单词。\",\"第三个参数为替换后的单词。\",\"<strong>注意：</strong><br> 你需要保留被替换单词首字母的大小写格式。即如果传入的第二个参数为 \\\"Book\\\"，第三个参数为 \\\"dog\\\"，那么替换后的结果应为 \\\"Dog\\\"\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>myReplace(\\\"Let us go to the store\\\", \\\"store\\\", \\\"mall\\\")</code>应该返回 \\\"Let us go to the mall\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"Let us go to the store\\\", \\\"store\\\", \\\"mall\\\"), \\\"Let us go to the mall\\\", '<code>myReplace(\\\"Let us go to the store\\\", \\\"store\\\", \\\"mall\\\")</code>应该返回 \\\"Let us go to the mall\\\"。');\"},{\"text\":\"<code>myReplace(\\\"He is Sleeping on the couch\\\", \\\"Sleeping\\\", \\\"sitting\\\")</code>应该返回 \\\"He is Sitting on the couch\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"He is Sleeping on the couch\\\", \\\"Sleeping\\\", \\\"sitting\\\"), \\\"He is Sitting on the couch\\\", '<code>myReplace(\\\"He is Sleeping on the couch\\\", \\\"Sleeping\\\", \\\"sitting\\\")</code>应该返回 \\\"He is Sitting on the couch\\\"。');\"},{\"text\":\"<code>myReplace(\\\"This has a spellngi error\\\", \\\"spellngi\\\", \\\"spelling\\\")</code>应该返回 \\\"This has a spelling error\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"This has a spellngi error\\\", \\\"spellngi\\\", \\\"spelling\\\"), \\\"This has a spelling error\\\", '<code>myReplace(\\\"This has a spellngi error\\\", \\\"spellngi\\\", \\\"spelling\\\")</code>应该返回 \\\"This has a spelling error\\\"。');\"},{\"text\":\"<code>myReplace(\\\"His name is Tom\\\", \\\"Tom\\\", \\\"john\\\")</code>应该返回 \\\"His name is John\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"His name is Tom\\\", \\\"Tom\\\", \\\"john\\\"), \\\"His name is John\\\", '<code>myReplace(\\\"His name is Tom\\\", \\\"Tom\\\", \\\"john\\\")</code>应该返回 \\\"His name is John\\\"。');\"},{\"text\":\"<code>myReplace(\\\"Let us get back to more Coding\\\", \\\"Coding\\\", \\\"algorithms\\\")</code>应该返回 \\\"Let us get back to more Algorithms\\\"。\",\"testString\":\"assert.deepEqual(myReplace(\\\"Let us get back to more Coding\\\", \\\"Coding\\\", \\\"algorithms\\\"), \\\"Let us get back to more Algorithms\\\", '<code>myReplace(\\\"Let us get back to more Coding\\\", \\\"Coding\\\", \\\"algorithms\\\")</code>应该返回 \\\"Let us get back to more Algorithms\\\"。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function myReplace(str, before, after) {\\n  return str;\\n}\\n\\nmyReplace(\\\"A quick brown fox jumped over the lazy dog\\\", \\\"jumped\\\", \\\"leaped\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing\",\"id\":\"a0b5010f579e69b815e7c5d6\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-search-and-replace.json\n// module id = 3936\n// module chunks = 235016878378348"],"sourceRoot":""}