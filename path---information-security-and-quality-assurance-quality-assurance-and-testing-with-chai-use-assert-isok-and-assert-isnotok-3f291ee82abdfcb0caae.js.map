{"version":3,"sources":["webpack:///path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-assert-isok-and-assert-isnotok-3f291ee82abdfcb0caae.js","webpack:///./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-assert-isok-and-assert-isnotok.json"],"names":["webpackJsonp","3709","module","exports","data","challengeNode","title","guideUrl","description","challengeType","fields","blockName","slug","tests","text","testString","pathContext","challengeMeta","introPath","template","required","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qCAAAC,SAAA,KAAAC,aAAA,8XAAAC,cAAA,EAAAC,QAAseC,UAAA,0CAAAC,KAAA,yHAAAC,QAAgMC,KAAA,wBAAAC,WAAA,oLAAgOD,KAAA,gDAAAC,WAAA,yNAA6RD,KAAA,gDAAAC,WAAA,yNAA6RD,KAAA,gDAAAC,WAAA,yNAA4RC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAC,YAAAC,kBAAA,0GAAAC,GAAA,4BAA2MV,KAAA","file":"path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-assert-isok-and-assert-isnotok-3f291ee82abdfcb0caae.js","sourcesContent":["webpackJsonp([21109598629402],{\n\n/***/ 3709:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Assert.isOK and Assert.isNotOK\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\"Use assert.isOk() or assert.isNotOk() to make the tests pass.\",\".isOk(truthy) and .isNotOk(falsey) will pass.\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-assert-isok-and-assert-isnotok\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - isOk vs. isNotOk\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {  assert.equal(data.assertions[0].method, 'isNotOk', 'Null is falsey'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - isOk vs. isNotOk\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {  assert.equal(data.assertions[1].method, 'isOk','A string is truthy'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - isOk vs. isNotOk\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {  assert.equal(data.assertions[2].method, 'isOk', 'true is truthy'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-for-truthiness\",\"id\":\"587d824b367417b2b2512c48\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-assert-isok-and-assert-isnotok\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-assert-isok-and-assert-isnotok-3f291ee82abdfcb0caae.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Assert.isOK and Assert.isNotOK\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\"Use assert.isOk() or assert.isNotOk() to make the tests pass.\",\".isOk(truthy) and .isNotOk(falsey) will pass.\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-assert-isok-and-assert-isnotok\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - isOk vs. isNotOk\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {  assert.equal(data.assertions[0].method, 'isNotOk', 'Null is falsey'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - isOk vs. isNotOk\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {  assert.equal(data.assertions[1].method, 'isOk','A string is truthy'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - isOk vs. isNotOk\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=2').then(data => {  assert.equal(data.assertions[2].method, 'isOk', 'true is truthy'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-for-truthiness\",\"id\":\"587d824b367417b2b2512c48\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-assert-isok-and-assert-isnotok\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-assert-isok-and-assert-isnotok.json\n// module id = 3709\n// module chunks = 21109598629402"],"sourceRoot":""}