webpackJsonp([55018229936702],{3308:function(e,t){e.exports={data:{challengeNode:{title:"Problem 7: 10001st prime",description:["列出前 6 个素数，它们分别是 2、3、5、7、11 和 13。我们可以看出，第 6 个素数是 13。","第 10,001 个素数是多少？"],challengeType:5,fields:{slug:"/coding-interview-prep/project-euler/problem-7-10001st-prime",blockName:"Project Euler",tests:[{text:"<code>nthPrime(6)</code>应该返回 13。",testString:"assert.strictEqual(nthPrime(6), 13, '<code>nthPrime(6)</code>应该返回 13。');"},{text:"<code>nthPrime(10)</code>应该返回 29。",testString:"assert.strictEqual(nthPrime(10), 29, '<code>nthPrime(10)</code>应该返回 29。');"},{text:"<code>nthPrime(100)</code>应该返回 541。",testString:"assert.strictEqual(nthPrime(100), 541, '<code>nthPrime(100)</code>应该返回 541。');"},{text:"<code>nthPrime(1000)</code>应该返回 7919。",testString:"assert.strictEqual(nthPrime(1000), 7919, '<code>nthPrime(1000)</code>应该返回 7919。');"},{text:"<code>nthPrime(10001)</code>应该返回 104743。",testString:"assert.strictEqual(nthPrime(10001), 104743, '<code>nthPrime(10001)</code>应该返回 104743。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function nthPrime(number) {\n  // 祝你好运！\n  return true;\n}\n\nnthPrime(10001);",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/project-euler/problem-8-largest-product-in-a-series",id:"5900f3731000cf542c50fe86"},slug:"/coding-interview-prep/project-euler/problem-7-10001st-prime"}}}});
//# sourceMappingURL=path---coding-interview-prep-project-euler-problem-7-10001st-prime-b3359d268d50920ab464.js.map