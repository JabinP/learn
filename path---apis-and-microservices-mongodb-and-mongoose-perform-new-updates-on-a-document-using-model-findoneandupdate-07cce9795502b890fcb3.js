webpackJsonp([25881143585017],{2797:function(e,n){e.exports={data:{challengeNode:{title:"Perform New Updates on a Document Using model.findOneAndUpdate()",guideUrl:null,description:["mongoose 的最新版本有简化 documents 更新的方法。 一些更高级的用法 (即 pre/post 钩子, 验证) 与这种方法的行为不同, 所以 Classic 方法在大多数的情况下仍然有用。当通过 Id 进行搜索时可以使用 <code>findByIdAndUpdate()</code>。","使用 personName 作为搜索的关键词查找人员，并将查到的人员的年龄设为 20 岁。","提示: 我们想要你返更新后的 document， 你可以把 <code>findOneAndUpdate()</code> 的第三个参数设置为 <code>{new: true}</code>。 默认情况下，这些方法返回未被修改的数据。"],challengeType:2,fields:{blockName:"MongoDB and Mongoose",slug:"/apis-and-microservices/mongodb-and-mongoose/perform-new-updates-on-a-document-using-model-findoneandupdate",tests:[{text:"对一个 item（项目）的  findOneAndUpdate  操作成功",testString:"getUserInput => $.post(getUserInput('url') +'/_api/find-one-update', {name:'Dorian Gray', age: 35, favoriteFoods:['unknown']}).then(data => { assert.equal(data.name,'Dorian Gray','item.name is not what expected'); assert.equal(data.age, 20,'item.age is not what expected'); assert.deepEqual(data.favoriteFoods, ['unknown'],'item.favoriteFoods is not what expected'); assert.equal(data.__v, 0,'findOneAndUpdate does not increment version by design !!!'); }, xhr => { throw new Error(xhr.responseText); })"}]}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/apis-and-microservices/mongodb-and-mongoose/delete-one-document-using-model-findbyidandremove",id:"587d7fb8367417b2b2512c0f"},slug:"/apis-and-microservices/mongodb-and-mongoose/perform-new-updates-on-a-document-using-model-findoneandupdate"}}}});
//# sourceMappingURL=path---apis-and-microservices-mongodb-and-mongoose-perform-new-updates-on-a-document-using-model-findoneandupdate-07cce9795502b890fcb3.js.map