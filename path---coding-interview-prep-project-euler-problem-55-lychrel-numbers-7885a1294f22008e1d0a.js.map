{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-55-lychrel-numbers-7885a1294f22008e1d0a.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-55-lychrel-numbers.json"],"names":["webpackJsonp","3292","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,8BAAAC,aAAA,snCAA8oC,yKAAAC,cAAA,EAAAC,QAAkOC,KAAA,kEAAAC,UAAA,gBAAAC,QAA+GC,KAAA,4CAAAC,WAAA,sFAAqJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,yEAA4HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,qEAAAC,GAAA,4BAAsKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-55-lychrel-numbers-7885a1294f22008e1d0a.js","sourcesContent":["webpackJsonp([48229317183014],{\n\n/***/ 3292:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 55: Lychrel numbers\",\"description\":[\"If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.\",\"Not all numbers produce palindromes so quickly. For example,\",\"349 + 943 = 1292,\",\"1292 + 2921 = 4213\",\"4213 + 3124 = 7337\",\"That is, 349 took three iterations to arrive at a palindrome.\",\"Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, 10677 is the first number to be shown to require over fifty iterations before producing a palindrome: 4668731596684224866951378664 (53 iterations, 28-digits).\",\"Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is 4994.\",\"How many Lychrel numbers are there below ten-thousand?\",\"NOTE: Wording was modified slightly on 24 April 2007 to emphasise the theoretical nature of Lychrel numbers.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-55-lychrel-numbers\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler55()</code> should return 249.\",\"testString\":\"assert.strictEqual(euler55(), 249, '<code>euler55()</code> should return 249.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler55() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler55();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-56-powerful-digit-sum\",\"id\":\"5900f3a31000cf542c50feb6\"},\"slug\":\"/coding-interview-prep/project-euler/problem-55-lychrel-numbers\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-55-lychrel-numbers-7885a1294f22008e1d0a.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 55: Lychrel numbers\",\"description\":[\"If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.\",\"Not all numbers produce palindromes so quickly. For example,\",\"349 + 943 = 1292,\",\"1292 + 2921 = 4213\",\"4213 + 3124 = 7337\",\"That is, 349 took three iterations to arrive at a palindrome.\",\"Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, 10677 is the first number to be shown to require over fifty iterations before producing a palindrome: 4668731596684224866951378664 (53 iterations, 28-digits).\",\"Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is 4994.\",\"How many Lychrel numbers are there below ten-thousand?\",\"NOTE: Wording was modified slightly on 24 April 2007 to emphasise the theoretical nature of Lychrel numbers.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-55-lychrel-numbers\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler55()</code> should return 249.\",\"testString\":\"assert.strictEqual(euler55(), 249, '<code>euler55()</code> should return 249.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler55() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler55();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-56-powerful-digit-sum\",\"id\":\"5900f3a31000cf542c50feb6\"},\"slug\":\"/coding-interview-prep/project-euler/problem-55-lychrel-numbers\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-55-lychrel-numbers.json\n// module id = 3292\n// module chunks = 48229317183014"],"sourceRoot":""}