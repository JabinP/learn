{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-regular-expressions-specify-exact-number-of-matches-f4b4bde90450c9f937b5.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-specify-exact-number-of-matches.json"],"names":["webpackJsonp","4007","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,kCAAAC,aAAA,0LAAyO,uQAA6P,0FAAAC,cAAA,EAAAC,QAAwJC,KAAA,iGAAAC,UAAA,sBAAAC,QAAoJC,KAAA,kBAAAC,WAAA,0EAAgHD,KAAA,qCAAAC,WAAA,8EAA2ID,KAAA,sCAAAC,WAAA,gFAA8ID,KAAA,uCAAAC,WAAA,kFAAiJD,KAAA,uCAAAC,WAAA,kFAAiJD,KAAA,6DAAAC,WAAA,4HAAoNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,oGAAyJC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,uFAAAC,GAAA,4BAAwLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-regular-expressions-specify-exact-number-of-matches-f4b4bde90450c9f937b5.js","sourcesContent":["webpackJsonp([106898187310685],{\n\n/***/ 4007:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Specify Exact Number of Matches\",\"description\":[\"你可以使用带有花括号的<code>数量说明符</code>来指定匹配模式的上下限。但有时你只需要特定数量的匹配。\",\"要指定一定数量的匹配模式，只需在大括号之间放置一个数字。\",\"例如，要只匹配字母<code>a</code>出现<code>3</code>次的单词<code>\\\"hah\\\"</code>，你的正则表达式应为<code>/ha{3}h/</code>。\",\"<blockquote>let A4 = \\\"haaaah\\\";<br>let A3 = \\\"haaah\\\";<br>let A100 = \\\"h\\\" + \\\"a\\\".repeat(100) + \\\"h\\\";<br>let multipleHA = /a{3}h/;<br>multipleHA.test(A4); // Returns false<br>multipleHA.test(A3); // Returns true<br>multipleHA.test(A100); // Returns false</blockquote>\",\"<hr>\",\"修改正则表达式<code>timRegex</code>，以匹配仅有四个字母单词<code>m</code>的单词<code>\\\"Timber\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用花括号。\",\"testString\":\"assert(timRegex.source.match(/{.*?}/).length > 0, '你的正则表达式应该使用花括号。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Timber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Timber\\\"), '你的正则表达式不应该匹配<code>\\\"Timber\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Timmber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Timmber\\\"), '你的正则表达式不应该匹配<code>\\\"Timmber\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Timmmber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Timmmber\\\"), '你的正则表达式不应该匹配<code>\\\"Timmmber\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Timmmmber\\\"</code>。\",\"testString\":\"assert(timRegex.test(\\\"Timmmmber\\\"), '你的正则表达式应该匹配<code>\\\"Timmmmber\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配包含 30 个字母<code>m</code>的<code>\\\"Timber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Ti\\\" + \\\"m\\\".repeat(30) + \\\"ber\\\"), '你的正则表达式不应该匹配包含 30 个字母<code>m</code>的<code>\\\"Timber\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let timStr = \\\"Timmmmber\\\";\\nlet timRegex = /change/; // 修改这一行\\nlet result = timRegex.test(timStr);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none\",\"id\":\"587d7db9367417b2b2512ba7\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-regular-expressions-specify-exact-number-of-matches-f4b4bde90450c9f937b5.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Specify Exact Number of Matches\",\"description\":[\"你可以使用带有花括号的<code>数量说明符</code>来指定匹配模式的上下限。但有时你只需要特定数量的匹配。\",\"要指定一定数量的匹配模式，只需在大括号之间放置一个数字。\",\"例如，要只匹配字母<code>a</code>出现<code>3</code>次的单词<code>\\\"hah\\\"</code>，你的正则表达式应为<code>/ha{3}h/</code>。\",\"<blockquote>let A4 = \\\"haaaah\\\";<br>let A3 = \\\"haaah\\\";<br>let A100 = \\\"h\\\" + \\\"a\\\".repeat(100) + \\\"h\\\";<br>let multipleHA = /a{3}h/;<br>multipleHA.test(A4); // Returns false<br>multipleHA.test(A3); // Returns true<br>multipleHA.test(A100); // Returns false</blockquote>\",\"<hr>\",\"修改正则表达式<code>timRegex</code>，以匹配仅有四个字母单词<code>m</code>的单词<code>\\\"Timber\\\"</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用花括号。\",\"testString\":\"assert(timRegex.source.match(/{.*?}/).length > 0, '你的正则表达式应该使用花括号。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Timber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Timber\\\"), '你的正则表达式不应该匹配<code>\\\"Timber\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Timmber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Timmber\\\"), '你的正则表达式不应该匹配<code>\\\"Timmber\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配<code>\\\"Timmmber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Timmmber\\\"), '你的正则表达式不应该匹配<code>\\\"Timmmber\\\"</code>。');\"},{\"text\":\"你的正则表达式应该匹配<code>\\\"Timmmmber\\\"</code>。\",\"testString\":\"assert(timRegex.test(\\\"Timmmmber\\\"), '你的正则表达式应该匹配<code>\\\"Timmmmber\\\"</code>。');\"},{\"text\":\"你的正则表达式不应该匹配包含 30 个字母<code>m</code>的<code>\\\"Timber\\\"</code>。\",\"testString\":\"assert(!timRegex.test(\\\"Ti\\\" + \\\"m\\\".repeat(30) + \\\"ber\\\"), '你的正则表达式不应该匹配包含 30 个字母<code>m</code>的<code>\\\"Timber\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let timStr = \\\"Timmmmber\\\";\\nlet timRegex = /change/; // 修改这一行\\nlet result = timRegex.test(timStr);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none\",\"id\":\"587d7db9367417b2b2512ba7\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-specify-exact-number-of-matches.json\n// module id = 4007\n// module chunks = 106898187310685"],"sourceRoot":""}