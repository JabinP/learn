webpackJsonp([70305348438910],{3676:function(e,t){e.exports={data:{challengeNode:{title:"Configure Helmet Using the ‘parent’ helmet() Middleware",guideUrl:null,description:["温馨提醒，本项目在 <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-infosec/'>这个 Glitch 项目</a> 的基础上进行开发。你也可以从 <a href='https://github.com/freeCodeCamp/boilerplate-infosec/'>GitHub</a> 上克隆。","app.use(helmet()) 会自动加载 noCache() 和 contentSecurityPolicy() 外上面所有提到的中间件，但有需要的话这两个中间件也被启用。你也可以使用配置对象来一个个地禁用或者配置中间件。","// Example","<code>app.use(helmet({</code>","<code>  frameguard: {         // configure</code>","<code>    action: 'deny'</code>","<code>  },</code>","<code>  contentSecurityPolicy: {    // enable and configure</code>","<code>   directives: {</code>",'<code>     defaultSrc: ["self"],</code>',"<code>     styleSrc: ['style.com'],</code>","<code>   }</code>","<code>  },</code>","<code> dnsPrefetchControl: false     // disable</code>","<code>}))</code>","为了教学和方便测试我们是一个个地讲解中间件，但通过使用 ‘parent’ helmet() 是最清晰和简洁的，特别是在真实的项目中。"],challengeType:2,fields:{blockName:"Information Security with HelmetJS",slug:"/information-security-and-quality-assurance/information-security-with-helmetjs/configure-helmet-using-the-parent-helmet-middleware",tests:[{text:"no tests - it's a descriptive challenge",testString:"assert(true)"}]}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/information-security-and-quality-assurance/information-security-with-helmetjs/understand-bcrypt-hashes",id:"587d8249367417b2b2512c40"},slug:"/information-security-and-quality-assurance/information-security-with-helmetjs/configure-helmet-using-the-parent-helmet-middleware"}}}});
//# sourceMappingURL=path---information-security-and-quality-assurance-information-security-with-helmetjs-configure-helmet-using-the-parent-helmet-middleware-23c8d8965a289371f0e9.js.map