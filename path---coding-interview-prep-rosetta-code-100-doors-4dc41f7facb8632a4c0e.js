webpackJsonp([0xe1b909d53e53],{3342:function(e,o){e.exports={data:{challengeNode:{title:"100 doors",description:["<p>有连续100扇默认被关闭的门，从门口经过100次。第一次经过时，参观每一扇门并“切换”它们 (门若是关闭的，则打开它；反之关闭它)；第二次经过时，参观编号为2的倍数的门（如：2号门、4号门、6号门等)并“切换”它们；第三次经过时，参观编号为3的倍数的门（如：3号门、6号门、9号门等等），以此类推，直到你参观编号为100倍数的门。</p>","<p>编写函数来判断：当经过最后一扇门时，各个门的状态是打开还是关闭的。将最终结果以数组形式返回（只包含状态为打开的门的编号）。</p>"],challengeType:5,fields:{slug:"/coding-interview-prep/rosetta-code/100-doors",blockName:"Rosetta Code",tests:[{text:"<code>getFinalOpenedDoors</code> 是一个函数。",testString:"assert(typeof getFinalOpenedDoors === 'function', '<code>getFinalOpenedDoors</code> 是一个函数。');"},{text:"<code>getFinalOpenedDoors</code> 应当返回数组。",testString:"assert(Array.isArray(getFinalOpenedDoors(100)), '<code>getFinalOpenedDoors</code> 应当返回数组。');"},{text:"<code>getFinalOpenedDoors</code> 没有输出正确结果。",testString:"assert.deepEqual(getFinalOpenedDoors(100), solution, '<code>getFinalOpenedDoors</code> 没有输出正确结果。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function getFinalOpenedDoors (numDoors) {\n  // 祝你好运！\n}",head:"",tail:"const solution = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100];"},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/rosetta-code/24-game",id:"594810f028c0303b75339acb"},slug:"/coding-interview-prep/rosetta-code/100-doors"}}}});
//# sourceMappingURL=path---coding-interview-prep-rosetta-code-100-doors-4dc41f7facb8632a4c0e.js.map