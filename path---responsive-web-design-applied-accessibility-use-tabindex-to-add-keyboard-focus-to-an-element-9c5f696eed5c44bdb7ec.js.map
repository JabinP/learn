{"version":3,"sources":["webpack:///path---responsive-web-design-applied-accessibility-use-tabindex-to-add-keyboard-focus-to-an-element-9c5f696eed5c44bdb7ec.js","webpack:///./.cache/json/responsive-web-design-applied-accessibility-use-tabindex-to-add-keyboard-focus-to-an-element.json"],"names":["webpackJsonp","4032","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,mDAAAC,aAAA,gWAAia,4XAAAC,cAAA,EAAAC,QAAiaC,KAAA,gGAAAC,UAAA,wBAAAC,QAAqJC,KAAA,qDAAAC,WAAA,2FAAoKD,KAAA,sDAAAC,WAAA,oGAA6KC,YAAAC,OAAwBC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,klDAA2rDC,KAAA,GAAAC,KAAA,IAAwDC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,wHAAAC,GAAA,4BAAyNrB,KAAA","file":"path---responsive-web-design-applied-accessibility-use-tabindex-to-add-keyboard-focus-to-an-element-9c5f696eed5c44bdb7ec.js","sourcesContent":["webpackJsonp([129345948083992],{\n\n/***/ 4032:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use tabindex to Add Keyboard Focus to an Element\",\"description\":[\"HTML 的<code>tabindex</code>属性有三个不同与标签焦点的功能。当它在标签上时，表示标签可以获得焦点。它的值可以是零、负整数及正整数，并决定了标签的行为。\",\"当用户在页面中使用 tab 键时，有些标签，如：链接、表单控件，可以自动获得焦点。它们获得焦点的顺序与它们出现在文档流中的顺序一致。我们可以通过将<code>tabindex</code>属性值设为 0，来给其他标签赋予相同的功能，如：<code>div</code>、<code>span</code>、<code>p</code>等。举个例子：\",\"<code>&lt;div tabindex=&quot;0&quot;&gt;I need keyboard focus!&lt;/div&gt;</code>\",\"<strong>注意：</strong><br><code>tabindex</code>属性值为负整数（通常为 -1）的标签也是有焦点的，只是不可以通过 tab 键来获得焦点。这种方法通常用于以编程的方式使内容获得焦点（如：激活用于弹出框的<code>div</code>标签），但是它超出了当前挑战的范围。\",\"<hr>\",\"Camper Cat 新建了一个调查，用来收集他的用户的信息。他知道输入框可以自动获得键盘焦点，但他希望确保当键盘用户切换标签时，焦点可以停留在指示文字上。请给<code>p</code>标签添加<code>tabindex</code>属性，并将它的值设置为 0。注意：使用<code>tabindex</code>属性可以使 CSS 伪类<code>:focus</code>在<code>p</code>标签上生效。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/applied-accessibility/use-tabindex-to-add-keyboard-focus-to-an-element\",\"blockName\":\"Applied Accessibility\",\"tests\":[{\"text\":\"你应该为表单中的<code>p</code>标签添加<code>tabindex</code>属性。\",\"testString\":\"assert($('p').attr('tabindex'), '你应该为表单中的<code>p</code>标签添加<code>tabindex</code>属性。');\"},{\"text\":\"你应该将<code>p</code>标签的<code>tabindex</code>属性值设置为 0。\",\"testString\":\"assert($('p').attr('tabindex') == '0', '你应该将<code>p</code>标签的<code>tabindex</code>属性值设置为 0。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<head>\\n  <style>\\n  p:focus {\\n    background-color: yellow;\\n  }\\n  </style>\\n</head>\\n<body>\\n  <header>\\n    <h1>Ninja Survey</h1>\\n  </header>\\n  <section>\\n    <form>\\n      \\n      \\n      <p>Instructions: Fill in ALL your information then click <b>Submit</b></p>\\n      \\n      \\n      <label for=\\\"username\\\">Username:</label>\\n      <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\"><br>\\n      <fieldset>\\n        <legend>What level ninja are you?</legend>\\n        <input id=\\\"newbie\\\" type=\\\"radio\\\" name=\\\"levels\\\" value=\\\"newbie\\\">\\n        <label for=\\\"newbie\\\">Newbie Kitten</label><br>\\n        <input id=\\\"intermediate\\\" type=\\\"radio\\\" name=\\\"levels\\\" value=\\\"intermediate\\\">\\n        <label for=\\\"intermediate\\\">Developing Student</label><br>\\n        <input id=\\\"master\\\" type=\\\"radio\\\" name=\\\"levels\\\" value=\\\"master\\\">\\n        <label for=\\\"master\\\">9th Life Master</label>\\n      </fieldset>\\n      <br>\\n      <fieldset>\\n      <legend>Select your favorite weapons:</legend>\\n      <input id=\\\"stars\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"stars\\\">\\n      <label for=\\\"stars\\\">Throwing Stars</label><br>\\n      <input id=\\\"nunchucks\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"nunchucks\\\">\\n      <label for=\\\"nunchucks\\\">Nunchucks</label><br>\\n      <input id=\\\"sai\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"sai\\\">\\n      <label for=\\\"sai\\\">Sai Set</label><br>\\n      <input id=\\\"sword\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"sword\\\">\\n      <label for=\\\"sword\\\">Sword</label>\\n      </fieldset>\\n      <br>\\n      <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Submit\\\">\\n    </form><br>\\n  </section>\\n  <footer>&copy; 2016 Camper Cat</footer>\\n</body>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/applied-accessibility/use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements\",\"id\":\"587d7790367417b2b2512ab0\"},\"slug\":\"/responsive-web-design/applied-accessibility/use-tabindex-to-add-keyboard-focus-to-an-element\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-web-design-applied-accessibility-use-tabindex-to-add-keyboard-focus-to-an-element-9c5f696eed5c44bdb7ec.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use tabindex to Add Keyboard Focus to an Element\",\"description\":[\"HTML 的<code>tabindex</code>属性有三个不同与标签焦点的功能。当它在标签上时，表示标签可以获得焦点。它的值可以是零、负整数及正整数，并决定了标签的行为。\",\"当用户在页面中使用 tab 键时，有些标签，如：链接、表单控件，可以自动获得焦点。它们获得焦点的顺序与它们出现在文档流中的顺序一致。我们可以通过将<code>tabindex</code>属性值设为 0，来给其他标签赋予相同的功能，如：<code>div</code>、<code>span</code>、<code>p</code>等。举个例子：\",\"<code>&lt;div tabindex=&quot;0&quot;&gt;I need keyboard focus!&lt;/div&gt;</code>\",\"<strong>注意：</strong><br><code>tabindex</code>属性值为负整数（通常为 -1）的标签也是有焦点的，只是不可以通过 tab 键来获得焦点。这种方法通常用于以编程的方式使内容获得焦点（如：激活用于弹出框的<code>div</code>标签），但是它超出了当前挑战的范围。\",\"<hr>\",\"Camper Cat 新建了一个调查，用来收集他的用户的信息。他知道输入框可以自动获得键盘焦点，但他希望确保当键盘用户切换标签时，焦点可以停留在指示文字上。请给<code>p</code>标签添加<code>tabindex</code>属性，并将它的值设置为 0。注意：使用<code>tabindex</code>属性可以使 CSS 伪类<code>:focus</code>在<code>p</code>标签上生效。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/applied-accessibility/use-tabindex-to-add-keyboard-focus-to-an-element\",\"blockName\":\"Applied Accessibility\",\"tests\":[{\"text\":\"你应该为表单中的<code>p</code>标签添加<code>tabindex</code>属性。\",\"testString\":\"assert($('p').attr('tabindex'), '你应该为表单中的<code>p</code>标签添加<code>tabindex</code>属性。');\"},{\"text\":\"你应该将<code>p</code>标签的<code>tabindex</code>属性值设置为 0。\",\"testString\":\"assert($('p').attr('tabindex') == '0', '你应该将<code>p</code>标签的<code>tabindex</code>属性值设置为 0。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<head>\\n  <style>\\n  p:focus {\\n    background-color: yellow;\\n  }\\n  </style>\\n</head>\\n<body>\\n  <header>\\n    <h1>Ninja Survey</h1>\\n  </header>\\n  <section>\\n    <form>\\n      \\n      \\n      <p>Instructions: Fill in ALL your information then click <b>Submit</b></p>\\n      \\n      \\n      <label for=\\\"username\\\">Username:</label>\\n      <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\"><br>\\n      <fieldset>\\n        <legend>What level ninja are you?</legend>\\n        <input id=\\\"newbie\\\" type=\\\"radio\\\" name=\\\"levels\\\" value=\\\"newbie\\\">\\n        <label for=\\\"newbie\\\">Newbie Kitten</label><br>\\n        <input id=\\\"intermediate\\\" type=\\\"radio\\\" name=\\\"levels\\\" value=\\\"intermediate\\\">\\n        <label for=\\\"intermediate\\\">Developing Student</label><br>\\n        <input id=\\\"master\\\" type=\\\"radio\\\" name=\\\"levels\\\" value=\\\"master\\\">\\n        <label for=\\\"master\\\">9th Life Master</label>\\n      </fieldset>\\n      <br>\\n      <fieldset>\\n      <legend>Select your favorite weapons:</legend>\\n      <input id=\\\"stars\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"stars\\\">\\n      <label for=\\\"stars\\\">Throwing Stars</label><br>\\n      <input id=\\\"nunchucks\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"nunchucks\\\">\\n      <label for=\\\"nunchucks\\\">Nunchucks</label><br>\\n      <input id=\\\"sai\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"sai\\\">\\n      <label for=\\\"sai\\\">Sai Set</label><br>\\n      <input id=\\\"sword\\\" type=\\\"checkbox\\\" name=\\\"weapons\\\" value=\\\"sword\\\">\\n      <label for=\\\"sword\\\">Sword</label>\\n      </fieldset>\\n      <br>\\n      <input type=\\\"submit\\\" name=\\\"submit\\\" value=\\\"Submit\\\">\\n    </form><br>\\n  </section>\\n  <footer>&copy; 2016 Camper Cat</footer>\\n</body>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/applied-accessibility/use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements\",\"id\":\"587d7790367417b2b2512ab0\"},\"slug\":\"/responsive-web-design/applied-accessibility/use-tabindex-to-add-keyboard-focus-to-an-element\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-web-design-applied-accessibility-use-tabindex-to-add-keyboard-focus-to-an-element.json\n// module id = 4032\n// module chunks = 129345948083992"],"sourceRoot":""}