{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-115-counting-block-combinations-ii-670d2ab2cbb616b3c06d.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-115-counting-block-combinations-ii.json"],"names":["webpackJsonp","2879","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,8CAAAC,aAAA,+0BAAAC,cAAA,EAAAC,QAAg7BC,KAAA,kFAAAC,UAAA,gBAAAC,QAA+HC,KAAA,6CAAAC,WAAA,wFAAwJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,2EAAAC,GAAA,4BAA4KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-115-counting-block-combinations-ii-670d2ab2cbb616b3c06d.js","sourcesContent":["webpackJsonp([143907057992768],{\n\n/***/ 2879:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 115: Counting block combinations II\",\"description\":[\"NOTE: This is a more difficult version of Problem 114.\",\"A row measuring n units in length has red blocks with a minimum length of m units placed on it, such that any two red blocks (which are allowed to be different lengths) are separated by at least one black square.\",\"Let the fill-count function, F(m, n), represent the number of ways that a row can be filled.\",\"For example, F(3, 29) = 673135 and F(3, 30) = 1089155.\",\"That is, for m = 3, it can be seen that n = 30 is the smallest value for which the fill-count function first exceeds one million.\",\"In the same way, for m = 10, it can be verified that F(10, 56) = 880711 and F(10, 57) = 1148904, so n = 57 is the least value for which the fill-count function first exceeds one million.\",\"For m = 50, find the least value of n for which the fill-count function first exceeds one million.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-115-counting-block-combinations-ii\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler115()</code> should return 168.\",\"testString\":\"assert.strictEqual(euler115(), 168, '<code>euler115()</code> should return 168.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler115() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler115();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-116-red-green-or-blue-tiles\",\"id\":\"5900f3df1000cf542c50fef1\"},\"slug\":\"/coding-interview-prep/project-euler/problem-115-counting-block-combinations-ii\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-115-counting-block-combinations-ii-670d2ab2cbb616b3c06d.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 115: Counting block combinations II\",\"description\":[\"NOTE: This is a more difficult version of Problem 114.\",\"A row measuring n units in length has red blocks with a minimum length of m units placed on it, such that any two red blocks (which are allowed to be different lengths) are separated by at least one black square.\",\"Let the fill-count function, F(m, n), represent the number of ways that a row can be filled.\",\"For example, F(3, 29) = 673135 and F(3, 30) = 1089155.\",\"That is, for m = 3, it can be seen that n = 30 is the smallest value for which the fill-count function first exceeds one million.\",\"In the same way, for m = 10, it can be verified that F(10, 56) = 880711 and F(10, 57) = 1148904, so n = 57 is the least value for which the fill-count function first exceeds one million.\",\"For m = 50, find the least value of n for which the fill-count function first exceeds one million.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-115-counting-block-combinations-ii\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler115()</code> should return 168.\",\"testString\":\"assert.strictEqual(euler115(), 168, '<code>euler115()</code> should return 168.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler115() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler115();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-116-red-green-or-blue-tiles\",\"id\":\"5900f3df1000cf542c50fef1\"},\"slug\":\"/coding-interview-prep/project-euler/problem-115-counting-block-combinations-ii\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-115-counting-block-combinations-ii.json\n// module id = 2879\n// module chunks = 143907057992768"],"sourceRoot":""}