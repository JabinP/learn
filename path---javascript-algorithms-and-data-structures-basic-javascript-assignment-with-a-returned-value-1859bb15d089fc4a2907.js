webpackJsonp([0x92e714df1071],{3764:function(e,s){e.exports={data:{challengeNode:{title:"Assignment with a Returned Value",description:['如果你还记得我们在这一节 <a href="javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator" target="_blank">Storing Values with the Assignment Operator</a>,的讨论，赋值之前，先完成等号右边的操作。这意味着我们可把一个函数的返回值，赋值给一个变量。',"假设我们预先定义的函数<code>sum</code>其功能就是将两个数字相加，那么：","<code>ourSum = sum(5, 12);</code>","将调用<code>sum</code>函数，返回<code>return</code>了一个数值<code>17</code>，然后把它赋值给了<code>ourSum</code>变量。","<hr>","调用<code>processArg</code>函数并给参数一个值<code>7</code>，然后把返回的值赋值给变量<code>processed</code>。"],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/assignment-with-a-returned-value",blockName:"Basic JavaScript",tests:[{text:"<code>processed</code>的值应该是<code>2</code>",testString:"assert(processed === 2, '<code>processed</code>的值应该是<code>2</code>');"},{text:"你应该把<code>processArg</code>的返回值赋给<code>processed</code>",testString:"assert(/processed\\s*=\\s*processArg\\(\\s*7\\s*\\)\\s*;/.test(code), '你应该把<code>processArg</code>的返回值赋给<code>processed</code>');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"// 示例\nvar changed = 0;\n\nfunction change(num) {\n  return (num + 5) / 3;\n}\n\nchanged = change(10);\n\n// 初始化变量\nvar processed = 0;\n\nfunction processArg(num) {\n  return (num + 3) / 5;\n}\n\n// 请把你的代码写在这条注释以下\n\n",head:"",tail:'(function(){return "processed = " + processed})();'},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/stand-in-line",id:"56533eb9ac21ba0edf2244c3"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/assignment-with-a-returned-value"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-assignment-with-a-returned-value-1859bb15d089fc4a2907.js.map