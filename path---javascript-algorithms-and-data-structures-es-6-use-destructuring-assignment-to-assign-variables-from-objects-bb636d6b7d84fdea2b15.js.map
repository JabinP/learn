{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-to-assign-variables-from-objects-bb636d6b7d84fdea2b15.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-to-assign-variables-from-objects.json"],"names":["webpackJsonp","3888","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,gEAAAC,aAAA,mQAA+T,+GAA6F,qOAA6N,gIAAAC,cAAA,EAAAC,QAAiNC,KAAA,+GAAAC,UAAA,MAAAC,QAAkJC,KAAA,oCAAAC,WAAA,oFAA4ID,KAAA,6DAAAC,WAAA,8GAAmMD,KAAA,eAAAC,WAAA,wHAA0JC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,uOAA0RC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,sHAAAC,GAAA,4BAAuNrB,KAAA","file":"path---javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-to-assign-variables-from-objects-bb636d6b7d84fdea2b15.js","sourcesContent":["webpackJsonp([124821389588693],{\n\n/***/ 3888:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Destructuring Assignment to Assign Variables from Objects\",\"description\":[\"我们之前看到了展开操作符是如何展开数组的内容的。\",\"对于对象，我们也可以做同样的操作。<dfn>解构赋值</dfn> 就是可以从对象中直接获取对应值的语法。\",\"看看以下 ES5 的代码：\",\"<blockquote>var voxel = {x: 3.6, y: 7.4, z: 6.54 };<br>var x = voxel.x; // x = 3.6<br>var y = voxel.y; // y = 7.4<br>var z = voxel.z; // z = 6.54</blockquote>\",\"使用 ES6 的解构语法可以完成同样的赋值语句：\",\"<blockquote>const { x, y, z } = voxel; // x = 3.6, y = 7.4, z = 6.54</blockquote>\",\"如果你想将<code>voxel.x</code>,<code>voxel.y</code>,<code>voxel.z</code>的值分别赋给<code>a</code>,<code>b</code>,<code>c</code>，可以用以下这种很棒的方式：\",\"<blockquote>const { x : a, y : b, z : c } = voxel // a = 3.6, b = 7.4, c = 6.54</blockquote>\",\"你可以这样理解：“将<code>x</code>地址中的值拷贝到<code>a</code>当中去。”，等等。\",\"<hr>\",\"使用解构语法去得到输入的<code>str</code>字符串的长度，并将长度赋值给<code>len</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-objects\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"函数<code>getLength()</code>返回一个数字。\",\"testString\":\"assert(typeof getLength('') === 'number', '函数<code>getLength()</code>返回一个数字。');\"},{\"text\":\"<code>getLength(\\\"FreeCodeCamp\\\")</code>应该返回<code>12</code>。\",\"testString\":\"assert(getLength(\\\"FreeCodeCamp\\\") === 12, '<code>getLength(\\\"FreeCodeCamp\\\")</code>应该返回<code>12</code>。');\"},{\"text\":\"使用解构语法来重新赋值。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/\\\\{\\\\s*length\\\\s*:\\\\s*len\\\\s*}\\\\s*=\\\\s*str/g),'使用解构语法来重新赋值。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function getLength(str) {\\n  \\\"use strict\\\";\\n\\n  // 在这行以下修改代码\\n  const length = 0; // change this\\n  // 在这行以上修改代码\\n\\n  return len; // 你必须在这行将<code>length</code>赋值给<code>len</code>\\n\\n}\\n\\nconsole.log(getLength('FreeCodeCamp'));\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-nested-objects\",\"id\":\"587d7b89367417b2b2512b49\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-objects\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-to-assign-variables-from-objects-bb636d6b7d84fdea2b15.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Destructuring Assignment to Assign Variables from Objects\",\"description\":[\"我们之前看到了展开操作符是如何展开数组的内容的。\",\"对于对象，我们也可以做同样的操作。<dfn>解构赋值</dfn> 就是可以从对象中直接获取对应值的语法。\",\"看看以下 ES5 的代码：\",\"<blockquote>var voxel = {x: 3.6, y: 7.4, z: 6.54 };<br>var x = voxel.x; // x = 3.6<br>var y = voxel.y; // y = 7.4<br>var z = voxel.z; // z = 6.54</blockquote>\",\"使用 ES6 的解构语法可以完成同样的赋值语句：\",\"<blockquote>const { x, y, z } = voxel; // x = 3.6, y = 7.4, z = 6.54</blockquote>\",\"如果你想将<code>voxel.x</code>,<code>voxel.y</code>,<code>voxel.z</code>的值分别赋给<code>a</code>,<code>b</code>,<code>c</code>，可以用以下这种很棒的方式：\",\"<blockquote>const { x : a, y : b, z : c } = voxel // a = 3.6, b = 7.4, c = 6.54</blockquote>\",\"你可以这样理解：“将<code>x</code>地址中的值拷贝到<code>a</code>当中去。”，等等。\",\"<hr>\",\"使用解构语法去得到输入的<code>str</code>字符串的长度，并将长度赋值给<code>len</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-objects\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"函数<code>getLength()</code>返回一个数字。\",\"testString\":\"assert(typeof getLength('') === 'number', '函数<code>getLength()</code>返回一个数字。');\"},{\"text\":\"<code>getLength(\\\"FreeCodeCamp\\\")</code>应该返回<code>12</code>。\",\"testString\":\"assert(getLength(\\\"FreeCodeCamp\\\") === 12, '<code>getLength(\\\"FreeCodeCamp\\\")</code>应该返回<code>12</code>。');\"},{\"text\":\"使用解构语法来重新赋值。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/\\\\{\\\\s*length\\\\s*:\\\\s*len\\\\s*}\\\\s*=\\\\s*str/g),'使用解构语法来重新赋值。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function getLength(str) {\\n  \\\"use strict\\\";\\n\\n  // 在这行以下修改代码\\n  const length = 0; // change this\\n  // 在这行以上修改代码\\n\\n  return len; // 你必须在这行将<code>length</code>赋值给<code>len</code>\\n\\n}\\n\\nconsole.log(getLength('FreeCodeCamp'));\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-nested-objects\",\"id\":\"587d7b89367417b2b2512b49\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-assign-variables-from-objects\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-to-assign-variables-from-objects.json\n// module id = 3888\n// module chunks = 124821389588693"],"sourceRoot":""}