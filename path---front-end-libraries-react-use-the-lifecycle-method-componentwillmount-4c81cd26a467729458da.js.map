{"version":3,"sources":["webpack:///path---front-end-libraries-react-use-the-lifecycle-method-componentwillmount-4c81cd26a467729458da.js","webpack:///./.cache/json/front-end-libraries-react-use-the-lifecycle-method-componentwillmount.json"],"names":["webpackJsonp","3611","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","link","raw","src","files","indexhtml","indexjs","indexjsx","key","ext","name","contents","head","tail","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,8CAAAC,aAAA,ujBAAAC,cAAA,EAAAC,QAAwpBC,KAAA,yEAAAC,UAAA,QAAAC,QAA8GC,KAAA,oDAAAC,WAAA,8MAAsRD,KAAA,iEAAAC,WAAA,gQAAoVC,WAAcC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGC,OAAWC,UAAA,KAAAC,QAAA,KAAAC,UAA4CC,IAAA,WAAAC,IAAA,MAAAC,KAAA,QAAAC,SAAA,kPAAuSC,KAAA,GAAAC,KAAA,wEAA0FC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,qFAAsGjB,WAAsBC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGe,kBAAA,wEAAAC,GAAA,4BAA8HxB,KAAA","file":"path---front-end-libraries-react-use-the-lifecycle-method-componentwillmount-4c81cd26a467729458da.js","sourcesContent":["webpackJsonp([114789540491631],{\n\n/***/ 3611:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use the Lifecycle Method componentWillMount\",\"description\":[\"React 组件有几种特殊方法，可以在组件生命周期的特定点执行操作。这些称为生命周期方法或生命周期钩子，允许你在特定时间点捕获组件。这可以在渲染之前、更新之前、接收 props 之前、卸载之前等等。以下是一些主要生命周期方法的列表：\",\"<code>componentWillMount()</code>\",\"<code>componentDidMount()</code>\",\"<code>componentWillReceiveProps()</code>\",\"<code>shouldComponentUpdate()</code>\",\"<code>componentWillUpdate()</code>\",\"<code>componentDidUpdate()</code>\",\"<code>componentWillUnmount()</code>\",\"接下来的几节课将讲述这些生命周期方法的一些基本用例。\",\"<hr>\",\"当组件被挂载到 DOM 时，<code>componentWillMount()</code>方法在<code>render()</code>方法之前被调用。在<code>componentWillMount()</code>中将一些内容记录到控制台--你需要打开浏览器控制台以查看输出。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/use-the-lifecycle-method-componentwillmount\",\"blockName\":\"React\",\"tests\":[{\"text\":\"<code>MyComponent</code>应该渲染一个<code>div</code>元素。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(MyComponent)); return mockedComponent.find('div').length === 1; })(), '<code>MyComponent</code>应该渲染一个<code>div</code>元素。');\"},{\"text\":\"应该在<code>componentWillMount</code>中调用<code>console.log</code>。\",\"testString\":\"assert((function() { const lifecycle = React.createElement(MyComponent).type.prototype.componentWillMount.toString().replace(/ /g,''); return lifecycle.includes('console.log('); })(), '应该在<code>componentWillMount</code>中调用<code>console.log</code>。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"class MyComponent extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n  componentWillMount() {\\n    // change code below this line\\n\\n    // change code above this line\\n  }\\n  render() {\\n    return <div />\\n  }\\n};\",\"head\":\"\",\"tail\":\"ReactDOM.render(<MyComponent />, document.getElementById('root'))\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/use-the-lifecycle-method-componentdidmount\",\"id\":\"5a24c314108439a4d403617c\"},\"slug\":\"/front-end-libraries/react/use-the-lifecycle-method-componentwillmount\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---front-end-libraries-react-use-the-lifecycle-method-componentwillmount-4c81cd26a467729458da.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use the Lifecycle Method componentWillMount\",\"description\":[\"React 组件有几种特殊方法，可以在组件生命周期的特定点执行操作。这些称为生命周期方法或生命周期钩子，允许你在特定时间点捕获组件。这可以在渲染之前、更新之前、接收 props 之前、卸载之前等等。以下是一些主要生命周期方法的列表：\",\"<code>componentWillMount()</code>\",\"<code>componentDidMount()</code>\",\"<code>componentWillReceiveProps()</code>\",\"<code>shouldComponentUpdate()</code>\",\"<code>componentWillUpdate()</code>\",\"<code>componentDidUpdate()</code>\",\"<code>componentWillUnmount()</code>\",\"接下来的几节课将讲述这些生命周期方法的一些基本用例。\",\"<hr>\",\"当组件被挂载到 DOM 时，<code>componentWillMount()</code>方法在<code>render()</code>方法之前被调用。在<code>componentWillMount()</code>中将一些内容记录到控制台--你需要打开浏览器控制台以查看输出。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/use-the-lifecycle-method-componentwillmount\",\"blockName\":\"React\",\"tests\":[{\"text\":\"<code>MyComponent</code>应该渲染一个<code>div</code>元素。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(MyComponent)); return mockedComponent.find('div').length === 1; })(), '<code>MyComponent</code>应该渲染一个<code>div</code>元素。');\"},{\"text\":\"应该在<code>componentWillMount</code>中调用<code>console.log</code>。\",\"testString\":\"assert((function() { const lifecycle = React.createElement(MyComponent).type.prototype.componentWillMount.toString().replace(/ /g,''); return lifecycle.includes('console.log('); })(), '应该在<code>componentWillMount</code>中调用<code>console.log</code>。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"class MyComponent extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n  componentWillMount() {\\n    // change code below this line\\n\\n    // change code above this line\\n  }\\n  render() {\\n    return <div />\\n  }\\n};\",\"head\":\"\",\"tail\":\"ReactDOM.render(<MyComponent />, document.getElementById('root'))\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/use-the-lifecycle-method-componentdidmount\",\"id\":\"5a24c314108439a4d403617c\"},\"slug\":\"/front-end-libraries/react/use-the-lifecycle-method-componentwillmount\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/front-end-libraries-react-use-the-lifecycle-method-componentwillmount.json\n// module id = 3611\n// module chunks = 114789540491631"],"sourceRoot":""}