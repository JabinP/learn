{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-local-scope-and-functions-f59a4ed3ce005fe3b00a.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-local-scope-and-functions.json"],"names":["webpackJsonp","3813","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,4BAAAC,aAAA,8PAA0R,oKAAAC,cAAA,EAAAC,QAA2NC,KAAA,wFAAAC,UAAA,mBAAAC,QAAwIC,KAAA,6BAAAC,WAAA,wEAAyHD,KAAA,8BAAAC,WAAA,uEAAwHC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,uRAA+PC,KAAA,qcAAqhBC,KAAA,0JAAoKC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,kGAAAC,GAAA,4BAAmMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-local-scope-and-functions-f59a4ed3ce005fe3b00a.js","sourcesContent":["webpackJsonp([227032334519320],{\n\n/***/ 3813:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Local Scope and Functions\",\"description\":[\"在一个函数内声明的变量，以及该函数的参数都是局部变量，意味着它们只在该函数内可见。\",\"这是在函数<code>myTest</code>内声明局部变量<code>loc</code>的例子：\",\"<blockquote>function myTest() {<br>  var loc = \\\"foo\\\";<br>  console.log(loc);<br>}<br>myTest(); // 打印出 \\\"foo\\\"<br>console.log(loc); // loc 没有定义</blockquote>\",\"在函数外，<code>loc</code>是未定义的。\",\"<hr>\",\"在函数<code>myFunction</code>内部声明一个局部变量<code>myVar</code>，并删除外部的 console.log。\",\"<strong>提示：</strong><br>\",\"如果你遇到了问题，可以先尝试刷新页面。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/local-scope-and-functions\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"未找到全局的<code>myVar</code>变量\",\"testString\":\"assert(typeof myVar === 'undefined', '未找到全局的<code>myVar</code>变量');\"},{\"text\":\"需要定义局部的<code>myVar</code>变量\",\"testString\":\"assert(/var\\\\s+myVar/.test(code), '需要定义局部的<code>myVar</code>变量');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function myLocalScope() {\\n  'use strict'; // 请不要修改这一行\\n  \\n  console.log(myVar);\\n}\\nmyLocalScope();\\n\\n// 请先运行这段代码，并在输出区域或浏览器的控制台中查看输出\\n// 由于 myVar 在 myLocalScope 内外均没有定义，因此才会有报错\\nconsole.log(myVar);\\n\\n// 现在，在 myLocalScope 中定义 myVar，并删掉 myLocalScope 外面的 console.log 以通过测试\\n\",\"head\":\"var logOutput = \\\"\\\";\\nvar originalConsole = console\\nfunction capture() {\\n  var nativeLog = console.log;\\n  console.log = function (message) {\\n    logOutput = message;\\n    if(nativeLog.apply) {\\n      nativeLog.apply(originalConsole, arguments);\\n    } else {\\n      var nativeMsg = Array.prototype.slice.apply(arguments).join(' ');\\n      nativeLog(nativeMsg);\\n    }\\n  };\\n}\\n\\nfunction uncapture() {\\n  console.log = originalConsole.log;\\n}\\n\",\"tail\":\"typeof myLocalScope === 'function' && (capture(), myLocalScope(), uncapture());\\n(function() { return logOutput || \\\"console.log never called\\\"; })();\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/global-vs--local-scope-in-functions\",\"id\":\"56533eb9ac21ba0edf2244bf\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/local-scope-and-functions\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-local-scope-and-functions-f59a4ed3ce005fe3b00a.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Local Scope and Functions\",\"description\":[\"在一个函数内声明的变量，以及该函数的参数都是局部变量，意味着它们只在该函数内可见。\",\"这是在函数<code>myTest</code>内声明局部变量<code>loc</code>的例子：\",\"<blockquote>function myTest() {<br>  var loc = \\\"foo\\\";<br>  console.log(loc);<br>}<br>myTest(); // 打印出 \\\"foo\\\"<br>console.log(loc); // loc 没有定义</blockquote>\",\"在函数外，<code>loc</code>是未定义的。\",\"<hr>\",\"在函数<code>myFunction</code>内部声明一个局部变量<code>myVar</code>，并删除外部的 console.log。\",\"<strong>提示：</strong><br>\",\"如果你遇到了问题，可以先尝试刷新页面。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/local-scope-and-functions\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"未找到全局的<code>myVar</code>变量\",\"testString\":\"assert(typeof myVar === 'undefined', '未找到全局的<code>myVar</code>变量');\"},{\"text\":\"需要定义局部的<code>myVar</code>变量\",\"testString\":\"assert(/var\\\\s+myVar/.test(code), '需要定义局部的<code>myVar</code>变量');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function myLocalScope() {\\n  'use strict'; // 请不要修改这一行\\n  \\n  console.log(myVar);\\n}\\nmyLocalScope();\\n\\n// 请先运行这段代码，并在输出区域或浏览器的控制台中查看输出\\n// 由于 myVar 在 myLocalScope 内外均没有定义，因此才会有报错\\nconsole.log(myVar);\\n\\n// 现在，在 myLocalScope 中定义 myVar，并删掉 myLocalScope 外面的 console.log 以通过测试\\n\",\"head\":\"var logOutput = \\\"\\\";\\nvar originalConsole = console\\nfunction capture() {\\n  var nativeLog = console.log;\\n  console.log = function (message) {\\n    logOutput = message;\\n    if(nativeLog.apply) {\\n      nativeLog.apply(originalConsole, arguments);\\n    } else {\\n      var nativeMsg = Array.prototype.slice.apply(arguments).join(' ');\\n      nativeLog(nativeMsg);\\n    }\\n  };\\n}\\n\\nfunction uncapture() {\\n  console.log = originalConsole.log;\\n}\\n\",\"tail\":\"typeof myLocalScope === 'function' && (capture(), myLocalScope(), uncapture());\\n(function() { return logOutput || \\\"console.log never called\\\"; })();\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/global-vs--local-scope-in-functions\",\"id\":\"56533eb9ac21ba0edf2244bf\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/local-scope-and-functions\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-local-scope-and-functions.json\n// module id = 3813\n// module chunks = 227032334519320"],"sourceRoot":""}