webpackJsonp([2817274772409],{3420:function(e,o){e.exports={data:{challengeNode:{title:"Topological sort",description:["<p>","Given a mapping between items, and items they depend on, a ",'<a href="https://en.wikipedia.org/wiki/Topological sorting" title="wp: Topological sorting">topological sort</a> orders ',"items so that no item precedes an item it depends upon.","</p>","<p>","The compiling of a library in the ",'<a href="https://en.wikipedia.org/wiki/VHDL" title="wp: VHDL">VHDL</a> language',"has the constraint that a library must be compiled after any library it depends on.","</p>","Task:","<p>","Write a function that will return a valid compile order of VHDL libraries from their dependencies.","</p>","  Assume library names are single words. ","  Items mentioned as only dependents have no dependents of their own, but their order of compiling must be given.","  Any self dependencies should be ignored. ","  Any un-orderable dependencies should be ignored.","<p>Use the following data as an example:</p>","<pre>","LIBRARY          LIBRARY DEPENDENCIES","=======          ====================","des_system_lib   std synopsys std_cell_lib des_system_lib dw02 dw01 ramlib ieee","dw01             ieee dw01 dware gtech","dw02             ieee dw02 dware","dw03             std synopsys dware dw03 dw02 dw01 ieee gtech","dw04             dw04 ieee dw01 dware gtech","dw05             dw05 ieee dware","dw06             dw06 ieee dware","dw07             ieee dware","dware            ieee dware","gtech            ieee gtech","ramlib           std ieee","std_cell_lib     ieee std_cell_lib","synopsys","</pre>","<p>","<small>Note: the above data would be un-orderable if, for example, <code>dw04</code> is added to the list of dependencies of <code>dw01</code>.</small>","</p>","C.f.:","",'    <a href="http://rosettacode.org/wiki/Topological sort/Extracted top item" title="Topological sort/Extracted top item">Topological sort/Extracted top item</a>.',"","<p>There are two popular algorithms for topological sorting:</p>","<p>","  Kahn's 1962 topological sort, and depth-first search:",'  <a href="https://en.wikipedia.org/wiki/Topological sorting" title="wp: Topological sorting">topological sort</a>',"</p>","<p>","  Jason Sachs:",'  <a href="http://www.embeddedrelated.com/showarticle/799.php" title="link: http://www.embeddedrelated.com/showarticle/799.php">','  "Ten little algorithms, part 4: topological sort"',"  </a>.","</p>"],challengeType:5,fields:{slug:"/coding-interview-prep/rosetta-code/topological-sort",blockName:"Rosetta Code",tests:[{text:"<code>topologicalSort</code> is a function.",testString:"assert(typeof topologicalSort === 'function', '<code>topologicalSort</code> is a function.');"},{text:"<code>topologicalSort</code> must return correct library order..",testString:"assert.deepEqual(topologicalSort(libsSimple), ['bbb', 'aaa'], '<code>topologicalSort</code> must return correct library order..');"},{text:"<code>topologicalSort</code> must return correct library order..",testString:"assert.deepEqual(topologicalSort(libsVHDL), solutionVHDL, '<code>topologicalSort</code> must return correct library order..');"},{text:"<code>topologicalSort</code> must return correct library order..",testString:"assert.deepEqual(topologicalSort(libsCustom), solutionCustom, '<code>topologicalSort</code> must return correct library order..');"},{text:"<code>topologicalSort</code> must ignore unorderable dependencies..",testString:"assert.deepEqual(topologicalSort(libsUnorderable), solutionUnorderable, '<code>topologicalSort</code> must ignore unorderable dependencies..');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function topologicalSort(libs) {\n  // Good luck!\n  return true;\n}",head:"",tail:"const libsSimple =\n  `aaa bbb\n  bbb`;\n\nconst libsVHDL =\n  `des_system_lib   std synopsys std_cell_lib des_system_lib dw02 dw01 ramlib ieee\n  dw01             ieee dw01 dware gtech\n  dw02             ieee dw02 dware\n  dw03             std synopsys dware dw03 dw02 dw01 ieee gtech\n  dw04             dw04 ieee dw01 dware gtech\n  dw05             dw05 ieee dware\n  dw06             dw06 ieee dware\n  dw07             ieee dware\n  dware            ieee dware\n  gtech            ieee gtech\n  ramlib           std ieee\n  std_cell_lib     ieee std_cell_lib\n  synopsys`;\n\nconst solutionVHDL = [\n  'ieee', 'std_cell_lib', 'gtech', 'dware', 'dw07', 'dw06',\n  'dw05', 'dw02', 'dw01', 'dw04', 'std', 'ramlib', 'synopsys',\n  'dw03', 'des_system_lib'\n];\n\nconst libsCustom =\n  `a b c d\n  b c d\n  d c\n  c base\n  base`;\nconst solutionCustom = ['base', 'c', 'd', 'b', 'a'];\n\nconst libsUnorderable =\n  `TestLib Base MainLib\n  MainLib TestLib\n  Base`;\n\nconst solutionUnorderable = ['Base'];"},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/rosetta-code/top-rank-per-group",id:"594fa2746886f41f7d8bf225"},slug:"/coding-interview-prep/rosetta-code/topological-sort"}}}});
//# sourceMappingURL=path---coding-interview-prep-rosetta-code-topological-sort-8273d39827c74058b03e.js.map