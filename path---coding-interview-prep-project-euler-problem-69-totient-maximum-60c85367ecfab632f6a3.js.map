{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-69-totient-maximum-60c85367ecfab632f6a3.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-69-totient-maximum.json"],"names":["webpackJsonp","3307","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,8BAAAC,aAAA,8nBAAAC,cAAA,EAAAC,QAA+sBC,KAAA,kEAAAC,UAAA,gBAAAC,QAA+GC,KAAA,+CAAAC,WAAA,4FAA8JC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,yEAA4HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,sEAAAC,GAAA,4BAAuKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-69-totient-maximum-60c85367ecfab632f6a3.js","sourcesContent":["webpackJsonp([170784055285829],{\n\n/***/ 3307:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 69: Totient maximum\",\"description\":[\"Euler's Totient function, φ(n) [sometimes called the phi function], is used to determine the number of numbers less than n which are relatively prime to n. For example, as 1, 2, 4, 5, 7, and 8, are all less than nine and relatively prime to nine, φ(9)=6.\",\"\",\"n\",\"Relatively Prime\",\"φ(n)\",\"n/φ(n)\",\"2\",\"1\",\"1\",\"2\",\"3\",\"1,2\",\"2\",\"1.5\",\"4\",\"1,3\",\"2\",\"2\",\"5\",\"1,2,3,4\",\"4\",\"1.25\",\"6\",\"1,5\",\"2\",\"3\",\"7\",\"1,2,3,4,5,6\",\"6\",\"1.1666...\",\"8\",\"1,3,5,7\",\"4\",\"2\",\"9\",\"1,2,4,5,7,8\",\"6\",\"1.5\",\"10\",\"1,3,7,9\",\"4\",\"2.5\",\"\",\"It can be seen that n=6 produces a maximum n/φ(n) for n ≤ 10.\",\"Find the value of n ≤ 1,000,000 for which n/φ(n) is a maximum.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-69-totient-maximum\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler69()</code> should return 510510.\",\"testString\":\"assert.strictEqual(euler69(), 510510, '<code>euler69()</code> should return 510510.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler69() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler69();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-70-totient-permutation\",\"id\":\"5900f3b11000cf542c50fec4\"},\"slug\":\"/coding-interview-prep/project-euler/problem-69-totient-maximum\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-69-totient-maximum-60c85367ecfab632f6a3.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 69: Totient maximum\",\"description\":[\"Euler's Totient function, φ(n) [sometimes called the phi function], is used to determine the number of numbers less than n which are relatively prime to n. For example, as 1, 2, 4, 5, 7, and 8, are all less than nine and relatively prime to nine, φ(9)=6.\",\"\",\"n\",\"Relatively Prime\",\"φ(n)\",\"n/φ(n)\",\"2\",\"1\",\"1\",\"2\",\"3\",\"1,2\",\"2\",\"1.5\",\"4\",\"1,3\",\"2\",\"2\",\"5\",\"1,2,3,4\",\"4\",\"1.25\",\"6\",\"1,5\",\"2\",\"3\",\"7\",\"1,2,3,4,5,6\",\"6\",\"1.1666...\",\"8\",\"1,3,5,7\",\"4\",\"2\",\"9\",\"1,2,4,5,7,8\",\"6\",\"1.5\",\"10\",\"1,3,7,9\",\"4\",\"2.5\",\"\",\"It can be seen that n=6 produces a maximum n/φ(n) for n ≤ 10.\",\"Find the value of n ≤ 1,000,000 for which n/φ(n) is a maximum.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-69-totient-maximum\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler69()</code> should return 510510.\",\"testString\":\"assert.strictEqual(euler69(), 510510, '<code>euler69()</code> should return 510510.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler69() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler69();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-70-totient-permutation\",\"id\":\"5900f3b11000cf542c50fec4\"},\"slug\":\"/coding-interview-prep/project-euler/problem-69-totient-maximum\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-69-totient-maximum.json\n// module id = 3307\n// module chunks = 170784055285829"],"sourceRoot":""}