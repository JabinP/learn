{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-top-rank-per-group-1f4f988a0a76dc4d7fcf.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-top-rank-per-group.json"],"names":["webpackJsonp","3419","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qBAAAC,aAAA,iRAA0T,uEAAuE,2EAA2E,uEAAuE,2EAA2E,4EAA4E,yEAAyE,yEAAyE,2EAA2E,4EAA4E,wEAAwE,uEAAuE,yEAA0E,KAAK,uOAAsO,2EAA2E,sDAAsD,0DAA0D,0DAA2D,KAAK,mIAAAC,cAAA,EAAAC,QAAiKC,KAAA,yDAAAC,UAAA,eAAAC,QAAqGC,KAAA,8CAAAC,WAAA,kGAAoKD,KAAA,uEAAAC,WAAA,oIAA+ND,KAAA,gCAAAC,WAAA,4EAAgID,KAAA,gCAAAC,WAAA,6EAAiID,KAAA,mCAAAC,WAAA,+EAAsID,KAAA,sFAAAC,WAAA,4HAAsOD,KAAA,sFAAAC,WAAA,0IAAmPC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,+FAAkJC,KAAA,GAAAC,KAAA,qhDAAuiDC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,sDAAAC,GAAA,4BAAuJrB,KAAA","file":"path---coding-interview-prep-rosetta-code-top-rank-per-group-1f4f988a0a76dc4d7fcf.js","sourcesContent":["webpackJsonp([41021533107220],{\n\n/***/ 3419:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Top rank per group\",\"description\":[\"Task:\",\"<p>Find the top N ranked data in each group, where N  is provided as a parameter. Name of the rank and the group are also provided as parameter.</p>\",\"Given the following data:\",\"<pre>\",\"[\",\"  { name: 'Tyler Bennett', id: 'E10297', salary: 32000, dept: 'D101' },\",\"  { name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050' },\",\"  { name: 'George Woltman', id: 'E00127', salary: 53500, dept: 'D101' },\",\"  { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' },\",\"  { name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D202' },\",\"  { name: 'David McClellan', id: 'E04242', salary: 41500, dept: 'D101' },\",\"  { name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D202' },\",\"  { name: 'Nathan Adams', id: 'E41298', salary: 21900, dept: 'D050' },\",\"  { name: 'Richard Potter', id: 'E43128', salary: 15900, dept: 'D101' },\",\"  { name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' },\",\"  { name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' },\",\"  { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' },\",\"  { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' }\",\"];\",\"</pre>\",\"one could rank top 10 employees in each department by calling\",\"<code>topRankPerGroup(10, data, 'dept', 'salary')</code>\",\"Given the following data:\",\"<pre>\",\"[\",\"  { name: 'Friday 13th', genre: 'horror', rating: 9.9 },\",\"  { name: \\\"Nightmare on Elm's Street\\\", genre: 'horror', rating: 5.7 },\",\"  { name: 'Titanic', genre: 'drama', rating: 7.3 },\",\"  { name: 'Maze Runner', genre: 'scifi', rating: 7.1 },\",\"  { name: 'Blade runner', genre: 'scifi', rating: 8.9 }\",\"];\",\"</pre>\",\"one could rank the top-rated movie in each genre by calling\",\"<code>topRankPerGroup(1, data, 'genre', 'rating')</code>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/top-rank-per-group\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>topRankPerGroup</code> is a function.\",\"testString\":\"assert(typeof topRankPerGroup === 'function', '<code>topRankPerGroup</code> is a function.');\"},{\"text\":\"<code>topRankPerGroup</code> returns undefined on negative n values.\",\"testString\":\"assert(typeof topRankPerGroup(-1, []) === 'undefined', '<code>topRankPerGroup</code> returns undefined on negative n values.');\"},{\"text\":\"First department must be D050\",\"testString\":\"assert.equal(res1[0][0].dept, 'D050', 'First department must be D050');\"},{\"text\":\"First department must be D050\",\"testString\":\"assert.equal(res1[0][1].salary, 21900, 'First department must be D050');\"},{\"text\":\"The last department must be D202\",\"testString\":\"assert.equal(res1[3][3].dept, 'D202', 'The last department must be D202');\"},{\"text\":\"<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.\",\"testString\":\"assert.equal(res2[2].length, 1, '<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.');\"},{\"text\":\"<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.\",\"testString\":\"assert.equal(res3[2][1].name, 'Maze Runner', '<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function topRankPerGroup(n, data, groupName, rankName) {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const testData1 = [\\n  { name: 'Tyler Bennett', id: 'E10297', salary: 32000, dept: 'D101' },\\n  { name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050' },\\n  { name: 'George Woltman', id: 'E00127', salary: 53500, dept: 'D101' },\\n  { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' },\\n  { name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D202' },\\n  { name: 'David McClellan', id: 'E04242', salary: 41500, dept: 'D101' },\\n  { name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D202' },\\n  { name: 'Nathan Adams', id: 'E41298', salary: 21900, dept: 'D050' },\\n  { name: 'Richard Potter', id: 'E43128', salary: 15900, dept: 'D101' },\\n  { name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' },\\n  { name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' },\\n  { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' },\\n  { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' }\\n];\\n\\nconst res1 = topRankPerGroup(10, testData1, 'dept', 'salary');\\n\\nconst testData2 = [\\n  { name: 'Friday 13th', genre: 'horror', rating: 9.9 },\\n  { name: \\\"Nightmare on Elm's Street\\\", genre: 'horror', rating: 5.7 },\\n  { name: 'Titanic', genre: 'drama', rating: 7.3 },\\n  { name: 'Maze Runner', genre: 'scifi', rating: 7.1 },\\n  { name: 'Blade runner', genre: 'scifi', rating: 8.9 }\\n];\\n\\nconst res2 = topRankPerGroup(1, testData2, 'genre', 'rating');\\nconst res3 = topRankPerGroup(2, testData2, 'genre', 'rating');\\n\\n//console.log(JSON.stringify(topRankPerGroup(10, testData1)));\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/towers-of-hanoi\",\"id\":\"595011cba5a81735713873bd\"},\"slug\":\"/coding-interview-prep/rosetta-code/top-rank-per-group\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-top-rank-per-group-1f4f988a0a76dc4d7fcf.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Top rank per group\",\"description\":[\"Task:\",\"<p>Find the top N ranked data in each group, where N  is provided as a parameter. Name of the rank and the group are also provided as parameter.</p>\",\"Given the following data:\",\"<pre>\",\"[\",\"  { name: 'Tyler Bennett', id: 'E10297', salary: 32000, dept: 'D101' },\",\"  { name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050' },\",\"  { name: 'George Woltman', id: 'E00127', salary: 53500, dept: 'D101' },\",\"  { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' },\",\"  { name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D202' },\",\"  { name: 'David McClellan', id: 'E04242', salary: 41500, dept: 'D101' },\",\"  { name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D202' },\",\"  { name: 'Nathan Adams', id: 'E41298', salary: 21900, dept: 'D050' },\",\"  { name: 'Richard Potter', id: 'E43128', salary: 15900, dept: 'D101' },\",\"  { name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' },\",\"  { name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' },\",\"  { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' },\",\"  { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' }\",\"];\",\"</pre>\",\"one could rank top 10 employees in each department by calling\",\"<code>topRankPerGroup(10, data, 'dept', 'salary')</code>\",\"Given the following data:\",\"<pre>\",\"[\",\"  { name: 'Friday 13th', genre: 'horror', rating: 9.9 },\",\"  { name: \\\"Nightmare on Elm's Street\\\", genre: 'horror', rating: 5.7 },\",\"  { name: 'Titanic', genre: 'drama', rating: 7.3 },\",\"  { name: 'Maze Runner', genre: 'scifi', rating: 7.1 },\",\"  { name: 'Blade runner', genre: 'scifi', rating: 8.9 }\",\"];\",\"</pre>\",\"one could rank the top-rated movie in each genre by calling\",\"<code>topRankPerGroup(1, data, 'genre', 'rating')</code>\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/top-rank-per-group\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>topRankPerGroup</code> is a function.\",\"testString\":\"assert(typeof topRankPerGroup === 'function', '<code>topRankPerGroup</code> is a function.');\"},{\"text\":\"<code>topRankPerGroup</code> returns undefined on negative n values.\",\"testString\":\"assert(typeof topRankPerGroup(-1, []) === 'undefined', '<code>topRankPerGroup</code> returns undefined on negative n values.');\"},{\"text\":\"First department must be D050\",\"testString\":\"assert.equal(res1[0][0].dept, 'D050', 'First department must be D050');\"},{\"text\":\"First department must be D050\",\"testString\":\"assert.equal(res1[0][1].salary, 21900, 'First department must be D050');\"},{\"text\":\"The last department must be D202\",\"testString\":\"assert.equal(res1[3][3].dept, 'D202', 'The last department must be D202');\"},{\"text\":\"<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.\",\"testString\":\"assert.equal(res2[2].length, 1, '<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.');\"},{\"text\":\"<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.\",\"testString\":\"assert.equal(res3[2][1].name, 'Maze Runner', '<code>topRankPerGroup(1, ...)</code> must return only top ranking result per group.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function topRankPerGroup(n, data, groupName, rankName) {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const testData1 = [\\n  { name: 'Tyler Bennett', id: 'E10297', salary: 32000, dept: 'D101' },\\n  { name: 'John Rappl', id: 'E21437', salary: 47000, dept: 'D050' },\\n  { name: 'George Woltman', id: 'E00127', salary: 53500, dept: 'D101' },\\n  { name: 'Adam Smith', id: 'E63535', salary: 18000, dept: 'D202' },\\n  { name: 'Claire Buckman', id: 'E39876', salary: 27800, dept: 'D202' },\\n  { name: 'David McClellan', id: 'E04242', salary: 41500, dept: 'D101' },\\n  { name: 'Rich Holcomb', id: 'E01234', salary: 49500, dept: 'D202' },\\n  { name: 'Nathan Adams', id: 'E41298', salary: 21900, dept: 'D050' },\\n  { name: 'Richard Potter', id: 'E43128', salary: 15900, dept: 'D101' },\\n  { name: 'David Motsinger', id: 'E27002', salary: 19250, dept: 'D202' },\\n  { name: 'Tim Sampair', id: 'E03033', salary: 27000, dept: 'D101' },\\n  { name: 'Kim Arlich', id: 'E10001', salary: 57000, dept: 'D190' },\\n  { name: 'Timothy Grove', id: 'E16398', salary: 29900, dept: 'D190' }\\n];\\n\\nconst res1 = topRankPerGroup(10, testData1, 'dept', 'salary');\\n\\nconst testData2 = [\\n  { name: 'Friday 13th', genre: 'horror', rating: 9.9 },\\n  { name: \\\"Nightmare on Elm's Street\\\", genre: 'horror', rating: 5.7 },\\n  { name: 'Titanic', genre: 'drama', rating: 7.3 },\\n  { name: 'Maze Runner', genre: 'scifi', rating: 7.1 },\\n  { name: 'Blade runner', genre: 'scifi', rating: 8.9 }\\n];\\n\\nconst res2 = topRankPerGroup(1, testData2, 'genre', 'rating');\\nconst res3 = topRankPerGroup(2, testData2, 'genre', 'rating');\\n\\n//console.log(JSON.stringify(topRankPerGroup(10, testData1)));\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/towers-of-hanoi\",\"id\":\"595011cba5a81735713873bd\"},\"slug\":\"/coding-interview-prep/rosetta-code/top-rank-per-group\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-top-rank-per-group.json\n// module id = 3419\n// module chunks = 41021533107220"],"sourceRoot":""}