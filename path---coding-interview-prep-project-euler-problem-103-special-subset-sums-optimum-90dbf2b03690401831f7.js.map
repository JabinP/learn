{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-103-special-subset-sums-optimum-90dbf2b03690401831f7.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-103-special-subset-sums-optimum.json"],"names":["webpackJsonp","2866","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,4CAAAC,aAAA,gPAAuQ,yRAAmU,0LAAoI,4VAAyV,8IAAAC,cAAA,EAAAC,QAAyOC,KAAA,+EAAAC,UAAA,gBAAAC,QAA4HC,KAAA,wDAAAC,WAAA,8GAAyLC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2EAA8HC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6EAAAC,GAAA,4BAA8KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-103-special-subset-sums-optimum-90dbf2b03690401831f7.js","sourcesContent":["webpackJsonp([115305170744491],{\n\n/***/ 2866:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 103: Special subset sums: optimum\",\"description\":[\"Let S(A) represent the sum of elements in set A of size n. We shall call it a special sum set if for any two non-empty disjoint subsets, B and C, the following properties are true:\",\"S(B) ≠ S(C); that is, sums of subsets cannot be equal.\",\"If B contains more elements than C then S(B) > S(C).\",\"If S(A) is minimised for a given n, we shall call it an optimum special sum set. The first five optimum special sum sets are given below.\",\"n = 1: {1}n = 2: {1, 2}n = 3: {2, 3, 4}n = 4: {3, 5, 6, 7}n = 5: {6, 9, 11, 12, 13}\",\"It seems that for a given optimum set, A = {a1, a2, ... , an}, the next optimum set is of the form B = {b, a1+b, a2+b, ... ,an+b}, where b is the \\\"middle\\\" element on the previous row.\",\"By applying this \\\"rule\\\" we would expect the optimum set for n = 6 to be A = {11, 17, 20, 22, 23, 24}, with S(A) = 117. However, this is not the optimum set, as we have merely applied an algorithm to provide a near optimum set. The optimum set for n = 6 is A = {11, 18, 19, 20, 22, 25}, with S(A) = 115 and corresponding set string: 111819202225.\",\"Given that A is an optimum special sum set for n = 7, find its set string.\",\"NOTE: This problem is related to Problem 105 and Problem 106.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-103-special-subset-sums-optimum\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler103()</code> should return 20313839404245.\",\"testString\":\"assert.strictEqual(euler103(), 20313839404245, '<code>euler103()</code> should return 20313839404245.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler103() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler103();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-104-pandigital-fibonacci-ends\",\"id\":\"5900f3d61000cf542c50fee7\"},\"slug\":\"/coding-interview-prep/project-euler/problem-103-special-subset-sums-optimum\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-103-special-subset-sums-optimum-90dbf2b03690401831f7.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 103: Special subset sums: optimum\",\"description\":[\"Let S(A) represent the sum of elements in set A of size n. We shall call it a special sum set if for any two non-empty disjoint subsets, B and C, the following properties are true:\",\"S(B) ≠ S(C); that is, sums of subsets cannot be equal.\",\"If B contains more elements than C then S(B) > S(C).\",\"If S(A) is minimised for a given n, we shall call it an optimum special sum set. The first five optimum special sum sets are given below.\",\"n = 1: {1}n = 2: {1, 2}n = 3: {2, 3, 4}n = 4: {3, 5, 6, 7}n = 5: {6, 9, 11, 12, 13}\",\"It seems that for a given optimum set, A = {a1, a2, ... , an}, the next optimum set is of the form B = {b, a1+b, a2+b, ... ,an+b}, where b is the \\\"middle\\\" element on the previous row.\",\"By applying this \\\"rule\\\" we would expect the optimum set for n = 6 to be A = {11, 17, 20, 22, 23, 24}, with S(A) = 117. However, this is not the optimum set, as we have merely applied an algorithm to provide a near optimum set. The optimum set for n = 6 is A = {11, 18, 19, 20, 22, 25}, with S(A) = 115 and corresponding set string: 111819202225.\",\"Given that A is an optimum special sum set for n = 7, find its set string.\",\"NOTE: This problem is related to Problem 105 and Problem 106.\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-103-special-subset-sums-optimum\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>euler103()</code> should return 20313839404245.\",\"testString\":\"assert.strictEqual(euler103(), 20313839404245, '<code>euler103()</code> should return 20313839404245.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function euler103() {\\n  // Good luck!\\n  return true;\\n}\\n\\neuler103();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-104-pandigital-fibonacci-ends\",\"id\":\"5900f3d61000cf542c50fee7\"},\"slug\":\"/coding-interview-prep/project-euler/problem-103-special-subset-sums-optimum\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-103-special-subset-sums-optimum.json\n// module id = 2866\n// module chunks = 115305170744491"],"sourceRoot":""}