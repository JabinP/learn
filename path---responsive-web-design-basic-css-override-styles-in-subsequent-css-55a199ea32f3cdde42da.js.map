{"version":3,"sources":["webpack:///path---responsive-web-design-basic-css-override-styles-in-subsequent-css-55a199ea32f3cdde42da.js","webpack:///./.cache/json/responsive-web-design-basic-css-override-styles-in-subsequent-css.json"],"names":["webpackJsonp","4110","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oCAAAC,aAAA,kpBAA0iBC,cAAA,EAAAC,QAAmMC,KAAA,qEAAAC,UAAA,YAAAC,QAA8GC,KAAA,qDAAAC,WAAA,mGAA8KD,KAAA,qDAAAC,WAAA,mGAA8KD,KAAA,yEAAAC,WAAA,+HAA8ND,KAAA,4BAAAC,WAAA,uFAA0IC,YAAAC,OAAwBC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,iMAAqMC,KAAA,GAAAC,KAAA,IAA2EC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,wFAAAC,GAAA,4BAAyLrB,KAAA","file":"path---responsive-web-design-basic-css-override-styles-in-subsequent-css-55a199ea32f3cdde42da.js","sourcesContent":["webpackJsonp([48796473227015],{\n\n/***/ 4110:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Override Styles in Subsequent CSS\",\"description\":[\"\\\"pink-text\\\" class 覆盖了<code>body</code>元素的 CSS 声明。\",\"我们刚刚证明了我们的 class 会覆盖<code>body</code>的 CSS 样式。那么，下一个问题是，我们要怎么样才能覆盖我们的<code>pink-text</code>class？\",\"<hr>\",\"创建一个字体颜色为<code>blue</code>的<code>blue-text</code>CSS class，并确保它在<code>pink-text</code>下方声明。\",\"在含有<code>pink-text</code>class 的<code>h1</code>元素里面，再添加一个<code>blue-text</code>class，这时候，我们将能看到到底是谁获胜。\",\"HTML 同时应用多个 class 属性需以空格来间隔，例子如下:\",\"<code>class=\\\"class1 class2\\\"</code>\",\"注意：HTML 元素里应用的 class 的先后顺序无关紧要。\",\"但是，在<code>&#60;style&#62;</code>标签里面声明的<code>class</code>顺序十分重要。第二个声明始终优于第一个声明。因为<code>.blue-text</code>在<code>.pink-text</code>的后面声明，所以<code>.blue-text</code>会覆盖<code>.pink-text</code>的样式。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/basic-css/override-styles-in-subsequent-css\",\"blockName\":\"Basic CSS\",\"tests\":[{\"text\":\"<code>h1</code>元素应该包含<code>pink-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"pink-text\\\"), '<code>h1</code>元素应该包含<code>pink-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>blue-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"blue-text\\\"), '<code>h1</code>元素应该包含<code>blue-text</code> class。');\"},{\"text\":\"<code>blue-text</code>和<code>pink-text</code>需同时应用于<code>h1</code>元素上。\",\"testString\":\"assert($(\\\".pink-text\\\").hasClass(\\\"blue-text\\\"), '<code>blue-text</code>和<code>pink-text</code>需同时应用于<code>h1</code>元素上。');\"},{\"text\":\"<code>h1</code>元素的颜色应为蓝色。\",\"testString\":\"assert($(\\\"h1\\\").css(\\\"color\\\") === \\\"rgb(0, 0, 255)\\\", '<code>h1</code>元素的颜色应为蓝色。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  body {\\n    background-color: black;\\n    font-family: monospace;\\n    color: green;\\n  }\\n  .pink-text {\\n    color: pink;\\n  }\\n</style>\\n<h1 class=\\\"pink-text\\\">Hello World!</h1>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes\",\"id\":\"bad87fee1348bd9aedf04756\"},\"slug\":\"/responsive-web-design/basic-css/override-styles-in-subsequent-css\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-web-design-basic-css-override-styles-in-subsequent-css-55a199ea32f3cdde42da.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Override Styles in Subsequent CSS\",\"description\":[\"\\\"pink-text\\\" class 覆盖了<code>body</code>元素的 CSS 声明。\",\"我们刚刚证明了我们的 class 会覆盖<code>body</code>的 CSS 样式。那么，下一个问题是，我们要怎么样才能覆盖我们的<code>pink-text</code>class？\",\"<hr>\",\"创建一个字体颜色为<code>blue</code>的<code>blue-text</code>CSS class，并确保它在<code>pink-text</code>下方声明。\",\"在含有<code>pink-text</code>class 的<code>h1</code>元素里面，再添加一个<code>blue-text</code>class，这时候，我们将能看到到底是谁获胜。\",\"HTML 同时应用多个 class 属性需以空格来间隔，例子如下:\",\"<code>class=\\\"class1 class2\\\"</code>\",\"注意：HTML 元素里应用的 class 的先后顺序无关紧要。\",\"但是，在<code>&#60;style&#62;</code>标签里面声明的<code>class</code>顺序十分重要。第二个声明始终优于第一个声明。因为<code>.blue-text</code>在<code>.pink-text</code>的后面声明，所以<code>.blue-text</code>会覆盖<code>.pink-text</code>的样式。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/basic-css/override-styles-in-subsequent-css\",\"blockName\":\"Basic CSS\",\"tests\":[{\"text\":\"<code>h1</code>元素应该包含<code>pink-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"pink-text\\\"), '<code>h1</code>元素应该包含<code>pink-text</code> class。');\"},{\"text\":\"<code>h1</code>元素应该包含<code>blue-text</code> class。\",\"testString\":\"assert($(\\\"h1\\\").hasClass(\\\"blue-text\\\"), '<code>h1</code>元素应该包含<code>blue-text</code> class。');\"},{\"text\":\"<code>blue-text</code>和<code>pink-text</code>需同时应用于<code>h1</code>元素上。\",\"testString\":\"assert($(\\\".pink-text\\\").hasClass(\\\"blue-text\\\"), '<code>blue-text</code>和<code>pink-text</code>需同时应用于<code>h1</code>元素上。');\"},{\"text\":\"<code>h1</code>元素的颜色应为蓝色。\",\"testString\":\"assert($(\\\"h1\\\").css(\\\"color\\\") === \\\"rgb(0, 0, 255)\\\", '<code>h1</code>元素的颜色应为蓝色。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  body {\\n    background-color: black;\\n    font-family: monospace;\\n    color: green;\\n  }\\n  .pink-text {\\n    color: pink;\\n  }\\n</style>\\n<h1 class=\\\"pink-text\\\">Hello World!</h1>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes\",\"id\":\"bad87fee1348bd9aedf04756\"},\"slug\":\"/responsive-web-design/basic-css/override-styles-in-subsequent-css\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-web-design-basic-css-override-styles-in-subsequent-css.json\n// module id = 4110\n// module chunks = 48796473227015"],"sourceRoot":""}