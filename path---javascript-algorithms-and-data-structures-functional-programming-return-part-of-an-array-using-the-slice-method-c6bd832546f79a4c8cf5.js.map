{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-functional-programming-return-part-of-an-array-using-the-slice-method-c6bd832546f79a4c8cf5.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-functional-programming-return-part-of-an-array-using-the-slice-method.json"],"names":["webpackJsonp","3914","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iDAAAC,aAAA,2SAA6U,qJAAAC,cAAA,EAAAC,QAAmOC,KAAA,mHAAAC,UAAA,yBAAAC,QAAyKC,KAAA,gCAAAC,WAAA,sEAA0HD,KAAA,gCAAAC,WAAA,sIAAkMD,KAAA,0GAAAC,WAAA,yOAA+YD,KAAA,iGAAAC,WAAA,uNAA8WD,KAAA,mHAAAC,WAAA,4PAAgbC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,6LAA0PC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,gIAAAC,GAAA,4BAAiOrB,KAAA","file":"path---javascript-algorithms-and-data-structures-functional-programming-return-part-of-an-array-using-the-slice-method-c6bd832546f79a4c8cf5.js","sourcesContent":["webpackJsonp([65186431482547],{\n\n/***/ 3914:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Return Part of an Array Using the slice Method\",\"description\":[\"<code>slice</code>方法可以从已有数组中返回指定元素。它接受两个参数，第一个规定从何处开始选取，第二个规定从何处结束选取（不包括该元素）。如果没有传参，则默认为从数组的开头开始到结尾结束，这是复制整个数组的简单方式。<code>slice</code>返回一个新数组，不会修改原始数组。\",\"举个例子：\",\"<blockquote>var arr = [\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"];<br>var newArray = arr.slice(1, 3);<br>// 将新数组设置为 [\\\"Dog\\\", \\\"Tiger\\\"]</blockquote>\",\"<hr>\",\"在<code>sliceArray</code>函数中使用<code>slice</code>方法，给出<code>beginSlice</code>和<code>endSlice</code>索引，返回<code>anim</code>数组的一部分，这个函数应返回一个数组。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-part-of-an-array-using-the-slice-method\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"你的代码中应使用<code>slice</code>方法。\",\"testString\":\"assert(code.match(/\\\\.slice/g), '你的代码中应使用<code>slice</code>方法。');\"},{\"text\":\"不能改变<code>inputAnim</code>变量。\",\"testString\":\"assert(JSON.stringify(inputAnim) === JSON.stringify([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"]), '不能改变<code>inputAnim</code>变量。');\"},{\"text\":\"<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 3)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\"]</code>。\",\"testString\":\"assert(JSON.stringify(sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 3)) === JSON.stringify([\\\"Dog\\\", \\\"Tiger\\\"]), '<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 3)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\"]</code>。');\"},{\"text\":\"<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 0, 1)</code>应返回<code>[\\\"Cat\\\"]</code>。\",\"testString\":\"assert(JSON.stringify(sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 0, 1)) === JSON.stringify([\\\"Cat\\\"]), '<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 0, 1)</code>应返回<code>[\\\"Cat\\\"]</code>。');\"},{\"text\":\"<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 4)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"]</code>。\",\"testString\":\"assert(JSON.stringify(sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 4)) === JSON.stringify([\\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"]), '<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 4)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"]</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sliceArray(anim, beginSlice, endSlice) {\\n  // 请在本行以下添加你的代码\\n  \\n  \\n  // 请在本行以上添加你的代码\\n}\\nvar inputAnim = [\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"];\\nsliceArray(inputAnim, 1, 3);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/remove-elements-from-an-array-using-slice-instead-of-splice\",\"id\":\"587d7b90367417b2b2512b65\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-part-of-an-array-using-the-slice-method\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-functional-programming-return-part-of-an-array-using-the-slice-method-c6bd832546f79a4c8cf5.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Return Part of an Array Using the slice Method\",\"description\":[\"<code>slice</code>方法可以从已有数组中返回指定元素。它接受两个参数，第一个规定从何处开始选取，第二个规定从何处结束选取（不包括该元素）。如果没有传参，则默认为从数组的开头开始到结尾结束，这是复制整个数组的简单方式。<code>slice</code>返回一个新数组，不会修改原始数组。\",\"举个例子：\",\"<blockquote>var arr = [\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"];<br>var newArray = arr.slice(1, 3);<br>// 将新数组设置为 [\\\"Dog\\\", \\\"Tiger\\\"]</blockquote>\",\"<hr>\",\"在<code>sliceArray</code>函数中使用<code>slice</code>方法，给出<code>beginSlice</code>和<code>endSlice</code>索引，返回<code>anim</code>数组的一部分，这个函数应返回一个数组。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-part-of-an-array-using-the-slice-method\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"你的代码中应使用<code>slice</code>方法。\",\"testString\":\"assert(code.match(/\\\\.slice/g), '你的代码中应使用<code>slice</code>方法。');\"},{\"text\":\"不能改变<code>inputAnim</code>变量。\",\"testString\":\"assert(JSON.stringify(inputAnim) === JSON.stringify([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"]), '不能改变<code>inputAnim</code>变量。');\"},{\"text\":\"<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 3)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\"]</code>。\",\"testString\":\"assert(JSON.stringify(sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 3)) === JSON.stringify([\\\"Dog\\\", \\\"Tiger\\\"]), '<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 3)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\"]</code>。');\"},{\"text\":\"<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 0, 1)</code>应返回<code>[\\\"Cat\\\"]</code>。\",\"testString\":\"assert(JSON.stringify(sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 0, 1)) === JSON.stringify([\\\"Cat\\\"]), '<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 0, 1)</code>应返回<code>[\\\"Cat\\\"]</code>。');\"},{\"text\":\"<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 4)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"]</code>。\",\"testString\":\"assert(JSON.stringify(sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 4)) === JSON.stringify([\\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"]), '<code>sliceArray([\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"], 1, 4)</code>应返回<code>[\\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\"]</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sliceArray(anim, beginSlice, endSlice) {\\n  // 请在本行以下添加你的代码\\n  \\n  \\n  // 请在本行以上添加你的代码\\n}\\nvar inputAnim = [\\\"Cat\\\", \\\"Dog\\\", \\\"Tiger\\\", \\\"Zebra\\\", \\\"Ant\\\"];\\nsliceArray(inputAnim, 1, 3);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/remove-elements-from-an-array-using-slice-instead-of-splice\",\"id\":\"587d7b90367417b2b2512b65\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/return-part-of-an-array-using-the-slice-method\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-functional-programming-return-part-of-an-array-using-the-slice-method.json\n// module id = 3914\n// module chunks = 65186431482547"],"sourceRoot":""}