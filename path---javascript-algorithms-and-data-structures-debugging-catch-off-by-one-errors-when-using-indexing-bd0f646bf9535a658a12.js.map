{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-debugging-catch-off-by-one-errors-when-using-indexing-bd0f646bf9535a658a12.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-debugging-catch-off-by-one-errors-when-using-indexing.json"],"names":["webpackJsonp","3865","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,8CAAAC,aAAA,muBAA2xB,4DAAAC,cAAA,EAAAC,QAAuGC,KAAA,mGAAAC,UAAA,YAAAC,QAA4IC,KAAA,4BAAAC,WAAA,yFAAyID,KAAA,2BAAAC,WAAA,4EAA2HD,KAAA,6BAAAC,WAAA,4FAA6ID,KAAA,mCAAAC,WAAA,oFAA0IC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,4NAAiRC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,+GAAAC,GAAA,4BAAgNrB,KAAA","file":"path---javascript-algorithms-and-data-structures-debugging-catch-off-by-one-errors-when-using-indexing-bd0f646bf9535a658a12.js","sourcesContent":["webpackJsonp([141691128984539],{\n\n/***/ 3865:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Catch Off By One Errors When Using Indexing\",\"description\":[\"当你试图访问字符串或数组的特定索引（分割或访问一个片段）或循环索引时，有时会出现<code>Off by one errors</code>错误（有时称为 OBOE）。JavaScript 索引从<code>0</code>开始，而不是<code>1</code>，这意味着最后一个索引总会比字符串或数组的长度少 1。如果你尝试访问等于长度的索引，程序可能会抛出“索引超出范围”引用错误或打印出<code>undefined</code>。\",\"当你使用将索引范围作为参数的字符串或数组方法时，阅读相关的文档并了解参数中的索引的包含性（即是否考虑进返回值中）很重要。以下是一些错误的示例：\",\"<blockquote>let alphabet = \\\"abcdefghijklmnopqrstuvwxyz\\\";<br>let len = alphabet.length;<br>for (let i = 0; i <= len; i++) {<br>&nbsp;&nbsp;// 在最后多了一次循环<br>&nbsp;&nbsp;console.log(alphabet[i]);<br>}<br>for (let j = 1; j < len; j++) {<br>&nbsp;&nbsp;// 循环少了一次，漏掉了索引 0 处的字符<br>&nbsp;&nbsp;console.log(alphabet[j]);<br>}<br>for (let k = 0; k < len; k++) {<br>&nbsp;&nbsp;// 不多不少，这才是正确的<br>&nbsp;&nbsp;console.log(alphabet[k]);<br>}</blockquote>\",\"<hr>\",\"修复以下函数中的两个索引错误，以便将 1 到 5 之间（包含 1 和 5）的所有数字打印到控制台。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-off-by-one-errors-when-using-indexing\",\"blockName\":\"Debugging\",\"tests\":[{\"text\":\"你应该设置循环的初始条件，使循环从第一个索引开始。\",\"testString\":\"assert(code.match(/i\\\\s*?=\\\\s*?0\\\\s*?;/g).length == 1, '你应该设置循环的初始条件，使循环从第一个索引开始。');\"},{\"text\":\"你应修复循环的初始条件，使循环从索引 0 开始。\",\"testString\":\"assert(!code.match(/i\\\\s?=\\\\s*?1\\\\s*?;/g), '你应修复循环的初始条件，使循环从索引 0 开始。');\"},{\"text\":\"你应设置循环的终止条件，使循环在最后一个索引处停止。\",\"testString\":\"assert(code.match(/i\\\\s*?<\\\\s*?len\\\\s*?;/g).length == 1, '你应设置循环的终止条件，使循环在最后一个索引处停止。');\"},{\"text\":\"你应修复循环的终止条件，使循环在索引为字符串长度减 1 时停止。\",\"testString\":\"assert(!code.match(/i\\\\s*?<=\\\\s*?len;/g), '你应修复循环的终止条件，使循环在索引为字符串长度减 1 时停止。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function countToFive() {\\n  let firstFive = \\\"12345\\\";\\n  let len = firstFive.length;\\n  // 请修改这条注释以下的代码\\n  for (let i = 1; i <= len; i++) {\\n  // 请不要修改这条注释以下的代码\\n    console.log(firstFive[i]);\\n  }\\n}\\n\\ncountToFive();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/debugging/use-caution-when-reinitializing-variables-inside-a-loop\",\"id\":\"587d7b86367417b2b2512b3b\"},\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-off-by-one-errors-when-using-indexing\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-debugging-catch-off-by-one-errors-when-using-indexing-bd0f646bf9535a658a12.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Catch Off By One Errors When Using Indexing\",\"description\":[\"当你试图访问字符串或数组的特定索引（分割或访问一个片段）或循环索引时，有时会出现<code>Off by one errors</code>错误（有时称为 OBOE）。JavaScript 索引从<code>0</code>开始，而不是<code>1</code>，这意味着最后一个索引总会比字符串或数组的长度少 1。如果你尝试访问等于长度的索引，程序可能会抛出“索引超出范围”引用错误或打印出<code>undefined</code>。\",\"当你使用将索引范围作为参数的字符串或数组方法时，阅读相关的文档并了解参数中的索引的包含性（即是否考虑进返回值中）很重要。以下是一些错误的示例：\",\"<blockquote>let alphabet = \\\"abcdefghijklmnopqrstuvwxyz\\\";<br>let len = alphabet.length;<br>for (let i = 0; i <= len; i++) {<br>&nbsp;&nbsp;// 在最后多了一次循环<br>&nbsp;&nbsp;console.log(alphabet[i]);<br>}<br>for (let j = 1; j < len; j++) {<br>&nbsp;&nbsp;// 循环少了一次，漏掉了索引 0 处的字符<br>&nbsp;&nbsp;console.log(alphabet[j]);<br>}<br>for (let k = 0; k < len; k++) {<br>&nbsp;&nbsp;// 不多不少，这才是正确的<br>&nbsp;&nbsp;console.log(alphabet[k]);<br>}</blockquote>\",\"<hr>\",\"修复以下函数中的两个索引错误，以便将 1 到 5 之间（包含 1 和 5）的所有数字打印到控制台。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-off-by-one-errors-when-using-indexing\",\"blockName\":\"Debugging\",\"tests\":[{\"text\":\"你应该设置循环的初始条件，使循环从第一个索引开始。\",\"testString\":\"assert(code.match(/i\\\\s*?=\\\\s*?0\\\\s*?;/g).length == 1, '你应该设置循环的初始条件，使循环从第一个索引开始。');\"},{\"text\":\"你应修复循环的初始条件，使循环从索引 0 开始。\",\"testString\":\"assert(!code.match(/i\\\\s?=\\\\s*?1\\\\s*?;/g), '你应修复循环的初始条件，使循环从索引 0 开始。');\"},{\"text\":\"你应设置循环的终止条件，使循环在最后一个索引处停止。\",\"testString\":\"assert(code.match(/i\\\\s*?<\\\\s*?len\\\\s*?;/g).length == 1, '你应设置循环的终止条件，使循环在最后一个索引处停止。');\"},{\"text\":\"你应修复循环的终止条件，使循环在索引为字符串长度减 1 时停止。\",\"testString\":\"assert(!code.match(/i\\\\s*?<=\\\\s*?len;/g), '你应修复循环的终止条件，使循环在索引为字符串长度减 1 时停止。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function countToFive() {\\n  let firstFive = \\\"12345\\\";\\n  let len = firstFive.length;\\n  // 请修改这条注释以下的代码\\n  for (let i = 1; i <= len; i++) {\\n  // 请不要修改这条注释以下的代码\\n    console.log(firstFive[i]);\\n  }\\n}\\n\\ncountToFive();\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/debugging/use-caution-when-reinitializing-variables-inside-a-loop\",\"id\":\"587d7b86367417b2b2512b3b\"},\"slug\":\"/javascript-algorithms-and-data-structures/debugging/catch-off-by-one-errors-when-using-indexing\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-debugging-catch-off-by-one-errors-when-using-indexing.json\n// module id = 3865\n// module chunks = 141691128984539"],"sourceRoot":""}