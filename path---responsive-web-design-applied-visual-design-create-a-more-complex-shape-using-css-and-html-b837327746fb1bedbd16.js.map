{"version":3,"sources":["webpack:///path---responsive-web-design-applied-visual-design-create-a-more-complex-shape-using-css-and-html-b837327746fb1bedbd16.js","webpack:///./.cache/json/responsive-web-design-applied-visual-design-create-a-more-complex-shape-using-css-and-html.json"],"names":["webpackJsonp","4056","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iDAAAC,aAAA,meAA8hB,oyBAAAC,cAAA,EAAAC,QAA+0BC,KAAA,8FAAAC,UAAA,wBAAAC,QAAmJC,KAAA,qEAAAC,WAAA,kKAA2PD,KAAA,oEAAAC,WAAA,0IAAkOD,KAAA,uGAAAC,WAAA,sLAAiTD,KAAA,4DAAAC,WAAA,uJAAsOC,YAAAC,OAAwBC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,sjBAAwkBC,KAAA,GAAAC,KAAA,IAA+DC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,yGAAAC,GAAA,4BAA0MrB,KAAA","file":"path---responsive-web-design-applied-visual-design-create-a-more-complex-shape-using-css-and-html-b837327746fb1bedbd16.js","sourcesContent":["webpackJsonp([275439840908400],{\n\n/***/ 4056:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Create a More Complex Shape Using CSS and HTML\",\"description\":[\"世界上最流行的形状非心形莫属了，在本关里你将用纯 CSS 创建一个心形。但是首先你需要了解<code>:before</code>和<code>:after</code>伪类。这些伪类用来在选择元素之前和之后添加一些内容。在下面的例子里，<code>:before</code>伪类元素用来给 class 为<code>heart</code>的元素添加一个正方形。\",\"<blockquote>.heart:before {<br>&nbsp;&nbsp;content: \\\"\\\";<br>&nbsp;&nbsp;background-color: yellow;<br>&nbsp;&nbsp;border-radius: 25%;<br>&nbsp;&nbsp;position: absolute;<br>&nbsp;&nbsp;height: 50px;<br>&nbsp;&nbsp;width: 70px;<br>&nbsp;&nbsp;top: -50px;<br>&nbsp;&nbsp;left: 5px;<br>}</blockquote>\",\"<code>:before</code>和<code>:after</code>必须配合<code>content</code>来使用。这个属性通常用来给元素添加内容诸如图片或者文字。当<code>:before</code>和<code>:after</code>伪类用来添加某些形状而不是图片或文字时，<code>content</code>属性仍然是必需的，但是它的值可以是空字符串。\",\"在上面的例子里，class 为<code>heart</code>元素的<code>:before</code>伪类添加了一个黄色的长方形，长方形的<code>height</code>和<code>width</code>分别为 50px 和 70px。由于设置了其边框半径为 25%，所以长方形为圆角长方形，同时其相对位置为距离<code>left</code>5px，以及向<code>top</code>偏移 50px。\",\"<hr>\",\"把屏幕里的元素变成心形。在<code>heart:after</code>选择器里面，把<code>background-color</code>改成粉色（pink），把<code>border-radius</code>改成 50%。\",\"接下来，在<code>heart</code>class 选择器（单纯的<code>heart</code>元素）里面，完善<code>transform</code>属性。使用<code>rotate()</code>函数并赋参 -45 度。（<code>rotate()</code>用法和<code>skewX</code>以及<code>skewY</code>类似）。\",\"最后，在<code>heart:before</code>选择器里面，设置<code>content</code>属性为空字符串。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/applied-visual-design/create-a-more-complex-shape-using-css-and-html\",\"blockName\":\"Applied Visual Design\",\"tests\":[{\"text\":\"<code>heart:after</code>选择器的<code>background-color</code>属性值应该为粉色。\",\"testString\":\"assert(code.match(/\\\\.heart:after\\\\s*?{\\\\s*?background-color\\\\s*?:\\\\s*?pink\\\\s*?;/gi), '<code>heart:after</code>选择器的<code>background-color</code>属性值应该为粉色。');\"},{\"text\":\"<code>heart:after</code>选择器的<code>border-radius</code>属性值应该为 50%。\",\"testString\":\"assert(code.match(/border-radius\\\\s*?:\\\\s*?50%/gi).length == 2, '<code>heart:after</code>选择器的<code>border-radius</code>属性值应该为 50%。');\"},{\"text\":\"<code>heart</code>class 的<code>transform</code>属性应该使用<code>rotate()</code>函数并赋参为<code>-45deg</code>。\",\"testString\":\"assert(code.match(/transform\\\\s*?:\\\\s*?rotate\\\\(\\\\s*?-45deg\\\\s*?\\\\)/gi), '<code>heart</code>class 的<code>transform</code>属性应该使用<code>rotate()</code>函数并赋参为<code>-45deg</code>。');\"},{\"text\":\"<code>heart:before</code>选择器的<code>content</code>应该为空字符串。\",\"testString\":\"assert(code.match(/\\\\.heart:before\\\\s*?{\\\\s*?content\\\\s*?:\\\\s*?(\\\"|')\\\\1\\\\s*?;/gi), '<code>heart:before</code>选择器的<code>content</code>应该为空字符串。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n.heart {\\n  position: absolute;\\n  margin: auto;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background-color: pink;\\n  height: 50px;\\n  width: 50px;\\n  transform: ;\\n}\\n.heart:after {\\n  background-color: blue;\\n  content: \\\"\\\";\\n  border-radius: 25%;\\n  position: absolute;\\n  width: 50px;\\n  height: 50px;\\n  top: 0px;\\n  left: 25px;\\n}\\n.heart:before {\\n  content: ;\\n  background-color: pink;\\n  border-radius: 50%;\\n  position: absolute;\\n  width: 50px;\\n  height: 50px;\\n  top: -25px;\\n  left: 0px;\\n}\\n</style>\\n<div class = \\\"heart\\\"></div>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/applied-visual-design/learn-how-the-css-keyframes-and-animation-properties-work\",\"id\":\"587d78a6367417b2b2512ade\"},\"slug\":\"/responsive-web-design/applied-visual-design/create-a-more-complex-shape-using-css-and-html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-web-design-applied-visual-design-create-a-more-complex-shape-using-css-and-html-b837327746fb1bedbd16.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Create a More Complex Shape Using CSS and HTML\",\"description\":[\"世界上最流行的形状非心形莫属了，在本关里你将用纯 CSS 创建一个心形。但是首先你需要了解<code>:before</code>和<code>:after</code>伪类。这些伪类用来在选择元素之前和之后添加一些内容。在下面的例子里，<code>:before</code>伪类元素用来给 class 为<code>heart</code>的元素添加一个正方形。\",\"<blockquote>.heart:before {<br>&nbsp;&nbsp;content: \\\"\\\";<br>&nbsp;&nbsp;background-color: yellow;<br>&nbsp;&nbsp;border-radius: 25%;<br>&nbsp;&nbsp;position: absolute;<br>&nbsp;&nbsp;height: 50px;<br>&nbsp;&nbsp;width: 70px;<br>&nbsp;&nbsp;top: -50px;<br>&nbsp;&nbsp;left: 5px;<br>}</blockquote>\",\"<code>:before</code>和<code>:after</code>必须配合<code>content</code>来使用。这个属性通常用来给元素添加内容诸如图片或者文字。当<code>:before</code>和<code>:after</code>伪类用来添加某些形状而不是图片或文字时，<code>content</code>属性仍然是必需的，但是它的值可以是空字符串。\",\"在上面的例子里，class 为<code>heart</code>元素的<code>:before</code>伪类添加了一个黄色的长方形，长方形的<code>height</code>和<code>width</code>分别为 50px 和 70px。由于设置了其边框半径为 25%，所以长方形为圆角长方形，同时其相对位置为距离<code>left</code>5px，以及向<code>top</code>偏移 50px。\",\"<hr>\",\"把屏幕里的元素变成心形。在<code>heart:after</code>选择器里面，把<code>background-color</code>改成粉色（pink），把<code>border-radius</code>改成 50%。\",\"接下来，在<code>heart</code>class 选择器（单纯的<code>heart</code>元素）里面，完善<code>transform</code>属性。使用<code>rotate()</code>函数并赋参 -45 度。（<code>rotate()</code>用法和<code>skewX</code>以及<code>skewY</code>类似）。\",\"最后，在<code>heart:before</code>选择器里面，设置<code>content</code>属性为空字符串。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/applied-visual-design/create-a-more-complex-shape-using-css-and-html\",\"blockName\":\"Applied Visual Design\",\"tests\":[{\"text\":\"<code>heart:after</code>选择器的<code>background-color</code>属性值应该为粉色。\",\"testString\":\"assert(code.match(/\\\\.heart:after\\\\s*?{\\\\s*?background-color\\\\s*?:\\\\s*?pink\\\\s*?;/gi), '<code>heart:after</code>选择器的<code>background-color</code>属性值应该为粉色。');\"},{\"text\":\"<code>heart:after</code>选择器的<code>border-radius</code>属性值应该为 50%。\",\"testString\":\"assert(code.match(/border-radius\\\\s*?:\\\\s*?50%/gi).length == 2, '<code>heart:after</code>选择器的<code>border-radius</code>属性值应该为 50%。');\"},{\"text\":\"<code>heart</code>class 的<code>transform</code>属性应该使用<code>rotate()</code>函数并赋参为<code>-45deg</code>。\",\"testString\":\"assert(code.match(/transform\\\\s*?:\\\\s*?rotate\\\\(\\\\s*?-45deg\\\\s*?\\\\)/gi), '<code>heart</code>class 的<code>transform</code>属性应该使用<code>rotate()</code>函数并赋参为<code>-45deg</code>。');\"},{\"text\":\"<code>heart:before</code>选择器的<code>content</code>应该为空字符串。\",\"testString\":\"assert(code.match(/\\\\.heart:before\\\\s*?{\\\\s*?content\\\\s*?:\\\\s*?(\\\"|')\\\\1\\\\s*?;/gi), '<code>heart:before</code>选择器的<code>content</code>应该为空字符串。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n.heart {\\n  position: absolute;\\n  margin: auto;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background-color: pink;\\n  height: 50px;\\n  width: 50px;\\n  transform: ;\\n}\\n.heart:after {\\n  background-color: blue;\\n  content: \\\"\\\";\\n  border-radius: 25%;\\n  position: absolute;\\n  width: 50px;\\n  height: 50px;\\n  top: 0px;\\n  left: 25px;\\n}\\n.heart:before {\\n  content: ;\\n  background-color: pink;\\n  border-radius: 50%;\\n  position: absolute;\\n  width: 50px;\\n  height: 50px;\\n  top: -25px;\\n  left: 0px;\\n}\\n</style>\\n<div class = \\\"heart\\\"></div>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/applied-visual-design/learn-how-the-css-keyframes-and-animation-properties-work\",\"id\":\"587d78a6367417b2b2512ade\"},\"slug\":\"/responsive-web-design/applied-visual-design/create-a-more-complex-shape-using-css-and-html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-web-design-applied-visual-design-create-a-more-complex-shape-using-css-and-html.json\n// module id = 4056\n// module chunks = 275439840908400"],"sourceRoot":""}