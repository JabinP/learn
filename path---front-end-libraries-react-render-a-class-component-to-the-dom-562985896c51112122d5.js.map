{"version":3,"sources":["webpack:///path---front-end-libraries-react-render-a-class-component-to-the-dom-562985896c51112122d5.js","webpack:///./.cache/json/front-end-libraries-react-render-a-class-component-to-the-dom.json"],"names":["webpackJsonp","3592","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","link","raw","src","files","indexhtml","indexjs","indexjsx","key","ext","name","contents","head","tail","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,sCAAAC,aAAA,udAAwe,4MAAAC,cAAA,EAAAC,QAAoRC,KAAA,iEAAAC,UAAA,QAAAC,QAAsGC,KAAA,sDAAAC,WAAA,mNAA6RD,KAAA,2EAAAC,WAAA,sPAAqVD,KAAA,mFAAAC,WAAA,kQAAyWD,KAAA,qFAAAC,WAAA,0iBAAkpBC,WAAcC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGC,OAAWC,UAAA,KAAAC,QAAA,KAAAC,UAA4CC,IAAA,WAAAC,IAAA,MAAAC,KAAA,QAAAC,SAAA,yUAA0VC,KAAA,yoBAAkrBC,KAAA,OAAiBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,qFAAsGjB,WAAsBC,KAAA,KAAAC,IAAA,KAAAC,IAAA,+DAA4FF,KAAA,KAAAC,IAAA,KAAAC,IAAA,uEAAkGe,kBAAA,kEAAAC,GAAA,4BAAwHxB,KAAA","file":"path---front-end-libraries-react-render-a-class-component-to-the-dom-562985896c51112122d5.js","sourcesContent":["webpackJsonp([237634530500162],{\n\n/***/ 3592:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Render a Class Component to the DOM\",\"description\":[\"你可能还记得在早期挑战中使用 ReactDOM API 将 JSX 元素渲染到 DOM，这与渲染 React 组件的过程十分相似。过去的几个挑战主要针对组件和组合，因此渲染是在幕后为你完成的。但是，如果不调用 ReactDOM API，你编写的任何 React 代码都不会渲染到 DOM。\",\"以下是语法的复习：<code>ReactDOM.render(componentToRender, targetNode)</code>。第一个参数是要渲染的 React 组件。第二个参数是要在其中渲染该组件的 DOM 节点。\",\"React 组件传递到<code>ReactDOM.render()</code>与 JSX 元素略有不同。对于 JSX 元素，你传入的是要渲染的元素的名称。但是，对于 React 组件，你需要使用与渲染嵌套组件相同的语法，例如<code>ReactDOM.render(&lt;ComponentToRender /&gt;, targetNode)</code>。你可以将此语法用于ES6类组件和函数组件。\",\"<hr>\",\"在后台为你定义了<code>Fruits</code>和<code>Vegetables</code>组件。将两个组件渲染为<code>TypesOfFood</code>组件的子组件，然后将<code>TypesOfFood</code>渲染到 DOM 节点，在这个挑战中，请渲染到 id 为<code>challenge-node</code>的<code>div</code>中。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/render-a-class-component-to-the-dom\",\"blockName\":\"React\",\"tests\":[{\"text\":\"<code>TypesOfFood</code>组件应该返回单个<code>div</code>元素。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(TypesOfFood)); return mockedComponent.children().type() === 'div'; })(), '<code>TypesOfFood</code>组件应该返回单个<code>div</code>元素。');\"},{\"text\":\"<code>TypesOfFood</code>组件应该在<code>h1</code>元素之后渲染<code>Fruits</code>组件。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(TypesOfFood)); return mockedComponent.children().childAt(1).name() === 'Fruits'; })(), '<code>TypesOfFood</code>组件应该在<code>h1</code>元素之后渲染<code>Fruits</code>组件。');\"},{\"text\":\"<code>TypesOfFood</code>组件应该在<code>Fruits</code>组件之后渲染<code>Vegetables</code>组件。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(TypesOfFood)); return mockedComponent.children().childAt(2).name() === 'Vegetables'; })(), '<code>TypesOfFood</code>组件应该在<code>Fruits</code>组件之后渲染<code>Vegetables</code>组件。');\"},{\"text\":\"<code>TypesOfFood</code>组件应该渲染到 id 为<code>challenge-node</code>的<code>div</code>中。\",\"testString\":\"assert((function() { const html = document.getElementById('challenge-node').childNodes[0].innerHTML; return (html === '<h1>Types of Food:</h1><div><h2>Fruits:</h2><h4>Non-Citrus:</h4><ul><li>Apples</li><li>Blueberries</li><li>Strawberries</li><li>Bananas</li></ul><h4>Citrus:</h4><ul><li>Lemon</li><li>Lime</li><li>Orange</li><li>Grapefruit</li></ul></div><div><h2>Vegetables:</h2><ul><li>Brussel Sprouts</li><li>Broccoli</li><li>Squash</li></ul></div>'); })(), '<code>TypesOfFood</code>组件应该渲染到 id 为<code>challenge-node</code>的<code>div</code>中。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"\\nclass TypesOfFood extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <h1>Types of Food:</h1>\\n        {/* change code below this line */}\\n\\n        {/* change code above this line */}\\n      </div>\\n    );\\n  }\\n};\\n\\n// change code below this line\\n\",\"head\":\"\\nconst Fruits = () => {\\n  return (\\n    <div>\\n      <h2>Fruits:</h2>\\n      <h4>Non-Citrus:</h4>\\n        <ul>\\n          <li>Apples</li>\\n          <li>Blueberries</li>\\n          <li>Strawberries</li>\\n          <li>Bananas</li>\\n        </ul>\\n      <h4>Citrus:</h4>\\n        <ul>\\n          <li>Lemon</li>\\n          <li>Lime</li>\\n          <li>Orange</li>\\n          <li>Grapefruit</li>\\n        </ul>\\n    </div>\\n  );\\n};\\nconst Vegetables = () => {\\n  return (\\n    <div>\\n      <h2>Vegetables:</h2>\\n      <ul>\\n        <li>Brussel Sprouts</li>\\n        <li>Broccoli</li>\\n        <li>Squash</li>\\n      </ul>\\n    </div>\\n  );\\n};\\n\",\"tail\":\"\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/write-a-react-component-from-scratch\",\"id\":\"5a24c314108439a4d4036167\"},\"slug\":\"/front-end-libraries/react/render-a-class-component-to-the-dom\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---front-end-libraries-react-render-a-class-component-to-the-dom-562985896c51112122d5.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Render a Class Component to the DOM\",\"description\":[\"你可能还记得在早期挑战中使用 ReactDOM API 将 JSX 元素渲染到 DOM，这与渲染 React 组件的过程十分相似。过去的几个挑战主要针对组件和组合，因此渲染是在幕后为你完成的。但是，如果不调用 ReactDOM API，你编写的任何 React 代码都不会渲染到 DOM。\",\"以下是语法的复习：<code>ReactDOM.render(componentToRender, targetNode)</code>。第一个参数是要渲染的 React 组件。第二个参数是要在其中渲染该组件的 DOM 节点。\",\"React 组件传递到<code>ReactDOM.render()</code>与 JSX 元素略有不同。对于 JSX 元素，你传入的是要渲染的元素的名称。但是，对于 React 组件，你需要使用与渲染嵌套组件相同的语法，例如<code>ReactDOM.render(&lt;ComponentToRender /&gt;, targetNode)</code>。你可以将此语法用于ES6类组件和函数组件。\",\"<hr>\",\"在后台为你定义了<code>Fruits</code>和<code>Vegetables</code>组件。将两个组件渲染为<code>TypesOfFood</code>组件的子组件，然后将<code>TypesOfFood</code>渲染到 DOM 节点，在这个挑战中，请渲染到 id 为<code>challenge-node</code>的<code>div</code>中。\"],\"challengeType\":6,\"fields\":{\"slug\":\"/front-end-libraries/react/render-a-class-component-to-the-dom\",\"blockName\":\"React\",\"tests\":[{\"text\":\"<code>TypesOfFood</code>组件应该返回单个<code>div</code>元素。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(TypesOfFood)); return mockedComponent.children().type() === 'div'; })(), '<code>TypesOfFood</code>组件应该返回单个<code>div</code>元素。');\"},{\"text\":\"<code>TypesOfFood</code>组件应该在<code>h1</code>元素之后渲染<code>Fruits</code>组件。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(TypesOfFood)); return mockedComponent.children().childAt(1).name() === 'Fruits'; })(), '<code>TypesOfFood</code>组件应该在<code>h1</code>元素之后渲染<code>Fruits</code>组件。');\"},{\"text\":\"<code>TypesOfFood</code>组件应该在<code>Fruits</code>组件之后渲染<code>Vegetables</code>组件。\",\"testString\":\"assert((function() { const mockedComponent = Enzyme.mount(React.createElement(TypesOfFood)); return mockedComponent.children().childAt(2).name() === 'Vegetables'; })(), '<code>TypesOfFood</code>组件应该在<code>Fruits</code>组件之后渲染<code>Vegetables</code>组件。');\"},{\"text\":\"<code>TypesOfFood</code>组件应该渲染到 id 为<code>challenge-node</code>的<code>div</code>中。\",\"testString\":\"assert((function() { const html = document.getElementById('challenge-node').childNodes[0].innerHTML; return (html === '<h1>Types of Food:</h1><div><h2>Fruits:</h2><h4>Non-Citrus:</h4><ul><li>Apples</li><li>Blueberries</li><li>Strawberries</li><li>Bananas</li></ul><h4>Citrus:</h4><ul><li>Lemon</li><li>Lime</li><li>Orange</li><li>Grapefruit</li></ul></div><div><h2>Vegetables:</h2><ul><li>Brussel Sprouts</li><li>Broccoli</li><li>Squash</li></ul></div>'); })(), '<code>TypesOfFood</code>组件应该渲染到 id 为<code>challenge-node</code>的<code>div</code>中。');\"}]},\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"files\":{\"indexhtml\":null,\"indexjs\":null,\"indexjsx\":{\"key\":\"indexjsx\",\"ext\":\"jsx\",\"name\":\"index\",\"contents\":\"\\nclass TypesOfFood extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <h1>Types of Food:</h1>\\n        {/* change code below this line */}\\n\\n        {/* change code above this line */}\\n      </div>\\n    );\\n  }\\n};\\n\\n// change code below this line\\n\",\"head\":\"\\nconst Fruits = () => {\\n  return (\\n    <div>\\n      <h2>Fruits:</h2>\\n      <h4>Non-Citrus:</h4>\\n        <ul>\\n          <li>Apples</li>\\n          <li>Blueberries</li>\\n          <li>Strawberries</li>\\n          <li>Bananas</li>\\n        </ul>\\n      <h4>Citrus:</h4>\\n        <ul>\\n          <li>Lemon</li>\\n          <li>Lime</li>\\n          <li>Orange</li>\\n          <li>Grapefruit</li>\\n        </ul>\\n    </div>\\n  );\\n};\\nconst Vegetables = () => {\\n  return (\\n    <div>\\n      <h2>Vegetables:</h2>\\n      <ul>\\n        <li>Brussel Sprouts</li>\\n        <li>Broccoli</li>\\n        <li>Squash</li>\\n      </ul>\\n    </div>\\n  );\\n};\\n\",\"tail\":\"\"}}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":\"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>\",\"required\":[{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react@16.4.0/umd/react.production.min.js\"},{\"link\":null,\"raw\":null,\"src\":\"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js\"}],\"nextChallengePath\":\"/front-end-libraries/react/write-a-react-component-from-scratch\",\"id\":\"5a24c314108439a4d4036167\"},\"slug\":\"/front-end-libraries/react/render-a-class-component-to-the-dom\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/front-end-libraries-react-render-a-class-component-to-the-dom.json\n// module id = 3592\n// module chunks = 237634530500162"],"sourceRoot":""}