{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-regular-expressions-match-everything-but-letters-and-numbers-aa5fe0c47375b455025f.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-match-everything-but-letters-and-numbers.json"],"names":["webpackJsonp","3995","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,2CAAAC,aAAA,uYAA2a,sDAAAC,cAAA,EAAAC,QAAwHC,KAAA,0GAAAC,UAAA,sBAAAC,QAA6JC,KAAA,sBAAAC,WAAA,4DAAsGD,KAAA,iFAAAC,WAAA,6KAAsRD,KAAA,oFAAAC,WAAA,mLAA+RD,KAAA,gFAAAC,WAAA,2KAAmRD,KAAA,6FAAAC,WAAA,sMAA0TC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,kKAAuNC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,mFAAAC,GAAA,4BAAoLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-regular-expressions-match-everything-but-letters-and-numbers-aa5fe0c47375b455025f.js","sourcesContent":["webpackJsonp([70670556873086],{\n\n/***/ 3995:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Match Everything But Letters and Numbers\",\"description\":[\"你已经了解到可以使用缩写<code>\\\\w</code>来匹配字母和数字<code>[A-Za-z0-9_]</code>。不过，有可能你想要搜寻的匹配模式与字母数字相反。\",\"你可以使用<code>\\\\W</code>搜寻和<code>\\\\w</code>相反的匹配模式。注意，相反匹配模式使用大写字母。此缩写与<code>[^A-Za-z0-9_]</code>是一样的。\",\"<blockquote>let shortHand = /\\\\W/;<br>let numbers = \\\"42%\\\";<br>let sentence = \\\"Coding!\\\";<br>numbers.match(shortHand); // Returns [\\\"%\\\"]<br>sentence.match(shortHand); // Returns [\\\"!\\\"]<br></blockquote>\",\"<hr>\",\"使用缩写<code>\\\\W</code>来计算不同引号和字符串中非字母数字字符的数量。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-everything-but-letters-and-numbers\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用全局状态修正符。\",\"testString\":\"assert(nonAlphabetRegex.global, '你的正则表达式应该使用全局状态修正符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"The five boxing wizards jump quickly.\\\"</code>中匹配到 6 个非字母数字字符。\",\"testString\":\"assert(\\\"The five boxing wizards jump quickly.\\\".match(nonAlphabetRegex).length == 6, '你的正则表达式应该在<code>\\\"The five boxing wizards jump quickly.\\\"</code>中匹配到 6 个非字母数字字符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"Pack my box with five dozen liquor jugs.\\\"</code>中匹配到 8 个非字母数字字符。\",\"testString\":\"assert(\\\"Pack my box with five dozen liquor jugs.\\\".match(nonAlphabetRegex).length == 8, '你的正则表达式应该在<code>\\\"Pack my box with five dozen liquor jugs.\\\"</code>中匹配到 8 个非字母数字字符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"How vexingly quick daft zebras jump!\\\"</code>中匹配到 6 个非字母数字字符。\",\"testString\":\"assert(\\\"How vexingly quick daft zebras jump!\\\".match(nonAlphabetRegex).length == 6, '你的正则表达式应该在<code>\\\"How vexingly quick daft zebras jump!\\\"</code>中匹配到 6 个非字母数字字符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ.\\\"</code>中匹配到 12 个非字母数字字符。\",\"testString\":\"assert(\\\"123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ.\\\".match(nonAlphabetRegex).length == 12, '你的正则表达式应该在<code>\\\"123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ.\\\"</code>中匹配到 12 个非字母数字字符。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let quoteSample = \\\"The five boxing wizards jump quickly.\\\";\\nlet nonAlphabetRegex = /change/; // 修改这一行\\nlet result = quoteSample.match(nonAlphabetRegex).length;\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers\",\"id\":\"587d7db8367417b2b2512ba0\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-everything-but-letters-and-numbers\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-regular-expressions-match-everything-but-letters-and-numbers-aa5fe0c47375b455025f.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Match Everything But Letters and Numbers\",\"description\":[\"你已经了解到可以使用缩写<code>\\\\w</code>来匹配字母和数字<code>[A-Za-z0-9_]</code>。不过，有可能你想要搜寻的匹配模式与字母数字相反。\",\"你可以使用<code>\\\\W</code>搜寻和<code>\\\\w</code>相反的匹配模式。注意，相反匹配模式使用大写字母。此缩写与<code>[^A-Za-z0-9_]</code>是一样的。\",\"<blockquote>let shortHand = /\\\\W/;<br>let numbers = \\\"42%\\\";<br>let sentence = \\\"Coding!\\\";<br>numbers.match(shortHand); // Returns [\\\"%\\\"]<br>sentence.match(shortHand); // Returns [\\\"!\\\"]<br></blockquote>\",\"<hr>\",\"使用缩写<code>\\\\W</code>来计算不同引号和字符串中非字母数字字符的数量。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-everything-but-letters-and-numbers\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用全局状态修正符。\",\"testString\":\"assert(nonAlphabetRegex.global, '你的正则表达式应该使用全局状态修正符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"The five boxing wizards jump quickly.\\\"</code>中匹配到 6 个非字母数字字符。\",\"testString\":\"assert(\\\"The five boxing wizards jump quickly.\\\".match(nonAlphabetRegex).length == 6, '你的正则表达式应该在<code>\\\"The five boxing wizards jump quickly.\\\"</code>中匹配到 6 个非字母数字字符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"Pack my box with five dozen liquor jugs.\\\"</code>中匹配到 8 个非字母数字字符。\",\"testString\":\"assert(\\\"Pack my box with five dozen liquor jugs.\\\".match(nonAlphabetRegex).length == 8, '你的正则表达式应该在<code>\\\"Pack my box with five dozen liquor jugs.\\\"</code>中匹配到 8 个非字母数字字符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"How vexingly quick daft zebras jump!\\\"</code>中匹配到 6 个非字母数字字符。\",\"testString\":\"assert(\\\"How vexingly quick daft zebras jump!\\\".match(nonAlphabetRegex).length == 6, '你的正则表达式应该在<code>\\\"How vexingly quick daft zebras jump!\\\"</code>中匹配到 6 个非字母数字字符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ.\\\"</code>中匹配到 12 个非字母数字字符。\",\"testString\":\"assert(\\\"123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ.\\\".match(nonAlphabetRegex).length == 12, '你的正则表达式应该在<code>\\\"123 456 7890 ABC def GHI jkl MNO pqr STU vwx YZ.\\\"</code>中匹配到 12 个非字母数字字符。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let quoteSample = \\\"The five boxing wizards jump quickly.\\\";\\nlet nonAlphabetRegex = /change/; // 修改这一行\\nlet result = quoteSample.match(nonAlphabetRegex).length;\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers\",\"id\":\"587d7db8367417b2b2512ba0\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-everything-but-letters-and-numbers\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-match-everything-but-letters-and-numbers.json\n// module id = 3995\n// module chunks = 70670556873086"],"sourceRoot":""}