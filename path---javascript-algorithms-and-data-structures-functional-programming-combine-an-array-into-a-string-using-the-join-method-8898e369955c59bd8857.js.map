{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-functional-programming-combine-an-array-into-a-string-using-the-join-method-8898e369955c59bd8857.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-functional-programming-combine-an-array-into-a-string-using-the-join-method.json"],"names":["webpackJsonp","3904","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,uDAAAC,aAAA,sLAA2N,0LAAAC,cAAA,EAAAC,QAA2QC,KAAA,yHAAAC,UAAA,yBAAAC,QAA+KC,KAAA,0BAAAC,WAAA,+DAA6GD,KAAA,8BAAAC,WAAA,uEAAyHD,KAAA,+DAAAC,WAAA,2IAAoOD,KAAA,mGAAAC,WAAA,2LAA4TD,KAAA,mHAAAC,WAAA,2NAA4WD,KAAA,uGAAAC,WAAA,oMAAwUC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,wHAA6KC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,iIAAAC,GAAA,4BAAkOrB,KAAA","file":"path---javascript-algorithms-and-data-structures-functional-programming-combine-an-array-into-a-string-using-the-join-method-8898e369955c59bd8857.js","sourcesContent":["webpackJsonp([216146537435800],{\n\n/***/ 3904:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Combine an Array into a String Using the join Method\",\"description\":[\"<code>join</code>方法用来把数组中的所有元素放入一个字符串，并通过指定的分隔符参数进行分隔。\",\"举个例子：\",\"<blockquote>var arr = [\\\"Hello\\\", \\\"World\\\"];<br>var str = arr.join(\\\" \\\");<br>// Sets str to \\\"Hello World\\\"</blockquote>\",\"<hr>\",\"在函数<code>sentensify</code>内用<code>join</code>方法（及其他方法）用字符串<code>str</code>中的单词造句，这个函数应返回一个字符串。举个例子，\\\"I-like-Star-Wars\\\" 会被转换成 \\\"I like Star Wars\\\"。在此挑战中请勿使用<code>replace</code>方法。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-an-array-into-a-string-using-the-join-method\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"应使用<code>join</code>方法。\",\"testString\":\"assert(code.match(/\\\\.join/g), '应使用<code>join</code>方法。');\"},{\"text\":\"不能使用<code>replace</code>方法。\",\"testString\":\"assert(!code.match(/\\\\.replace/g), '不能使用<code>replace</code>方法。');\"},{\"text\":\"<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回一个字符串\",\"testString\":\"assert(typeof sentensify(\\\"May-the-force-be-with-you\\\") === \\\"string\\\", '<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回一个字符串');\"},{\"text\":\"<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回<code>\\\"May the force be with you\\\"</code>。\",\"testString\":\"assert(sentensify(\\\"May-the-force-be-with-you\\\") === \\\"May the force be with you\\\", '<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回<code>\\\"May the force be with you\\\"</code>。');\"},{\"text\":\"<code>sentensify(\\\"The.force.is.strong.with.this.one\\\")</code>应返回<code>\\\"The force is strong with this one\\\"</code>。\",\"testString\":\"assert(sentensify(\\\"The.force.is.strong.with.this.one\\\") === \\\"The force is strong with this one\\\", '<code>sentensify(\\\"The.force.is.strong.with.this.one\\\")</code>应返回<code>\\\"The force is strong with this one\\\"</code>。');\"},{\"text\":\"<code>sentensify(\\\"There,has,been,an,awakening\\\")</code>应返回<code>\\\"There has been an awakening\\\"</code>。\",\"testString\":\"assert(sentensify(\\\"There,has,been,an,awakening\\\") === \\\"There has been an awakening\\\", '<code>sentensify(\\\"There,has,been,an,awakening\\\")</code>应返回<code>\\\"There has been an awakening\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sentensify(str) {\\n  // 请在本行以下添加你的代码\\n  \\n  \\n  // 请在本行以上添加你的代码\\n}\\nsentensify(\\\"May-the-force-be-with-you\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\",\"id\":\"587d7daa367417b2b2512b6c\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-an-array-into-a-string-using-the-join-method\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-functional-programming-combine-an-array-into-a-string-using-the-join-method-8898e369955c59bd8857.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Combine an Array into a String Using the join Method\",\"description\":[\"<code>join</code>方法用来把数组中的所有元素放入一个字符串，并通过指定的分隔符参数进行分隔。\",\"举个例子：\",\"<blockquote>var arr = [\\\"Hello\\\", \\\"World\\\"];<br>var str = arr.join(\\\" \\\");<br>// Sets str to \\\"Hello World\\\"</blockquote>\",\"<hr>\",\"在函数<code>sentensify</code>内用<code>join</code>方法（及其他方法）用字符串<code>str</code>中的单词造句，这个函数应返回一个字符串。举个例子，\\\"I-like-Star-Wars\\\" 会被转换成 \\\"I like Star Wars\\\"。在此挑战中请勿使用<code>replace</code>方法。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-an-array-into-a-string-using-the-join-method\",\"blockName\":\"Functional Programming\",\"tests\":[{\"text\":\"应使用<code>join</code>方法。\",\"testString\":\"assert(code.match(/\\\\.join/g), '应使用<code>join</code>方法。');\"},{\"text\":\"不能使用<code>replace</code>方法。\",\"testString\":\"assert(!code.match(/\\\\.replace/g), '不能使用<code>replace</code>方法。');\"},{\"text\":\"<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回一个字符串\",\"testString\":\"assert(typeof sentensify(\\\"May-the-force-be-with-you\\\") === \\\"string\\\", '<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回一个字符串');\"},{\"text\":\"<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回<code>\\\"May the force be with you\\\"</code>。\",\"testString\":\"assert(sentensify(\\\"May-the-force-be-with-you\\\") === \\\"May the force be with you\\\", '<code>sentensify(\\\"May-the-force-be-with-you\\\")</code>应返回<code>\\\"May the force be with you\\\"</code>。');\"},{\"text\":\"<code>sentensify(\\\"The.force.is.strong.with.this.one\\\")</code>应返回<code>\\\"The force is strong with this one\\\"</code>。\",\"testString\":\"assert(sentensify(\\\"The.force.is.strong.with.this.one\\\") === \\\"The force is strong with this one\\\", '<code>sentensify(\\\"The.force.is.strong.with.this.one\\\")</code>应返回<code>\\\"The force is strong with this one\\\"</code>。');\"},{\"text\":\"<code>sentensify(\\\"There,has,been,an,awakening\\\")</code>应返回<code>\\\"There has been an awakening\\\"</code>。\",\"testString\":\"assert(sentensify(\\\"There,has,been,an,awakening\\\") === \\\"There has been an awakening\\\", '<code>sentensify(\\\"There,has,been,an,awakening\\\")</code>应返回<code>\\\"There has been an awakening\\\"</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sentensify(str) {\\n  // 请在本行以下添加你的代码\\n  \\n  \\n  // 请在本行以上添加你的代码\\n}\\nsentensify(\\\"May-the-force-be-with-you\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/apply-functional-programming-to-convert-strings-to-url-slugs\",\"id\":\"587d7daa367417b2b2512b6c\"},\"slug\":\"/javascript-algorithms-and-data-structures/functional-programming/combine-an-array-into-a-string-using-the-join-method\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-functional-programming-combine-an-array-into-a-string-using-the-join-method.json\n// module id = 3904\n// module chunks = 216146537435800"],"sourceRoot":""}