{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-primes-f561108f482f931f7940.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-primes.json"],"names":["webpackJsonp","3944","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iBAAAC,aAAA,2PAAAC,cAAA,EAAAC,QAA+TC,KAAA,6FAAAC,UAAA,mCAAAC,QAA6JC,KAAA,sCAAAC,WAAA,6FAAuJD,KAAA,qCAAAC,WAAA,+EAAwID,KAAA,yCAAAC,WAAA,wFAAoJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,gEAAmHC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,uGAAAC,GAAA,4BAAwMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-primes-f561108f482f931f7940.js","sourcesContent":["webpackJsonp([18453980361254],{\n\n/***/ 3944:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Sum All Primes\",\"description\":[\"在这道题目中，我们需要写一个函数，它接收一个数字参数<code>num</code>，返回值为不大于这个数字的所有质数之和。\",\"质数是大于 1 且仅可以被 1 和自己整除的数。比如，2 就是一个质数，因为它只可以被 1 和 2（它本身）整除。\",\"注意，传入函数的<code>num</code>不一定是质数。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-primes\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>sumPrimes(10)</code>应该返回一个数字。\",\"testString\":\"assert.deepEqual(typeof sumPrimes(10), 'number', '<code>sumPrimes(10)</code>应该返回一个数字。');\"},{\"text\":\"<code>sumPrimes(10)</code>应该返回 17。\",\"testString\":\"assert.deepEqual(sumPrimes(10), 17, '<code>sumPrimes(10)</code>应该返回 17。');\"},{\"text\":\"<code>sumPrimes(977)</code>应该返回 73156。\",\"testString\":\"assert.deepEqual(sumPrimes(977), 73156, '<code>sumPrimes(977)</code>应该返回 73156。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sumPrimes(num) {\\n  return num;\\n}\\n\\nsumPrimes(10);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/smallest-common-multiple\",\"id\":\"a3bfc1673c0526e06d3ac698\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-primes\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-primes-f561108f482f931f7940.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Sum All Primes\",\"description\":[\"在这道题目中，我们需要写一个函数，它接收一个数字参数<code>num</code>，返回值为不大于这个数字的所有质数之和。\",\"质数是大于 1 且仅可以被 1 和自己整除的数。比如，2 就是一个质数，因为它只可以被 1 和 2（它本身）整除。\",\"注意，传入函数的<code>num</code>不一定是质数。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-primes\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>sumPrimes(10)</code>应该返回一个数字。\",\"testString\":\"assert.deepEqual(typeof sumPrimes(10), 'number', '<code>sumPrimes(10)</code>应该返回一个数字。');\"},{\"text\":\"<code>sumPrimes(10)</code>应该返回 17。\",\"testString\":\"assert.deepEqual(sumPrimes(10), 17, '<code>sumPrimes(10)</code>应该返回 17。');\"},{\"text\":\"<code>sumPrimes(977)</code>应该返回 73156。\",\"testString\":\"assert.deepEqual(sumPrimes(977), 73156, '<code>sumPrimes(977)</code>应该返回 73156。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sumPrimes(num) {\\n  return num;\\n}\\n\\nsumPrimes(10);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/smallest-common-multiple\",\"id\":\"a3bfc1673c0526e06d3ac698\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-primes\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-primes.json\n// module id = 3944\n// module chunks = 18453980361254"],"sourceRoot":""}