{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-9-special-pythagorean-triplet-95525e2e8c72caee6fc9.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-9-special-pythagorean-triplet.json"],"names":["webpackJsonp","3330","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,yCAAAC,aAAA,8LAAsK,uJAAAC,cAAA,EAAAC,QAA2QC,KAAA,6EAAAC,UAAA,gBAAAC,QAA0HC,KAAA,6DAAAC,WAAA,iIAAkND,KAAA,sDAAAC,WAAA,mHAA6LD,KAAA,yDAAAC,WAAA,0HAAsMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,+HAAkLC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,sEAAAC,GAAA,4BAAuKrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-9-special-pythagorean-triplet-95525e2e8c72caee6fc9.js","sourcesContent":["webpackJsonp([127183449204738],{\n\n/***/ 3330:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 9: Special Pythagorean triplet\",\"description\":[\"毕达哥拉斯三元组是三个自然数 <var>a</var> < <var>b</var> < <var>c</var> 组成的集合，并满足\",\"<div style='text-align: center;'><var>a</var><sup>2</sup> + <var>b</var><sup>2</sup> = <var>c</var><sup>2</sup></div>\",\"例如 3<sup>2</sup> + 4<sup>2</sup> = 9 + 16 = 25 = 5<sup>2</sup>。\",\"有且只有一个毕达哥拉斯三元组满足 <var>a</var> + <var>b</var> + <var>c</var> = 1000。求这个三元组的乘积 abc。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-9-special-pythagorean-triplet\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>specialPythagoreanTriplet(1000)</code>应该返回 31875000。\",\"testString\":\"assert.strictEqual(specialPythagoreanTriplet(1000), 31875000, '<code>specialPythagoreanTriplet(1000)</code>应该返回 31875000。');\"},{\"text\":\"<code>specialPythagoreanTriplet(24)</code>应该返回 480。\",\"testString\":\"assert.strictEqual(specialPythagoreanTriplet(24), 480, '<code>specialPythagoreanTriplet(24)</code>应该返回 480。');\"},{\"text\":\"<code>specialPythagoreanTriplet(120)</code>应该返回 49920。\",\"testString\":\"assert.strictEqual(specialPythagoreanTriplet(120), 49920, '<code>specialPythagoreanTriplet(120)</code>应该返回 49920。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function specialPythagoreanTriplet(n) {\\n let sumOfabc = n;\\n // 祝你好运！\\n return true;\\n}\\n\\nspecialPythagoreanTriplet(1000);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-10-summation-of-primes\",\"id\":\"5900f3761000cf542c50fe88\"},\"slug\":\"/coding-interview-prep/project-euler/problem-9-special-pythagorean-triplet\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-9-special-pythagorean-triplet-95525e2e8c72caee6fc9.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 9: Special Pythagorean triplet\",\"description\":[\"毕达哥拉斯三元组是三个自然数 <var>a</var> < <var>b</var> < <var>c</var> 组成的集合，并满足\",\"<div style='text-align: center;'><var>a</var><sup>2</sup> + <var>b</var><sup>2</sup> = <var>c</var><sup>2</sup></div>\",\"例如 3<sup>2</sup> + 4<sup>2</sup> = 9 + 16 = 25 = 5<sup>2</sup>。\",\"有且只有一个毕达哥拉斯三元组满足 <var>a</var> + <var>b</var> + <var>c</var> = 1000。求这个三元组的乘积 abc。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-9-special-pythagorean-triplet\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>specialPythagoreanTriplet(1000)</code>应该返回 31875000。\",\"testString\":\"assert.strictEqual(specialPythagoreanTriplet(1000), 31875000, '<code>specialPythagoreanTriplet(1000)</code>应该返回 31875000。');\"},{\"text\":\"<code>specialPythagoreanTriplet(24)</code>应该返回 480。\",\"testString\":\"assert.strictEqual(specialPythagoreanTriplet(24), 480, '<code>specialPythagoreanTriplet(24)</code>应该返回 480。');\"},{\"text\":\"<code>specialPythagoreanTriplet(120)</code>应该返回 49920。\",\"testString\":\"assert.strictEqual(specialPythagoreanTriplet(120), 49920, '<code>specialPythagoreanTriplet(120)</code>应该返回 49920。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function specialPythagoreanTriplet(n) {\\n let sumOfabc = n;\\n // 祝你好运！\\n return true;\\n}\\n\\nspecialPythagoreanTriplet(1000);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-10-summation-of-primes\",\"id\":\"5900f3761000cf542c50fe88\"},\"slug\":\"/coding-interview-prep/project-euler/problem-9-special-pythagorean-triplet\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-9-special-pythagorean-triplet.json\n// module id = 3330\n// module chunks = 127183449204738"],"sourceRoot":""}