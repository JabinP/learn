webpackJsonp([0x5f58ad4817a1],{2793:function(e,o){e.exports={data:{challengeNode:{title:"Delete Many Documents with model.remove()",guideUrl:null,description:["<code>Model.remove()</code> 可用于删除与给定条件匹配的所有 document。 删除所有叫 “Mary” 的人的时候 , 使用 <code>Model.remove()</code>。 通过一个设置了 “name” 字段的 ducument 作为查询条件，当然还需要一个回调函数。","注意: <code>Model.remove()</code> 不会返回被删除的 document, 但是会返回一个包含操作结果和受影响的 item 数量的 JSON 对象。 不要忘记将它传递给 <code>done()</code> 回调，因为我们在测试中使用它。"],challengeType:2,fields:{blockName:"MongoDB and Mongoose",slug:"/apis-and-microservices/mongodb-and-mongoose/delete-many-documents-with-model-remove",tests:[{text:"一次性成功的删除多个 item(项目)。",testString:"getUserInput => $.ajax({url: getUserInput('url') +'/_api/remove-many-people', type:'POST', contentType:'application/json', data: JSON.stringify([{name:'Mary', age: 16, favoriteFoods: ['lollipop']}, {name:'Mary', age: 21, favoriteFoods: ['steak']}])}).then(data => { assert.isTrue(!!data.ok,'The mongo stats are not what expected'); assert.equal(data.n, 2,'The number of items affected is not what expected'); assert.equal(data.count, 0,'the db items count is not what expected'); }, xhr => { throw new Error(xhr.responseText); })"}]}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/apis-and-microservices/mongodb-and-mongoose/chain-search-query-helpers-to-narrow-search-results",id:"587d7fb8367417b2b2512c11"},slug:"/apis-and-microservices/mongodb-and-mongoose/delete-many-documents-with-model-remove"}}}});
//# sourceMappingURL=path---apis-and-microservices-mongodb-and-mongoose-delete-many-documents-with-model-remove-434b0cb3aa76026b1533.js.map