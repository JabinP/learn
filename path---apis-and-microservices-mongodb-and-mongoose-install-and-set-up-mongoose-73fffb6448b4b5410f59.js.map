{"version":3,"sources":["webpack:///path---apis-and-microservices-mongodb-and-mongoose-install-and-set-up-mongoose-73fffb6448b4b5410f59.js","webpack:///./.cache/json/apis-and-microservices-mongodb-and-mongoose-install-and-set-up-mongoose.json"],"names":["webpackJsonp","2795","module","exports","data","challengeNode","title","guideUrl","description","challengeType","fields","blockName","slug","tests","text","testString","pathContext","challengeMeta","introPath","template","required","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,8BAAAC,SAAA,KAAAC,aAAA,oLAAAC,cAAA,EAAAC,QAAqRC,UAAA,uBAAAC,KAAA,2EAAAC,QAA+HC,KAAA,sCAAAC,WAAA,oOAAgSD,KAAA,uCAAAC,WAAA,qOAAkSD,KAAA,wBAAAC,WAAA,wMAAqPC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAC,YAAAC,kBAAA,8DAAAC,GAAA,4BAA+JV,KAAA","file":"path---apis-and-microservices-mongodb-and-mongoose-install-and-set-up-mongoose-73fffb6448b4b5410f59.js","sourcesContent":["webpackJsonp([197169584024497],{\n\n/***/ 2795:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Install and Set Up Mongoose\",\"guideUrl\":null,\"description\":[\"在 package.json 文件中添加 MongoDB 和 Mongoose 依赖，将 mLab 数据库的 URI 作为 MONGO_URI 变量存储在私有 .env 文件中。然后<code>require('mongoose')</code>，使用<code>mongoose.connect(<Your URI>)</code>命令来连接数据库。\"],\"challengeType\":2,\"fields\":{\"blockName\":\"MongoDB and Mongoose\",\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/install-and-set-up-mongoose\",\"tests\":[{\"text\":\"在 package.json 文件中应该有 \\\"mongodb\\\" 依赖。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/file/package.json').then(data => { var packJson = JSON.parse(data);     assert.property(packJson.dependencies, 'mongodb'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"在 package.json 文件中应该有 \\\"mongoose\\\" 依赖。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/file/package.json').then(data => { var packJson = JSON.parse(data);     assert.property(packJson.dependencies, 'mongoose'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"\\\"mongoose\\\" 应该已经连接数据库。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/is-mongoose-ok').then(data => {assert.isTrue(data.isMongooseOk, 'mongoose is not connected')}, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/apis-and-microservices/mongodb-and-mongoose/create-a-model\",\"id\":\"587d7fb6367417b2b2512c06\"},\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/install-and-set-up-mongoose\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---apis-and-microservices-mongodb-and-mongoose-install-and-set-up-mongoose-73fffb6448b4b5410f59.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Install and Set Up Mongoose\",\"guideUrl\":null,\"description\":[\"在 package.json 文件中添加 MongoDB 和 Mongoose 依赖，将 mLab 数据库的 URI 作为 MONGO_URI 变量存储在私有 .env 文件中。然后<code>require('mongoose')</code>，使用<code>mongoose.connect(<Your URI>)</code>命令来连接数据库。\"],\"challengeType\":2,\"fields\":{\"blockName\":\"MongoDB and Mongoose\",\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/install-and-set-up-mongoose\",\"tests\":[{\"text\":\"在 package.json 文件中应该有 \\\"mongodb\\\" 依赖。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/file/package.json').then(data => { var packJson = JSON.parse(data);     assert.property(packJson.dependencies, 'mongodb'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"在 package.json 文件中应该有 \\\"mongoose\\\" 依赖。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/file/package.json').then(data => { var packJson = JSON.parse(data);     assert.property(packJson.dependencies, 'mongoose'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"\\\"mongoose\\\" 应该已经连接数据库。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/is-mongoose-ok').then(data => {assert.isTrue(data.isMongooseOk, 'mongoose is not connected')}, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/apis-and-microservices/mongodb-and-mongoose/create-a-model\",\"id\":\"587d7fb6367417b2b2512c06\"},\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/install-and-set-up-mongoose\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/apis-and-microservices-mongodb-and-mongoose-install-and-set-up-mongoose.json\n// module id = 2795\n// module chunks = 197169584024497"],"sourceRoot":""}