webpackJsonp([0x82669a95fd3c],{2800:function(e,o){e.exports={data:{challengeNode:{title:"Use model.findOne() to Return a Single Matching Document from Your Database",guideUrl:null,description:["<code>Model.findOne()</code>表现像<code>Model.find()</code>，但是它仅仅返回一个 document（而不是一个数组），即使数据库里有很多条 item（项目）。当你按声明成<code>unique</code>的属性进行搜索时，<code>Model.findOne()</code>尤其有用。把食物作为<code>Model.findOne() -> Person</code>的参数，来找到一个在她的爱好中有某一食物的人。"],challengeType:2,fields:{blockName:"MongoDB and Mongoose",slug:"/apis-and-microservices/mongodb-and-mongoose/use-model-findone-to-return-a-single-matching-document-from-your-database",tests:[{text:"成功找到一个 item（项目）。",testString:"getUserInput => $.post(getUserInput('url') + '/_api/find-one-by-food', {name: 'Gary', age: 46, favoriteFoods: ['chicken salad']}).then(data => { assert.equal(data.name, 'Gary', 'item.name is not what expected'); assert.deepEqual(data.favoriteFoods, ['chicken salad'], 'item.favoriteFoods is not what expected'); assert.equal(data.__v, 0, 'The item should be not previously edited'); }, xhr => { throw new Error(xhr.responseText); })"}]}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/apis-and-microservices/mongodb-and-mongoose/use-model-findbyid-to-search-your-database-by-id",id:"587d7fb7367417b2b2512c0c"},slug:"/apis-and-microservices/mongodb-and-mongoose/use-model-findone-to-return-a-single-matching-document-from-your-database"}}}});
//# sourceMappingURL=path---apis-and-microservices-mongodb-and-mongoose-use-model-findone-to-return-a-single-matching-document-from-your-database-ecf96de9d74f05babb5b.js.map