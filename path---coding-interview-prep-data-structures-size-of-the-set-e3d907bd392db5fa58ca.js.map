{"version":3,"sources":["webpack:///path---coding-interview-prep-data-structures-size-of-the-set-e3d907bd392db5fa58ca.js","webpack:///./.cache/json/coding-interview-prep-data-structures-size-of-the-set.json"],"names":["webpackJsonp","2853","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,kBAAAC,aAAA,qFAAAC,cAAA,EAAAC,QAA0JC,KAAA,yDAAAC,UAAA,kBAAAC,QAAwGC,KAAA,0CAAAC,WAAA,uIAAqMD,KAAA,iCAAAC,WAAA,8JAAkNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,6zBAAg3BC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,qEAAAC,GAAA,4BAAsKrB,KAAA","file":"path---coding-interview-prep-data-structures-size-of-the-set-e3d907bd392db5fa58ca.js","sourcesContent":["webpackJsonp([10401958993694],{\n\n/***/ 2853:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Size of the Set\",\"description\":[\"在本次练习中，我们需要为集合创建一个<code>size</code>方法，该方法名为<code>this.size</code>，调用该方法时会返回集合的长度。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/coding-interview-prep/data-structures/size-of-the-set\",\"blockName\":\"Data Structures\",\"tests\":[{\"text\":\"<code>Set</code>应该有<code>size</code>方法。\",\"testString\":\"assert((function(){var test = new Set(); return (typeof test.size === 'function')}()), '<code>Set</code>应该有<code>size</code>方法。');\"},{\"text\":\"<code>size</code>应该返回集合中元素的个数。\",\"testString\":\"assert((function(){var test = new Set(); test.add('a');test.add('b');test.remove('a');return (test.size() === 1)}()), '<code>size</code>应该返回集合中元素的个数。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function Set() {\\n    // collection 变量用来存储集合中的元素\\n    var collection = [];\\n    // 当集合中存在 element 元素时返回 true 否则返回 false \\n    this.has = function(element) {\\n        return (collection.indexOf(element) !== -1);\\n    };\\n    // 该方法会返回集合内所有元素\\n    this.values = function() {\\n        return collection;\\n    };\\n    // 该方法会把 element 添加到集合中\\n    this.add = function(element) {\\n        if(!this.has(element)){\\n            collection.push(element);\\n            return true;\\n        }\\n        return false;\\n    };\\n    // 该方法用于从集合中移除 element 元素\\n    this.remove = function(element) {\\n        if(this.has(element)){\\n           var index = collection.indexOf(element);\\n            collection.splice(index,1);\\n            return true;\\n        }\\n        return false;\\n    };\\n    // 请把你的代码写在这条注释以下\\n    // 请把你的代码写在这条注释以上\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/data-structures/perform-a-union-on-two-sets\",\"id\":\"8d1923c8c441eddfaeb5bdef\"},\"slug\":\"/coding-interview-prep/data-structures/size-of-the-set\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-data-structures-size-of-the-set-e3d907bd392db5fa58ca.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Size of the Set\",\"description\":[\"在本次练习中，我们需要为集合创建一个<code>size</code>方法，该方法名为<code>this.size</code>，调用该方法时会返回集合的长度。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/coding-interview-prep/data-structures/size-of-the-set\",\"blockName\":\"Data Structures\",\"tests\":[{\"text\":\"<code>Set</code>应该有<code>size</code>方法。\",\"testString\":\"assert((function(){var test = new Set(); return (typeof test.size === 'function')}()), '<code>Set</code>应该有<code>size</code>方法。');\"},{\"text\":\"<code>size</code>应该返回集合中元素的个数。\",\"testString\":\"assert((function(){var test = new Set(); test.add('a');test.add('b');test.remove('a');return (test.size() === 1)}()), '<code>size</code>应该返回集合中元素的个数。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function Set() {\\n    // collection 变量用来存储集合中的元素\\n    var collection = [];\\n    // 当集合中存在 element 元素时返回 true 否则返回 false \\n    this.has = function(element) {\\n        return (collection.indexOf(element) !== -1);\\n    };\\n    // 该方法会返回集合内所有元素\\n    this.values = function() {\\n        return collection;\\n    };\\n    // 该方法会把 element 添加到集合中\\n    this.add = function(element) {\\n        if(!this.has(element)){\\n            collection.push(element);\\n            return true;\\n        }\\n        return false;\\n    };\\n    // 该方法用于从集合中移除 element 元素\\n    this.remove = function(element) {\\n        if(this.has(element)){\\n           var index = collection.indexOf(element);\\n            collection.splice(index,1);\\n            return true;\\n        }\\n        return false;\\n    };\\n    // 请把你的代码写在这条注释以下\\n    // 请把你的代码写在这条注释以上\\n}\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/data-structures/perform-a-union-on-two-sets\",\"id\":\"8d1923c8c441eddfaeb5bdef\"},\"slug\":\"/coding-interview-prep/data-structures/size-of-the-set\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-data-structures-size-of-the-set.json\n// module id = 2853\n// module chunks = 10401958993694"],"sourceRoot":""}