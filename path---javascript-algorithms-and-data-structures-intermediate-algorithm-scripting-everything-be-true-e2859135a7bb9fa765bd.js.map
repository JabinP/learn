{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-everything-be-true-e2859135a7bb9fa765bd.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-everything-be-true.json"],"names":["webpackJsonp","3931","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,qBAAAC,aAAA,kdAAAC,cAAA,EAAAC,QAA0hBC,KAAA,iGAAAC,UAAA,mCAAAC,QAAiKC,KAAA,0MAAyMC,WAAA,iZAA0gBD,KAAA,4LAAsLC,WAAA,qXAAueD,KAAA,mPAAyPC,WAAA,meAA6mBD,KAAA,2KAAwJC,WAAA,mVAAobD,KAAA,6LAA+KC,WAAA,uXAA+dD,KAAA,+EAA+CC,WAAA,2JAA+ND,KAAA,mGAAsEC,WAAA,mMAAgRD,KAAA,0GAA2EC,WAAA,iNAA0RD,KAAA,oGAAqEC,WAAA,sMAA8QC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,mPAAwUC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,iGAAAC,GAAA,4BAAkMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-everything-be-true-e2859135a7bb9fa765bd.js","sourcesContent":["webpackJsonp([4626407119600],{\n\n/***/ 3931:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Everything Be True\",\"description\":[\"在这道题目中，我们需要写一个函数，它接收两个参数。第一个参数为对象数组<code>collection</code>，第二个参数为一个字符串<code>pre</code>，代表对象的一个键（key）。我们需要检查对象数组中每个对象的<code>pre</code>属性对应的值是否都为 “真”（truthy）。如果是，则返回<code>true</code>，否则返回<code>false</code>。\",\"JavaScript 中，如果一个值在 Boolean 的上下文中（比如<code>if</code>语句）可以被执行为<code>true</code>，那么这个值就被认为是<code>truthy</code>的。\",\"注意，你可以选择使用<code>.</code>或<code>[]</code>来访问对象属性对应的值。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/everything-be-true\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>true</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\"), true, '<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>true</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\"), false, '<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 0}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 3}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 5}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 4}], \\\"age\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 2}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 0}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 5}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 4}], \\\"age\\\"), false, '<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 0}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 3}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 5}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 4}], \\\"age\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": null}], \\\"onBoat\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": null}], \\\"onBoat\\\"), false, '<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": null}], \\\"onBoat\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true, \\\"alias\\\": \\\"Repete\\\"}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": true}], \\\"onBoat\\\")</code>应该返回<code>true</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true, \\\"alias\\\": \\\"Repete\\\"}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": true}], \\\"onBoat\\\"), true, '<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true, \\\"alias\\\": \\\"Repete\\\"}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": true}], \\\"onBoat\\\")</code>应该返回<code>true</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"yes\\\"}], \\\"single\\\")</code>应该返回<code>true</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"yes\\\"}], \\\"single\\\"), true, '<code>truthCheck([{\\\"single\\\": \\\"yes\\\"}], \\\"single\\\")</code>应该返回<code>true</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"\\\"}, {\\\"single\\\": \\\"double\\\"}], \\\"single\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"\\\"}, {\\\"single\\\": \\\"double\\\"}], \\\"single\\\"), false, '<code>truthCheck([{\\\"single\\\": \\\"\\\"}, {\\\"single\\\": \\\"double\\\"}], \\\"single\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": undefined}], \\\"single\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": undefined}], \\\"single\\\"), false, '<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": undefined}], \\\"single\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": NaN}], \\\"single\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": NaN}], \\\"single\\\"), false, '<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": NaN}], \\\"single\\\")</code>应该返回<code>false</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function truthCheck(collection, pre) {\\n  // 每个都是真的吗？\\n  return pre;\\n}\\n\\ntruthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/arguments-optional\",\"id\":\"a10d2431ad0c6a099a4b8b52\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/everything-be-true\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-everything-be-true-e2859135a7bb9fa765bd.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Everything Be True\",\"description\":[\"在这道题目中，我们需要写一个函数，它接收两个参数。第一个参数为对象数组<code>collection</code>，第二个参数为一个字符串<code>pre</code>，代表对象的一个键（key）。我们需要检查对象数组中每个对象的<code>pre</code>属性对应的值是否都为 “真”（truthy）。如果是，则返回<code>true</code>，否则返回<code>false</code>。\",\"JavaScript 中，如果一个值在 Boolean 的上下文中（比如<code>if</code>语句）可以被执行为<code>true</code>，那么这个值就被认为是<code>truthy</code>的。\",\"注意，你可以选择使用<code>.</code>或<code>[]</code>来访问对象属性对应的值。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/everything-be-true\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>true</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\"), true, '<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>true</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\"), false, '<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 0}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 3}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 5}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 4}], \\\"age\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 2}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 0}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 5}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 4}], \\\"age\\\"), false, '<code>truthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 0}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\", \\\"age\\\": 3}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 5}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\", \\\"age\\\": 4}], \\\"age\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": null}], \\\"onBoat\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": null}], \\\"onBoat\\\"), false, '<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": null}], \\\"onBoat\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true, \\\"alias\\\": \\\"Repete\\\"}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": true}], \\\"onBoat\\\")</code>应该返回<code>true</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true, \\\"alias\\\": \\\"Repete\\\"}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": true}], \\\"onBoat\\\"), true, '<code>truthCheck([{\\\"name\\\": \\\"Pete\\\", \\\"onBoat\\\": true}, {\\\"name\\\": \\\"Repeat\\\", \\\"onBoat\\\": true, \\\"alias\\\": \\\"Repete\\\"}, {\\\"name\\\": \\\"FastFoward\\\", \\\"onBoat\\\": true}], \\\"onBoat\\\")</code>应该返回<code>true</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"yes\\\"}], \\\"single\\\")</code>应该返回<code>true</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"yes\\\"}], \\\"single\\\"), true, '<code>truthCheck([{\\\"single\\\": \\\"yes\\\"}], \\\"single\\\")</code>应该返回<code>true</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"\\\"}, {\\\"single\\\": \\\"double\\\"}], \\\"single\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"\\\"}, {\\\"single\\\": \\\"double\\\"}], \\\"single\\\"), false, '<code>truthCheck([{\\\"single\\\": \\\"\\\"}, {\\\"single\\\": \\\"double\\\"}], \\\"single\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": undefined}], \\\"single\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": undefined}], \\\"single\\\"), false, '<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": undefined}], \\\"single\\\")</code>应该返回<code>false</code>。');\"},{\"text\":\"<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": NaN}], \\\"single\\\")</code>应该返回<code>false</code>。\",\"testString\":\"assert.strictEqual(truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": NaN}], \\\"single\\\"), false, '<code>truthCheck([{\\\"single\\\": \\\"double\\\"}, {\\\"single\\\": NaN}], \\\"single\\\")</code>应该返回<code>false</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function truthCheck(collection, pre) {\\n  // 每个都是真的吗？\\n  return pre;\\n}\\n\\ntruthCheck([{\\\"user\\\": \\\"Tinky-Winky\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Dipsy\\\", \\\"sex\\\": \\\"male\\\"}, {\\\"user\\\": \\\"Laa-Laa\\\", \\\"sex\\\": \\\"female\\\"}, {\\\"user\\\": \\\"Po\\\", \\\"sex\\\": \\\"female\\\"}], \\\"sex\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/arguments-optional\",\"id\":\"a10d2431ad0c6a099a4b8b52\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/everything-be-true\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-everything-be-true.json\n// module id = 3931\n// module chunks = 4626407119600"],"sourceRoot":""}