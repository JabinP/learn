{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-basic-javascript-storing-values-with-the-assignment-operator-3982733e42c8d4406d26.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-storing-values-with-the-assignment-operator.json"],"names":["webpackJsonp","3839","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,8CAAAC,aAAA,oEAAgI,8LAAwL,2MAAAC,cAAA,EAAAC,QAAsPC,KAAA,0GAAAC,UAAA,mBAAAC,QAA0JC,KAAA,cAAAC,WAAA,2EAA6GD,KAAA,wBAAAC,WAAA,uEAAmHD,KAAA,wBAAAC,WAAA,uEAAmHD,KAAA,sDAAAC,WAAA,oGAA6KC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,mDAA+EC,KAAA,2GAAyIC,KAAA,4DAAwEC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,kHAAAC,GAAA,4BAAmNrB,KAAA","file":"path---javascript-algorithms-and-data-structures-basic-javascript-storing-values-with-the-assignment-operator-3982733e42c8d4406d26.js","sourcesContent":["webpackJsonp([183888570028075],{\n\n/***/ 3839:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Storing Values with the Assignment Operator\",\"description\":[\"在 JavaScript 中，你可以使用赋值运算符将值存储在变量中。\",\"<code>myVariable = 5;</code>\",\"这条语句把<code>Number</code>类型的值<code>5</code>赋给变量<code>myVariable</code>。\",\"赋值过程是从右到左进行的。在将值分配给运算符左侧的变量之前，将解析<code>=</code>运算符右侧的所有内容。\",\"<blockquote>myVar = 5;<br>myNum = myVar;</blockquote>\",\"数值<code>5</code>被赋给变量<code>myVar</code>中，然后再次将变量<code>myVar</code>解析为<code>5</code>并将其赋给<code>myNum</code>变量。\",\"<hr>\",\"把数值<code>7</code>赋给变量 <code>a</code>。\",\"把变量<code>a</code>中的内容赋给变量<code>b</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"不要修改注释上方的代码\",\"testString\":\"assert(/var a;/.test(code) && /var b = 2;/.test(code), '不要修改注释上方的代码');\"},{\"text\":\"<code>a</code>的值应该是 7\",\"testString\":\"assert(typeof a === 'number' && a === 7, '<code>a</code>的值应该是 7');\"},{\"text\":\"<code>b</code>的值应该是 7\",\"testString\":\"assert(typeof b === 'number' && b === 7, '<code>b</code>的值应该是 7');\"},{\"text\":\"你需要用<code>=</code>把<code>a</code>的值赋给<code>b</code>\",\"testString\":\"assert(/b\\\\s*=\\\\s*a\\\\s*;/g.test(code), '你需要用<code>=</code>把<code>a</code>的值赋给<code>b</code>');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 举例\\nvar a;\\nvar b = 2;\\n\\n// 请把你的代码写在这条注释以下\\n\",\"head\":\"if (typeof a != 'undefined') {\\n  a = undefined;\\n}\\nif (typeof b != 'undefined') {\\n  b = undefined;\\n}\",\"tail\":\"(function(a,b){return \\\"a = \\\" + a + \\\", b = \\\" + b;})(a,b);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/initializing-variables-with-the-assignment-operator\",\"id\":\"56533eb9ac21ba0edf2244a8\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-basic-javascript-storing-values-with-the-assignment-operator-3982733e42c8d4406d26.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Storing Values with the Assignment Operator\",\"description\":[\"在 JavaScript 中，你可以使用赋值运算符将值存储在变量中。\",\"<code>myVariable = 5;</code>\",\"这条语句把<code>Number</code>类型的值<code>5</code>赋给变量<code>myVariable</code>。\",\"赋值过程是从右到左进行的。在将值分配给运算符左侧的变量之前，将解析<code>=</code>运算符右侧的所有内容。\",\"<blockquote>myVar = 5;<br>myNum = myVar;</blockquote>\",\"数值<code>5</code>被赋给变量<code>myVar</code>中，然后再次将变量<code>myVar</code>解析为<code>5</code>并将其赋给<code>myNum</code>变量。\",\"<hr>\",\"把数值<code>7</code>赋给变量 <code>a</code>。\",\"把变量<code>a</code>中的内容赋给变量<code>b</code>。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator\",\"blockName\":\"Basic JavaScript\",\"tests\":[{\"text\":\"不要修改注释上方的代码\",\"testString\":\"assert(/var a;/.test(code) && /var b = 2;/.test(code), '不要修改注释上方的代码');\"},{\"text\":\"<code>a</code>的值应该是 7\",\"testString\":\"assert(typeof a === 'number' && a === 7, '<code>a</code>的值应该是 7');\"},{\"text\":\"<code>b</code>的值应该是 7\",\"testString\":\"assert(typeof b === 'number' && b === 7, '<code>b</code>的值应该是 7');\"},{\"text\":\"你需要用<code>=</code>把<code>a</code>的值赋给<code>b</code>\",\"testString\":\"assert(/b\\\\s*=\\\\s*a\\\\s*;/g.test(code), '你需要用<code>=</code>把<code>a</code>的值赋给<code>b</code>');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"// 举例\\nvar a;\\nvar b = 2;\\n\\n// 请把你的代码写在这条注释以下\\n\",\"head\":\"if (typeof a != 'undefined') {\\n  a = undefined;\\n}\\nif (typeof b != 'undefined') {\\n  b = undefined;\\n}\",\"tail\":\"(function(a,b){return \\\"a = \\\" + a + \\\", b = \\\" + b;})(a,b);\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/basic-javascript/initializing-variables-with-the-assignment-operator\",\"id\":\"56533eb9ac21ba0edf2244a8\"},\"slug\":\"/javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-basic-javascript-storing-values-with-the-assignment-operator.json\n// module id = 3839\n// module chunks = 183888570028075"],"sourceRoot":""}