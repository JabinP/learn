webpackJsonp([0xbfaf8c2f4b4c],{2768:function(e,t){e.exports={data:{challengeNode:{title:"Get Route Parameter Input from the Client",guideUrl:null,description:["在构建 API 时，我们要让用户告诉我们他们想从服务中获取什么。举个例子，如果客户请求数据库中存储的用户信息，他们需要一种方法让我们知道他们对哪个用户感兴趣。实现这个需求的的方式就是使用路由参数。路由参数是由斜杠 (/) 分隔的 URL 命名段。每一小段能捕获与其位置匹配的 URL 部分的值。捕获的值能够在<code>req.params</code>对象中找到。","<blockquote>route_path: '/user/:userId/book/:bookId'<br>actual_request_URL: '/user/546/book/6754' <br>req.params: {userId: '546', bookId: '6754'}</blockquote>","在路由中<code>GET /:word/echo</code>构建一个 echo 服务，响应一个采用<code>{echo: word}</code>结构的 JSON 对象。你可以在<code>req.params.word</code>中找到要重复的单词。你可以在浏览器的地址栏测试你的路由，访问一些匹配的路由，比如：your-app-rootpath/freecodecamp/echo"],challengeType:2,fields:{blockName:"Basic Node and Express",slug:"/apis-and-microservices/basic-node-and-express/get-route-parameter-input-from-the-client",tests:[{text:"测试 1：你的 echo 服务应该正确地重复单词",testString:"getUserInput => $.get(getUserInput('url') + '/eChOtEsT/echo').then(data => { assert.equal(data.echo, 'eChOtEsT', '测试 1：echo 没有按预期正常执行') }, xhr => { throw new Error(xhr.responseText); })"},{text:"测试 2：你的 echo 服务应该正确地重复单词",testString:"getUserInput => $.get(getUserInput('url') + '/ech0-t3st/echo').then(data => { assert.equal(data.echo, 'ech0-t3st', '测试 2：echo 没有按预期正常执行') }, xhr => { throw new Error(xhr.responseText); })"}]}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/apis-and-microservices/basic-node-and-express/get-query-parameter-input-from-the-client",id:"587d7fb2367417b2b2512bf5"},slug:"/apis-and-microservices/basic-node-and-express/get-route-parameter-input-from-the-client"}}}});
//# sourceMappingURL=path---apis-and-microservices-basic-node-and-express-get-route-parameter-input-from-the-client-cb46d07f1e9e686fac60.js.map