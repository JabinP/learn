{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements-e9d76ad1fb4c5fdb9532.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements.json"],"names":["webpackJsonp","3890","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iFAAAC,aAAA,kOAA2S,mVAAAC,cAAA,EAAAC,QAA8YC,KAAA,gIAAAC,UAAA,MAAAC,QAAmKC,KAAA,qDAAAC,WAAA,mGAA4KD,KAAA,WAAAC,WAAA,uHAAsJD,KAAA,kCAAAC,WAAA,8GAAmKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,kTAAuWC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,0HAAAC,GAAA,4BAA2NrB,KAAA","file":"path---javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements-e9d76ad1fb4c5fdb9532.js","sourcesContent":["webpackJsonp([34567237607383],{\n\n/***/ 3890:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Destructuring Assignment with the Rest Operator to Reassign Array Elements\",\"description\":[\"在解构数组的某些情况下，我们可能希望将剩下的元素放进另一个数组里面。\",\"以下代码的结果与使用<code>Array.prototype.slice()</code>相同：\",\"<blockquote>const [a, b, ...arr] = [1, 2, 3, 4, 5, 7];<br>console.log(a, b); // 1, 2<br>console.log(arr); // [3, 4, 5, 7]</blockquote>\",\"变量<code>a</code>与<code>b</code>分别获取了数组的前两个元素的值。之后，因为<code>rest</code>操作符的存在，<code>arr</code>获取了原数组剩余的元素的值，并构成了一个新的数组。\",\"<code>rest</code>操作只能对数组列表最后的元素起作用。这意味着你不能使用<code>rest</code>操作符来截取原数组中间元素的子数组。\",\"<hr>\",\"使用解构赋值以及<code>rest</code>操作符来进行一个<code>Array.prototype.slice</code>相同的操作。使得<code>arr</code>是原数组<code>source</code>除开前两个元素的子数组。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"<code>arr</code>应该为<code>[3,4,5,6,7,8,9,10]</code>\",\"testString\":\"assert(arr.every((v, i) => v === i + 3),'<code>arr</code>应该为<code>[3,4,5,6,7,8,9,10]</code>');\"},{\"text\":\"使用了解构赋值。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/\\\\[\\\\s*\\\\w*\\\\s*,\\\\s*\\\\w*\\\\s*,\\\\s*...arr\\\\s*\\\\]/g),'使用了解构赋值。');\"},{\"text\":\"没有使用<code>Array.slice()</code>。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/Array.slice/g), '没有使用<code>Array.slice()</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"const source = [1,2,3,4,5,6,7,8,9,10];\\nfunction removeFirstTwo(list) {\\n  \\\"use strict\\\";\\n  // 在这行以下修改代码\\n  arr = list; // change this\\n  // 在这行以上修改代码\\n  return arr;\\n}\\nconst arr = removeFirstTwo(source);\\nconsole.log(arr); // 应该为 [3,4,5,6,7,8,9,10]\\nconsole.log(source); // 应该为 [1,2,3,4,5,6,7,8,9,10];\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-pass-an-object-as-a-functions-parameters\",\"id\":\"587d7b8a367417b2b2512b4c\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements-e9d76ad1fb4c5fdb9532.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Destructuring Assignment with the Rest Operator to Reassign Array Elements\",\"description\":[\"在解构数组的某些情况下，我们可能希望将剩下的元素放进另一个数组里面。\",\"以下代码的结果与使用<code>Array.prototype.slice()</code>相同：\",\"<blockquote>const [a, b, ...arr] = [1, 2, 3, 4, 5, 7];<br>console.log(a, b); // 1, 2<br>console.log(arr); // [3, 4, 5, 7]</blockquote>\",\"变量<code>a</code>与<code>b</code>分别获取了数组的前两个元素的值。之后，因为<code>rest</code>操作符的存在，<code>arr</code>获取了原数组剩余的元素的值，并构成了一个新的数组。\",\"<code>rest</code>操作只能对数组列表最后的元素起作用。这意味着你不能使用<code>rest</code>操作符来截取原数组中间元素的子数组。\",\"<hr>\",\"使用解构赋值以及<code>rest</code>操作符来进行一个<code>Array.prototype.slice</code>相同的操作。使得<code>arr</code>是原数组<code>source</code>除开前两个元素的子数组。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements\",\"blockName\":\"ES6\",\"tests\":[{\"text\":\"<code>arr</code>应该为<code>[3,4,5,6,7,8,9,10]</code>\",\"testString\":\"assert(arr.every((v, i) => v === i + 3),'<code>arr</code>应该为<code>[3,4,5,6,7,8,9,10]</code>');\"},{\"text\":\"使用了解构赋值。\",\"testString\":\"getUserInput => assert(getUserInput('index').match(/\\\\[\\\\s*\\\\w*\\\\s*,\\\\s*\\\\w*\\\\s*,\\\\s*...arr\\\\s*\\\\]/g),'使用了解构赋值。');\"},{\"text\":\"没有使用<code>Array.slice()</code>。\",\"testString\":\"getUserInput => assert(!getUserInput('index').match(/Array.slice/g), '没有使用<code>Array.slice()</code>。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"const source = [1,2,3,4,5,6,7,8,9,10];\\nfunction removeFirstTwo(list) {\\n  \\\"use strict\\\";\\n  // 在这行以下修改代码\\n  arr = list; // change this\\n  // 在这行以上修改代码\\n  return arr;\\n}\\nconst arr = removeFirstTwo(source);\\nconsole.log(arr); // 应该为 [3,4,5,6,7,8,9,10]\\nconsole.log(source); // 应该为 [1,2,3,4,5,6,7,8,9,10];\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-to-pass-an-object-as-a-functions-parameters\",\"id\":\"587d7b8a367417b2b2512b4c\"},\"slug\":\"/javascript-algorithms-and-data-structures/es6/use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-es-6-use-destructuring-assignment-with-the-rest-operator-to-reassign-array-elements.json\n// module id = 3890\n// module chunks = 34567237607383"],"sourceRoot":""}