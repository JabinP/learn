{"version":3,"sources":["webpack:///path---apis-and-microservices-mongodb-and-mongoose-use-model-findbyid-to-search-your-database-by-id-3fde9fd90f315b9425fd.js","webpack:///./.cache/json/apis-and-microservices-mongodb-and-mongoose-use-model-findbyid-to-search-your-database-by-id.json"],"names":["webpackJsonp","2799","module","exports","data","challengeNode","title","guideUrl","description","challengeType","fields","blockName","slug","tests","text","testString","pathContext","challengeMeta","introPath","template","required","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,sDAAAC,SAAA,KAAAC,aAAA,qLAAAC,cAAA,EAAAC,QAA8SC,UAAA,uBAAAC,KAAA,gGAAAC,QAAoJC,KAAA,0BAAAC,WAAA,yaAAsdC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAC,YAAAC,kBAAA,sGAAAC,GAAA,4BAAuMV,KAAA","file":"path---apis-and-microservices-mongodb-and-mongoose-use-model-findbyid-to-search-your-database-by-id-3fde9fd90f315b9425fd.js","sourcesContent":["webpackJsonp([221191002105369],{\n\n/***/ 2799:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use model.findById() to Search Your Database By _id\",\"guideUrl\":null,\"description\":[\"当我们保存一个 document， MongoDB 自动添加 _id 字段，并给该字段设置 unique（唯一）属性。通过 _id 搜索是一个非常频繁的操作，所以 Mongose 为它提供了一个专门的方法。使用人物 Id 作为参数，执行<code>Model.findById() -> Person</code>，找到这个 _id 对应的唯一的一个人。\"],\"challengeType\":2,\"fields\":{\"blockName\":\"MongoDB and Mongoose\",\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/use-model-findbyid-to-search-your-database-by-id\",\"tests\":[{\"text\":\"通过 Id 成功找到对应的 item（项目）。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/find-by-id').then(data => { assert.equal(data.name, 'test', 'item.name is not what expected'); assert.equal(data.age, 0, 'item.age is not what expected'); assert.deepEqual(data.favoriteFoods, ['none'], 'item.favoriteFoods is not what expected'); assert.equal(data.__v, 0, 'The item should be not previously edited'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/apis-and-microservices/mongodb-and-mongoose/perform-classic-updates-by-running-find-edit-then-save\",\"id\":\"587d7fb7367417b2b2512c0d\"},\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/use-model-findbyid-to-search-your-database-by-id\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---apis-and-microservices-mongodb-and-mongoose-use-model-findbyid-to-search-your-database-by-id-3fde9fd90f315b9425fd.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use model.findById() to Search Your Database By _id\",\"guideUrl\":null,\"description\":[\"当我们保存一个 document， MongoDB 自动添加 _id 字段，并给该字段设置 unique（唯一）属性。通过 _id 搜索是一个非常频繁的操作，所以 Mongose 为它提供了一个专门的方法。使用人物 Id 作为参数，执行<code>Model.findById() -> Person</code>，找到这个 _id 对应的唯一的一个人。\"],\"challengeType\":2,\"fields\":{\"blockName\":\"MongoDB and Mongoose\",\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/use-model-findbyid-to-search-your-database-by-id\",\"tests\":[{\"text\":\"通过 Id 成功找到对应的 item（项目）。\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/find-by-id').then(data => { assert.equal(data.name, 'test', 'item.name is not what expected'); assert.equal(data.age, 0, 'item.age is not what expected'); assert.deepEqual(data.favoriteFoods, ['none'], 'item.favoriteFoods is not what expected'); assert.equal(data.__v, 0, 'The item should be not previously edited'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/apis-and-microservices/mongodb-and-mongoose/perform-classic-updates-by-running-find-edit-then-save\",\"id\":\"587d7fb7367417b2b2512c0d\"},\"slug\":\"/apis-and-microservices/mongodb-and-mongoose/use-model-findbyid-to-search-your-database-by-id\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/apis-and-microservices-mongodb-and-mongoose-use-model-findbyid-to-search-your-database-by-id.json\n// module id = 2799\n// module chunks = 221191002105369"],"sourceRoot":""}