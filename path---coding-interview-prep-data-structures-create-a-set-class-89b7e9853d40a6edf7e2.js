webpackJsonp([0x9fd87762c3ce],{2826:function(e,t){e.exports={data:{challengeNode:{title:"Create a Set Class",description:['在接下来的几个章节里面我们会通过创建一个函数来模拟 "Set"（集合）数据结构。集合跟数组很类似，但是集合中元素具有唯一性。集合的典型应用是检查其中是否存在某个数据。在 JavaScript 中，我们可以通过对象实现，举例如下：',"<blockquote>var set = new Object();<br>set.foo = true;<br>// 检查 foo 是否存在：<br>console.log(set.foo) // 输出 true</blockquote>","在接下来的几个练习中，我们会从零开始创建一个拥有完整功能的集合。","在本次练习中，你需要创建一个<code>add</code>方法。它的作用是添加集合中不存的元素：","<blockquote>this.add = function(element) {<br>  // 将元素添加进集合的代码<br>}</blockquote>","如果元素成功添加进集合，<code>add</code>方法应返回<code>true</code>，否则应返回<code>false</code>。"],challengeType:1,fields:{slug:"/coding-interview-prep/data-structures/create-a-set-class",blockName:"Data Structures",tests:[{text:"<code>Set</code>应该有<code>add</code>方法。",testString:"assert((function(){var test = new Set(); return (typeof test.add === 'function')}()), '<code>Set</code>应该有<code>add</code>方法。');"},{text:"<code>add</code>方法不应添加重复值。",testString:"assert((function(){var test = new Set(); test.add('a'); test.add('b'); test.add('a'); var vals = test.values(); return (vals[0] === 'a' && vals[1] === 'b' && vals.length === 2)}()), '<code>add</code>方法不应添加重复值。');"},{text:"成功添加元素时，<code>add</code>方法应该返回<code>true</code>。",testString:"assert((function(){var test = new Set(); var result = test.add('a'); return (result != undefined) && (result === true);}()), '成功添加元素时，<code>add</code>方法应该返回<code>true</code>。');"},{text:"尝试添加重复元素时，<code>add</code>方法应该返回<code>false</code>。",testString:"assert((function(){var test = new Set(); test.add('a'); var result = test.add('a'); return (result != undefined) && (result === false);}()), '尝试添加重复元素时，<code>add</code>方法应该返回<code>false</code>。');"}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:"function Set() {\n    // collection 变量用来存储集合中的元素\n    var collection = [];\n    // 当集合中存在 element 元素时返回 true 否则返回 false\n    this.has = function(element) {\n        return (collection.indexOf(element) !== -1);\n    };\n    // 该方法会返回集合内所有元素\n    this.values = function() {\n        return collection;\n    };\n    // 请把你的代码写在这条注释以下\n    // 请把你的代码写在这条注释以上\n}",head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/coding-interview-prep/data-structures/remove-from-a-set",id:"8d1323c8c441eddfaeb5bdef"},slug:"/coding-interview-prep/data-structures/create-a-set-class"}}}});
//# sourceMappingURL=path---coding-interview-prep-data-structures-create-a-set-class-89b7e9853d40a6edf7e2.js.map