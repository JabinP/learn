{"version":3,"sources":["webpack:///path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-regular-expressions-to-test-a-string-0a857c467a95d2fc33b5.js","webpack:///./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-regular-expressions-to-test-a-string.json"],"names":["webpackJsonp","3710","module","exports","data","challengeNode","title","guideUrl","description","challengeType","fields","blockName","slug","tests","text","testString","pathContext","challengeMeta","introPath","template","required","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,2CAAAC,SAAA,KAAAC,aAAA,uWAAAC,cAAA,EAAAC,QAAqdC,UAAA,0CAAAC,KAAA,+HAAAC,QAAsMC,KAAA,wBAAAC,WAAA,sLAAkOD,KAAA,kDAAAC,WAAA,2PAAiUD,KAAA,kDAAAC,WAAA,iTAAsXC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAC,YAAAC,kBAAA,uHAAAC,GAAA,4BAAwNV,KAAA","file":"path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-regular-expressions-to-test-a-string-0a857c467a95d2fc33b5.js","sourcesContent":["webpackJsonp([78925672078241],{\n\n/***/ 3710:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Regular Expressions to Test a String\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\"#match Asserts that the actual value\",\"matches the second argument regular expression.\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-regular-expressions-to-test-a-string\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=14').then(data => { assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - match vs. notMatch\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=14').then(data => {  assert.equal(data.assertions[0].method, 'match', '\\\\'# name: John Doe, age: 35\\\\' matches the regex'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - match vs. notMatch\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=14').then(data => {  assert.equal(data.assertions[1].method, 'notMatch', '\\\\'# name: Paul Smith III, age: twenty-four\\\\' does not match the regex (the age must be numeric)'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-an-object-has-a-property\",\"id\":\"587d824d367417b2b2512c54\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-regular-expressions-to-test-a-string\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-regular-expressions-to-test-a-string-0a857c467a95d2fc33b5.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use Regular Expressions to Test a String\",\"guideUrl\":null,\"description\":[\"As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.\",\"#match Asserts that the actual value\",\"matches the second argument regular expression.\"],\"challengeType\":2,\"fields\":{\"blockName\":\"Quality Assurance and Testing with Chai\",\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-regular-expressions-to-test-a-string\",\"tests\":[{\"text\":\"All tests should pass\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=14').then(data => { assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - match vs. notMatch\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=14').then(data => {  assert.equal(data.assertions[0].method, 'match', '\\\\'# name: John Doe, age: 35\\\\' matches the regex'); }, xhr => { throw new Error(xhr.responseText); })\"},{\"text\":\"Choose the right assertion - match vs. notMatch\",\"testString\":\"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=14').then(data => {  assert.equal(data.assertions[1].method, 'notMatch', '\\\\'# name: Paul Smith III, age: twenty-four\\\\' does not match the regex (the age must be numeric)'); }, xhr => { throw new Error(xhr.responseText); })\"}]}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/test-if-an-object-has-a-property\",\"id\":\"587d824d367417b2b2512c54\"},\"slug\":\"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-regular-expressions-to-test-a-string\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-regular-expressions-to-test-a-string.json\n// module id = 3710\n// module chunks = 78925672078241"],"sourceRoot":""}