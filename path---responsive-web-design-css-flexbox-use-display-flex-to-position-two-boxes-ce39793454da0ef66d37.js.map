{"version":3,"sources":["webpack:///path---responsive-web-design-css-flexbox-use-display-flex-to-position-two-boxes-ce39793454da0ef66d37.js","webpack:///./.cache/json/responsive-web-design-css-flexbox-use-display-flex-to-position-two-boxes.json"],"names":["webpackJsonp","4167","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","key","ext","name","contents","head","tail","indexjs","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,0CAAAC,aAAA,qKAAmM,2EAAAC,cAAA,EAAAC,QAA0IC,KAAA,4EAAAC,UAAA,cAAAC,QAAuHC,KAAA,iEAAAC,WAAA,6HAAiNC,YAAAC,OAAwBC,WAAaC,IAAA,YAAAC,IAAA,OAAAC,KAAA,QAAAC,SAAA,4VAAmTC,KAAA,GAAAC,KAAA,IAA4HC,QAAA,KAAAC,SAAA,QAAkCC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6EAAAC,GAAA,4BAA8KrB,KAAA","file":"path---responsive-web-design-css-flexbox-use-display-flex-to-position-two-boxes-ce39793454da0ef66d37.js","sourcesContent":["webpackJsonp([151087910038238],{\n\n/***/ 4167:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use display: flex to Position Two Boxes\",\"description\":[\"这节会使用一种不同的挑战方式来学习一下如何更灵活地使用 CSS 布局元素。首先，我们会先用一个挑战解释原理，然后使用“弹性盒子”（flexbox）调整一个推文组件的样式来完成挑战。\",\"只要在一个元素的 CSS 中添加<code>display: flex;</code>，就可以使用其他 flex 属性来构建响应式页面了。\",\"<hr>\",\"为<code>#box-container</code>添加<code>display</code>属性，设置其值为 flex。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/css-flexbox/use-display-flex-to-position-two-boxes\",\"blockName\":\"CSS Flexbox\",\"tests\":[{\"text\":\"<code>#box-container</code>应有<code>display</code>属性，其值应为 flex。\",\"testString\":\"assert($('#box-container').css('display') == 'flex', '<code>#box-container</code>应有<code>display</code>属性，其值应为 flex。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  #box-container {\\n    height: 500px;\\n    \\n  }\\n  \\n  #box-1 {\\n    background-color: dodgerblue;\\n    width: 50%;\\n    height: 50%;\\n    \\n  }\\n\\n  #box-2 {\\n    background-color: orangered;\\n    width: 50%;\\n    height: 50%;\\n    \\n  }\\n</style>\\n<div id=\\\"box-container\\\">\\n  <div id=\\\"box-1\\\"></div>\\n  <div id=\\\"box-2\\\"></div>\\n</div>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/css-flexbox/add-flex-superpowers-to-the-tweet-embed\",\"id\":\"587d78ab367417b2b2512af0\"},\"slug\":\"/responsive-web-design/css-flexbox/use-display-flex-to-position-two-boxes\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-web-design-css-flexbox-use-display-flex-to-position-two-boxes-ce39793454da0ef66d37.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use display: flex to Position Two Boxes\",\"description\":[\"这节会使用一种不同的挑战方式来学习一下如何更灵活地使用 CSS 布局元素。首先，我们会先用一个挑战解释原理，然后使用“弹性盒子”（flexbox）调整一个推文组件的样式来完成挑战。\",\"只要在一个元素的 CSS 中添加<code>display: flex;</code>，就可以使用其他 flex 属性来构建响应式页面了。\",\"<hr>\",\"为<code>#box-container</code>添加<code>display</code>属性，设置其值为 flex。\"],\"challengeType\":0,\"fields\":{\"slug\":\"/responsive-web-design/css-flexbox/use-display-flex-to-position-two-boxes\",\"blockName\":\"CSS Flexbox\",\"tests\":[{\"text\":\"<code>#box-container</code>应有<code>display</code>属性，其值应为 flex。\",\"testString\":\"assert($('#box-container').css('display') == 'flex', '<code>#box-container</code>应有<code>display</code>属性，其值应为 flex。');\"}]},\"required\":[],\"files\":{\"indexhtml\":{\"key\":\"indexhtml\",\"ext\":\"html\",\"name\":\"index\",\"contents\":\"<style>\\n  #box-container {\\n    height: 500px;\\n    \\n  }\\n  \\n  #box-1 {\\n    background-color: dodgerblue;\\n    width: 50%;\\n    height: 50%;\\n    \\n  }\\n\\n  #box-2 {\\n    background-color: orangered;\\n    width: 50%;\\n    height: 50%;\\n    \\n  }\\n</style>\\n<div id=\\\"box-container\\\">\\n  <div id=\\\"box-1\\\"></div>\\n  <div id=\\\"box-2\\\"></div>\\n</div>\",\"head\":\"\",\"tail\":\"\"},\"indexjs\":null,\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/responsive-web-design/css-flexbox/add-flex-superpowers-to-the-tweet-embed\",\"id\":\"587d78ab367417b2b2512af0\"},\"slug\":\"/responsive-web-design/css-flexbox/use-display-flex-to-position-two-boxes\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-web-design-css-flexbox-use-display-flex-to-position-two-boxes.json\n// module id = 4167\n// module chunks = 151087910038238"],"sourceRoot":""}