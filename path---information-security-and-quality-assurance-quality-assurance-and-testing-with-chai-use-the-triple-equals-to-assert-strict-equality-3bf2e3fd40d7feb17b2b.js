webpackJsonp([0x7848bc897c22],{3712:function(t,e){t.exports={data:{challengeNode:{title:"Use the Triple Equals to Assert Strict Equality",guideUrl:null,description:["As a reminder, this project is being built upon the following starter project on <a href='https://glitch.com/#!/import/github/freeCodeCamp/boilerplate-mochachai/'>Glitch</a>, or cloned from <a href='https://github.com/freeCodeCamp/boilerplate-mochachai/'>GitHub</a>.",".strictEqual(), .notStrictEqual()",".strictEqual() compares objects using '==='"],challengeType:2,fields:{blockName:"Quality Assurance and Testing with Chai",slug:"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-the-triple-equals-to-assert-strict-equality",tests:[{text:"All tests should pass",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=5').then(data => {assert.equal(data.state,'passed'); }, xhr => { throw new Error(xhr.responseText); })"},{text:"Choose the right assertion - strictEqual vs. notStrictEqual",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=5').then(data => {  assert.equal(data.assertions[0].method, 'notStrictEqual', 'with strictEqual the type must match'); }, xhr => { throw new Error(xhr.responseText); })"},{text:"Choose the right assertion - strictEqual vs. notStrictEqual",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=5').then(data => {  assert.equal(data.assertions[1].method, 'strictEqual', '3*2 = 6...'); }, xhr => { throw new Error(xhr.responseText); })"},{text:"Choose the right assertion - strictEqual vs. notStrictEqual",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=5').then(data => {  assert.equal(data.assertions[2].method, 'strictEqual', '6 * \\'2\\' is 12. Types match !'); }, xhr => { throw new Error(xhr.responseText); })"},{text:"Choose the right assertion - strictEqual vs. notStrictEqual",testString:"getUserInput => $.get(getUserInput('url') + '/_api/get-tests?type=unit&n=5').then(data => {  assert.equal(data.assertions[3].method, 'notStrictEqual', 'Even if they have the same elements, the Arrays are notStrictEqual'); }, xhr => { throw new Error(xhr.responseText); })"}]}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/assert-deep-equality-with--deepequal-and--notdeepequal",id:"587d824b367417b2b2512c4b"},slug:"/information-security-and-quality-assurance/quality-assurance-and-testing-with-chai/use-the-triple-equals-to-assert-strict-equality"}}}});
//# sourceMappingURL=path---information-security-and-quality-assurance-quality-assurance-and-testing-with-chai-use-the-triple-equals-to-assert-strict-equality-3bf2e3fd40d7feb17b2b.js.map