{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-debugging-use-typeof-to-check-the-type-of-a-variable-542879918aa8d27b99ba.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-debugging-use-typeof-to-check-the-type-of-a-variable.json"],"names":["webpackJsonp","3872","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,6CAAAC,aAAA,8YAA4b,6UAAAC,cAAA,EAAAC,QAAyYC,KAAA,kGAAAC,UAAA,YAAAC,QAA2IC,KAAA,mEAAAC,WAAA,kJAAyOD,KAAA,qDAAAC,WAAA,wGAAiLD,KAAA,qDAAAC,WAAA,yGAAiLC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,qFAAqHC,KAAA,GAAAC,KAAA,IAA2CC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,oGAAAC,GAAA,4BAAqMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-debugging-use-typeof-to-check-the-type-of-a-variable-542879918aa8d27b99ba.js","sourcesContent":["webpackJsonp([82566681884743],{\n\n/***/ 3872:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use typeof to Check the Type of a Variable\",\"description\":[\"你可以使用<code>typeof</code>检查变量的数据结构或类型。在处理多种数据类型时，<code>typeof</code>会对调试很有帮助。如果你想计算两数之和，但实际传入了一个字符串参数，则结果可能是错误的。类型错误可能隐藏在计算或函数调用中。当你以 JavaScript 对象（JSON）的形式访问和使用外部数据时尤其要小心。\",\"下面是使用<code>typeof</code>的一些示例：\",\"<blockquote>console.log(typeof \\\"\\\"); // 输出 \\\"string\\\"<br>console.log(typeof 0); // 输出 \\\"number\\\"<br>console.log(typeof []); // 输出 \\\"object\\\"<br>console.log(typeof {}); // 输出 \\\"object\\\"</blockquote>\",\"JavaScript 有六种原始（不可变）数据类型：<code>Boolean</code>,<code>Null</code>,<code>Undefined</code>,<code>Number</code>,<code>String</code>, 和<code>Symbol</code>（ES6 新增）和一种可变的数据类型：<code>Object</code>。注意，在 JavaScript 中，数组在本质上是一种对象\",\"<hr>\",\"添加两个<code>console.log()</code>语句来检查代码中的两个变量<code>seven</code>和<code>three</code>的 code>typeof</code>值。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/debugging/use-typeof-to-check-the-type-of-a-variable\",\"blockName\":\"Debugging\",\"tests\":[{\"text\":\"你应在两个<code>console.log()</code>语句中使用<code>typeof</code>来检查变量的类型。\",\"testString\":\"assert(code.match(/console\\\\.log\\\\(typeof[\\\\( ].*\\\\)?\\\\)/g).length == 2, '你应在两个<code>console.log()</code>语句中使用<code>typeof</code>来检查变量的类型。');\"},{\"text\":\"你应使用<code>typeof</code>来检查变量<code>seven</code>的类型。\",\"testString\":\"assert(code.match(/typeof[\\\\( ]seven\\\\)?/g), '你应使用<code>typeof</code>来检查变量<code>seven</code>的类型。');\"},{\"text\":\"你应使用<code>typeof</code>来检查变量<code>three</code>的类型。\",\"testString\":\"assert(code.match(/typeof[\\\\( ]three\\\\)?/g), '你应使用<code>typeof</code>来检查变量<code>three</code>的类型。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let seven = 7;\\nlet three = \\\"3\\\";\\nconsole.log(seven + three);\\n// 请把你的代码写在这条注释以下\\n\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/debugging/catch-misspelled-variable-and-function-names\",\"id\":\"587d7b84367417b2b2512b34\"},\"slug\":\"/javascript-algorithms-and-data-structures/debugging/use-typeof-to-check-the-type-of-a-variable\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-debugging-use-typeof-to-check-the-type-of-a-variable-542879918aa8d27b99ba.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use typeof to Check the Type of a Variable\",\"description\":[\"你可以使用<code>typeof</code>检查变量的数据结构或类型。在处理多种数据类型时，<code>typeof</code>会对调试很有帮助。如果你想计算两数之和，但实际传入了一个字符串参数，则结果可能是错误的。类型错误可能隐藏在计算或函数调用中。当你以 JavaScript 对象（JSON）的形式访问和使用外部数据时尤其要小心。\",\"下面是使用<code>typeof</code>的一些示例：\",\"<blockquote>console.log(typeof \\\"\\\"); // 输出 \\\"string\\\"<br>console.log(typeof 0); // 输出 \\\"number\\\"<br>console.log(typeof []); // 输出 \\\"object\\\"<br>console.log(typeof {}); // 输出 \\\"object\\\"</blockquote>\",\"JavaScript 有六种原始（不可变）数据类型：<code>Boolean</code>,<code>Null</code>,<code>Undefined</code>,<code>Number</code>,<code>String</code>, 和<code>Symbol</code>（ES6 新增）和一种可变的数据类型：<code>Object</code>。注意，在 JavaScript 中，数组在本质上是一种对象\",\"<hr>\",\"添加两个<code>console.log()</code>语句来检查代码中的两个变量<code>seven</code>和<code>three</code>的 code>typeof</code>值。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/debugging/use-typeof-to-check-the-type-of-a-variable\",\"blockName\":\"Debugging\",\"tests\":[{\"text\":\"你应在两个<code>console.log()</code>语句中使用<code>typeof</code>来检查变量的类型。\",\"testString\":\"assert(code.match(/console\\\\.log\\\\(typeof[\\\\( ].*\\\\)?\\\\)/g).length == 2, '你应在两个<code>console.log()</code>语句中使用<code>typeof</code>来检查变量的类型。');\"},{\"text\":\"你应使用<code>typeof</code>来检查变量<code>seven</code>的类型。\",\"testString\":\"assert(code.match(/typeof[\\\\( ]seven\\\\)?/g), '你应使用<code>typeof</code>来检查变量<code>seven</code>的类型。');\"},{\"text\":\"你应使用<code>typeof</code>来检查变量<code>three</code>的类型。\",\"testString\":\"assert(code.match(/typeof[\\\\( ]three\\\\)?/g), '你应使用<code>typeof</code>来检查变量<code>three</code>的类型。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let seven = 7;\\nlet three = \\\"3\\\";\\nconsole.log(seven + three);\\n// 请把你的代码写在这条注释以下\\n\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/debugging/catch-misspelled-variable-and-function-names\",\"id\":\"587d7b84367417b2b2512b34\"},\"slug\":\"/javascript-algorithms-and-data-structures/debugging/use-typeof-to-check-the-type-of-a-variable\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-debugging-use-typeof-to-check-the-type-of-a-variable.json\n// module id = 3872\n// module chunks = 82566681884743"],"sourceRoot":""}