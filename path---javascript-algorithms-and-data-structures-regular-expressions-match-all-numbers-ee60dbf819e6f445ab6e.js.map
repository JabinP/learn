{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-regular-expressions-match-all-numbers-ee60dbf819e6f445ab6e.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-match-all-numbers.json"],"names":["webpackJsonp","3989","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oBAAAC,aAAA,qNAAAC,cAAA,EAAAC,QAA8RC,KAAA,mFAAAC,UAAA,sBAAAC,QAAsIC,KAAA,wBAAAC,WAAA,oEAAgHD,KAAA,sBAAAC,WAAA,oDAA8FD,KAAA,wCAAAC,WAAA,wFAAwJD,KAAA,+CAAAC,WAAA,sGAA6KD,KAAA,qDAAAC,WAAA,kHAA+LD,KAAA,mDAAAC,WAAA,6GAAwLD,KAAA,qDAAAC,WAAA,kHAA+LD,KAAA,4DAAAC,WAAA,iIAAoNC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,oIAAyLC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,uFAAAC,GAAA,4BAAwLrB,KAAA","file":"path---javascript-algorithms-and-data-structures-regular-expressions-match-all-numbers-ee60dbf819e6f445ab6e.js","sourcesContent":["webpackJsonp([220660056434998],{\n\n/***/ 3989:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Match All Numbers\",\"description\":[\"你已经了解了常见字符串匹配模式和缩写，如字母数字。另一个常见的匹配模式是只寻找数字。\",\"查找数字字符的缩写是<code>\\\\d</code>，注意是小写的<code>d</code>。这等同于字符类<code>[0-9]</code>，它查找 0 到 9 之间任意数字的单个字符。\",\"<hr>\",\"使用缩写<code>\\\\d</code>来计算电影标题中有多少个数字。书面数字（\\\"six\\\" 而不是 6）不计算在内。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用缩写来匹配数字字符。\",\"testString\":\"assert(/\\\\\\\\d/.test(numRegex.source), '你的正则表达式应该使用缩写来匹配数字字符。');\"},{\"text\":\"你的正则表达式应该使用全局状态修正符。\",\"testString\":\"assert(numRegex.global, '你的正则表达式应该使用全局状态修正符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"9\\\"</code>中匹配到 1 个数字。\",\"testString\":\"assert(\\\"9\\\".match(numRegex).length == 1, '你的正则表达式应该在<code>\\\"9\\\"</code>中匹配到 1 个数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"Catch 22\\\"</code>中匹配到 2 个数字。\",\"testString\":\"assert(\\\"Catch 22\\\".match(numRegex).length == 2, '你的正则表达式应该在<code>\\\"Catch 22\\\"</code>中匹配到 2 个数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"101 Dalmatians\\\"</code>中匹配到 3 个数字。\",\"testString\":\"assert(\\\"101 Dalmatians\\\".match(numRegex).length == 3, '你的正则表达式应该在<code>\\\"101 Dalmatians\\\"</code>中匹配到 3 个数字。');\"},{\"text\":\"你的正则表达式在<code>\\\"One, Two, Three\\\"</code>中应该匹配不到数字。\",\"testString\":\"assert(\\\"One, Two, Three\\\".match(numRegex) == null, '你的正则表达式在<code>\\\"One, Two, Three\\\"</code>中应该匹配不到数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"21 Jump Street\\\"</code>中匹配到 2 个数字。\",\"testString\":\"assert(\\\"21 Jump Street\\\".match(numRegex).length == 2, '你的正则表达式应该在<code>\\\"21 Jump Street\\\"</code>中匹配到 2 个数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"2001: A Space Odyssey\\\"</code>中匹配到 4 个数字。\",\"testString\":\"assert(\\\"2001: A Space Odyssey\\\".match(numRegex).length == 4, '你的正则表达式应该在<code>\\\"2001: A Space Odyssey\\\"</code>中匹配到 4 个数字。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let numString = \\\"Your sandwich will be $5.00\\\";\\nlet numRegex = /change/; // 修改这一行\\nlet result = numString.match(numRegex).length;\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-non-numbers\",\"id\":\"5d712346c441eddfaeb5bdef\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-regular-expressions-match-all-numbers-ee60dbf819e6f445ab6e.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Match All Numbers\",\"description\":[\"你已经了解了常见字符串匹配模式和缩写，如字母数字。另一个常见的匹配模式是只寻找数字。\",\"查找数字字符的缩写是<code>\\\\d</code>，注意是小写的<code>d</code>。这等同于字符类<code>[0-9]</code>，它查找 0 到 9 之间任意数字的单个字符。\",\"<hr>\",\"使用缩写<code>\\\\d</code>来计算电影标题中有多少个数字。书面数字（\\\"six\\\" 而不是 6）不计算在内。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers\",\"blockName\":\"Regular Expressions\",\"tests\":[{\"text\":\"你的正则表达式应该使用缩写来匹配数字字符。\",\"testString\":\"assert(/\\\\\\\\d/.test(numRegex.source), '你的正则表达式应该使用缩写来匹配数字字符。');\"},{\"text\":\"你的正则表达式应该使用全局状态修正符。\",\"testString\":\"assert(numRegex.global, '你的正则表达式应该使用全局状态修正符。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"9\\\"</code>中匹配到 1 个数字。\",\"testString\":\"assert(\\\"9\\\".match(numRegex).length == 1, '你的正则表达式应该在<code>\\\"9\\\"</code>中匹配到 1 个数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"Catch 22\\\"</code>中匹配到 2 个数字。\",\"testString\":\"assert(\\\"Catch 22\\\".match(numRegex).length == 2, '你的正则表达式应该在<code>\\\"Catch 22\\\"</code>中匹配到 2 个数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"101 Dalmatians\\\"</code>中匹配到 3 个数字。\",\"testString\":\"assert(\\\"101 Dalmatians\\\".match(numRegex).length == 3, '你的正则表达式应该在<code>\\\"101 Dalmatians\\\"</code>中匹配到 3 个数字。');\"},{\"text\":\"你的正则表达式在<code>\\\"One, Two, Three\\\"</code>中应该匹配不到数字。\",\"testString\":\"assert(\\\"One, Two, Three\\\".match(numRegex) == null, '你的正则表达式在<code>\\\"One, Two, Three\\\"</code>中应该匹配不到数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"21 Jump Street\\\"</code>中匹配到 2 个数字。\",\"testString\":\"assert(\\\"21 Jump Street\\\".match(numRegex).length == 2, '你的正则表达式应该在<code>\\\"21 Jump Street\\\"</code>中匹配到 2 个数字。');\"},{\"text\":\"你的正则表达式应该在<code>\\\"2001: A Space Odyssey\\\"</code>中匹配到 4 个数字。\",\"testString\":\"assert(\\\"2001: A Space Odyssey\\\".match(numRegex).length == 4, '你的正则表达式应该在<code>\\\"2001: A Space Odyssey\\\"</code>中匹配到 4 个数字。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let numString = \\\"Your sandwich will be $5.00\\\";\\nlet numRegex = /change/; // 修改这一行\\nlet result = numString.match(numRegex).length;\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-non-numbers\",\"id\":\"5d712346c441eddfaeb5bdef\"},\"slug\":\"/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-regular-expressions-match-all-numbers.json\n// module id = 3989\n// module chunks = 220660056434998"],"sourceRoot":""}