webpackJsonp([0xa370fa5a0ec9],{3828:function(e,o){e.exports={data:{challengeNode:{title:"Profile Lookup",description:["我们有一个对象数组，里面存储着通讯录。","函数<code>lookUp</code>有两个预定义参数：<code>firstName</code>值和<code>prop</code>属性 。","函数将会检查通讯录中是否存在一个与传入的<code>firstName</code>相同的联系人。如果存在，那么还需要检查对应的联系人中是否存在<code>prop</code>属性。","如果它们都存在，函数返回<code>prop</code>属性对应的值。",'如果<code>firstName</code>值不存在，返回<code>"No such contact"</code>。','如果<code>prop</code>属性不存在，返回<code>"No such property"</code>。'],challengeType:1,fields:{slug:"/javascript-algorithms-and-data-structures/basic-javascript/profile-lookup",blockName:"Basic JavaScript",tests:[{text:'<code>"Kristian", "lastName"</code>应该返回 <code>"Vos"</code>',testString:'assert(lookUpProfile(\'Kristian\',\'lastName\') === "Vos", \'<code>"Kristian", "lastName"</code>应该返回 <code>"Vos"</code>\');'},{text:'<code>"Sherlock", "likes"</code>应该返回 <code>["Intriguing Cases", "Violin"]</code>',testString:'assert.deepEqual(lookUpProfile("Sherlock", "likes"), ["Intriguing Cases", "Violin"], \'<code>"Sherlock", "likes"</code>应该返回 <code>["Intriguing Cases", "Violin"]</code>\');'},{text:'<code>"Harry","likes"</code>应该返回 an array',testString:'assert(typeof lookUpProfile("Harry", "likes") === "object", \'<code>"Harry","likes"</code>应该返回 an array\');'},{text:'<code>"Bob", "number"</code>应该返回 "No such contact"',testString:'assert(lookUpProfile("Bob", "number") === "No such contact", \'<code>"Bob", "number"</code>应该返回 "No such contact"\');'},{text:'<code>"Bob", "potato"</code>应该返回 "No such contact"',testString:'assert(lookUpProfile("Bob", "potato") === "No such contact", \'<code>"Bob", "potato"</code>应该返回 "No such contact"\');'},{text:'<code>"Akira", "address"</code>应该返回 "No such property"',testString:'assert(lookUpProfile("Akira", "address") === "No such property", \'<code>"Akira", "address"</code>应该返回 "No such property"\');'}]},required:[],files:{indexhtml:null,indexjs:{key:"indexjs",ext:"js",name:"index",contents:'// 初始化变量\nvar contacts = [\n    {\n        "firstName": "Akira",\n        "lastName": "Laine",\n        "number": "0543236543",\n        "likes": ["Pizza", "Coding", "Brownie Points"]\n    },\n    {\n        "firstName": "Harry",\n        "lastName": "Potter",\n        "number": "0994372684",\n        "likes": ["Hogwarts", "Magic", "Hagrid"]\n    },\n    {\n        "firstName": "Sherlock",\n        "lastName": "Holmes",\n        "number": "0487345643",\n        "likes": ["Intriguing Cases", "Violin"]\n    },\n    {\n        "firstName": "Kristian",\n        "lastName": "Vos",\n        "number": "unknown",\n        "likes": ["JavaScript", "Gaming", "Foxes"]\n    }\n];\n\n\nfunction lookUpProfile(name, prop){\n// 请把你的代码写在这条注释以下\n\n// 请把你的代码写在这条注释以上\n}\n\n// 你可以修改这一行来测试你的代码\nlookUpProfile("Akira", "likes");',head:"",tail:""},indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/javascript-algorithms-and-data-structures/basic-javascript/generate-random-fractions-with-javascript",id:"5688e62ea601b2482ff8422b"},slug:"/javascript-algorithms-and-data-structures/basic-javascript/profile-lookup"}}}});
//# sourceMappingURL=path---javascript-algorithms-and-data-structures-basic-javascript-profile-lookup-a1e42cb15d1bde15e514.js.map