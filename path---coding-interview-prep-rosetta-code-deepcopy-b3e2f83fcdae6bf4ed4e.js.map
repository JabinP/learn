{"version":3,"sources":["webpack:///path---coding-interview-prep-rosetta-code-deepcopy-b3e2f83fcdae6bf4ed4e.js","webpack:///./.cache/json/coding-interview-prep-rosetta-code-deepcopy.json"],"names":["webpackJsonp","3369","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,WAAAC,aAAA,6WAAAC,cAAA,EAAAC,QAA2aC,KAAA,+CAAAC,UAAA,eAAAC,QAA2FC,KAAA,8CAAAC,WAAA,2FAA6JD,KAAA,iEAAuCC,WAAA,oHAAoKD,KAAA,uDAAAC,WAAA,4FAAuKD,KAAA,sFAAAC,WAAA,mIAA6OD,KAAA,4FAAAC,WAAA,0IAAyPC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,gEAAmHC,KAAA,GAAAC,KAAA,sIAAwJC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,mEAAAC,GAAA,4BAAoKrB,KAAA","file":"path---coding-interview-prep-rosetta-code-deepcopy-b3e2f83fcdae6bf4ed4e.js","sourcesContent":["webpackJsonp([53208637389984],{\n\n/***/ 3369:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Deepcopy\",\"description\":[\"Task:\",\"<p>Write a function that returns a deep copy of a given object.</p>\",\"<p>The copy must not be the same object that was given.</p>\",\"<p>This task will not test for: </p>\",\"Objects with properties that are functions\",\"Date objects or object with properties that are Date objects\",\"RegEx or object with properties that are RegEx objects\",\"Prototype copying\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/deepcopy\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>deepcopy</code> should be a function.\",\"testString\":\"assert(typeof deepcopy === 'function', '<code>deepcopy</code> should be a function.');\"},{\"text\":\"<code>deepcopy({test: \\\"test\\\"})</code> should return an object.\",\"testString\":\"assert(typeof deepcopy(obj1) === 'object', '<code>deepcopy({test: \\\"test\\\"})</code> should return an object.');\"},{\"text\":\"Should not return the same object that was provided.\",\"testString\":\"assert(deepcopy(obj2) != obj2, 'Should not return the same object that was provided.');\"},{\"text\":\"When passed an object containing an array, should return a deep copy of the object.\",\"testString\":\"assert.deepEqual(deepcopy(obj2), obj2, 'When passed an object containing an array, should return a deep copy of the object.');\"},{\"text\":\"When passed an object containing another object, should return a deep copy of the object.\",\"testString\":\"assert.deepEqual(deepcopy(obj3), obj3, 'When passed an object containing another object, should return a deep copy of the object.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function deepcopy (obj) {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const obj1 = { test: 'test' };\\nconst obj2 = {\\n  t: 'test',\\n  a: ['an', 'array']\\n};\\nconst obj3 = {\\n  t: 'try',\\n  o: obj2\\n};\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/define-a-primitive-data-type\",\"id\":\"596a8888ab7c01048de257d5\"},\"slug\":\"/coding-interview-prep/rosetta-code/deepcopy\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-rosetta-code-deepcopy-b3e2f83fcdae6bf4ed4e.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Deepcopy\",\"description\":[\"Task:\",\"<p>Write a function that returns a deep copy of a given object.</p>\",\"<p>The copy must not be the same object that was given.</p>\",\"<p>This task will not test for: </p>\",\"Objects with properties that are functions\",\"Date objects or object with properties that are Date objects\",\"RegEx or object with properties that are RegEx objects\",\"Prototype copying\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/rosetta-code/deepcopy\",\"blockName\":\"Rosetta Code\",\"tests\":[{\"text\":\"<code>deepcopy</code> should be a function.\",\"testString\":\"assert(typeof deepcopy === 'function', '<code>deepcopy</code> should be a function.');\"},{\"text\":\"<code>deepcopy({test: \\\"test\\\"})</code> should return an object.\",\"testString\":\"assert(typeof deepcopy(obj1) === 'object', '<code>deepcopy({test: \\\"test\\\"})</code> should return an object.');\"},{\"text\":\"Should not return the same object that was provided.\",\"testString\":\"assert(deepcopy(obj2) != obj2, 'Should not return the same object that was provided.');\"},{\"text\":\"When passed an object containing an array, should return a deep copy of the object.\",\"testString\":\"assert.deepEqual(deepcopy(obj2), obj2, 'When passed an object containing an array, should return a deep copy of the object.');\"},{\"text\":\"When passed an object containing another object, should return a deep copy of the object.\",\"testString\":\"assert.deepEqual(deepcopy(obj3), obj3, 'When passed an object containing another object, should return a deep copy of the object.');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function deepcopy (obj) {\\n  // Good luck!\\n  return true;\\n}\",\"head\":\"\",\"tail\":\"const obj1 = { test: 'test' };\\nconst obj2 = {\\n  t: 'test',\\n  a: ['an', 'array']\\n};\\nconst obj3 = {\\n  t: 'try',\\n  o: obj2\\n};\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/rosetta-code/define-a-primitive-data-type\",\"id\":\"596a8888ab7c01048de257d5\"},\"slug\":\"/coding-interview-prep/rosetta-code/deepcopy\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-rosetta-code-deepcopy.json\n// module id = 3369\n// module chunks = 53208637389984"],"sourceRoot":""}