{"version":3,"sources":["webpack:///component---src-pages-index-js-03a2ebbd7fabe4e3f9c7.js","webpack:///./~/lodash/_createFind.js","webpack:///./~/lodash/find.js","webpack:///./~/lodash/findIndex.js","webpack:///./src/components/Map/Map.js","webpack:///./src/components/Map/components/Block.js","webpack:///./src/components/Map/components/SuperBlock.js","webpack:///./src/components/Map/components/dict.json","webpack:///./src/components/Map/index.js","webpack:///./src/components/Map/redux/index.js","webpack:///./src/components/icons/Caret.js","webpack:///./src/pages/index.js","webpack:///./src/templates/Challenges/components/icons/GreenNotCompleted.js"],"names":["webpackJsonp","4280","module","exports","__webpack_require__","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","Object","isArrayLike","iteratee","baseIteratee","keys","key","index","undefined","4343","findIndex","find","4344","array","length","toInteger","nativeMax","baseFindIndex","Math","max","910","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_react","_react2","_propTypes","_propTypes2","_uniq","_uniq2","_SuperBlock","_SuperBlock2","_Spacer","_Spacer2","_propTypes3","propTypes","introNodes","PropTypes","arrayOf","shape","fields","slug","string","isRequired","frontmatter","title","block","nodes","ChallengeNode","ShowMap","_PureComponent","this","apply","arguments","renderSuperBlocks","superBlocks","_props","props","map","superBlock","createElement","render","_ref","className","PureComponent","displayName","911","Block","_extends","assign","target","i","source","hasOwnProperty","_redux","_reactRedux","_reselect","_gatsbyLink","_gatsbyLink2","_analytics","_analytics2","_redux2","_app","_Caret","_Caret2","_GreenPass","_GreenPass2","_GreenNotCompleted","_GreenNotCompleted2","dict","mapStateToProps","state","ownProps","expandedSelector","makeExpandedBlockSelector","blockDashedName","createSelector","userSelector","isExpanded","_ref$completedChallen","completedChallenges","_ref2","id","mapDispatchToProps","dispatch","bindActionCreators","toggleBlock","challenges","intro","bool","func","mapIconStyle","height","marginRight","width","_len","Array","_key","_this","concat","handleBlockClick","bind","handleChallengeClick","renderChallenges","ga","event","category","action","renderCheckMark","isCompleted","style","_this2","challenge","forEach","item","chinese","english","completedClass","onClick","to","_props2","blockName","challengesWithCompleted","some","completedId","connect","912","toggleSuperBlock","createSuperBlockTitle","str","courseName","codingPrepRE","test","SuperBlock","_find","_find2","_Block","_Block2","makeExpandedSuperBlockSelector","RegExp","renderBlock","blocksForSuperBlock","filter","node","blockDashedNames","toLowerCase","split","join","181","913","_Map","_Map2","1236","281","reducer","getNS","_handleActions","_reduxActions","_stateManagment","ns","initialState","expandedState","Responsive Web Design","basic-html-and-html5","types","createTypes","createAction","handleActions","_extends2","payload","_extends3","550","Caret","viewBox","points","stroke","fill","strokeWidth","transform","1242","917","query","_reactHelmet","_reactHelmet2","data","challengeNode","allChallengeNode","AllChallengeNode","allMarkdownRemark","AllMarkdownRemark","IndexPage","_ref$data","edges","mdEdges","href","_ref3","_ref4","isPrivate","929","GreenNotCompleted","Fragment","xmlns","cx","cy","r","strokeDasharray","strokeLinecap","strokeLinejoin"],"mappings":"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","file":"component---src-pages-index-js-03a2ebbd7fabe4e3f9c7.js","sourcesContent":["webpackJsonp([35783957827783],{\n\n/***/ 4280:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseIteratee = __webpack_require__(61),\n\t    isArrayLike = __webpack_require__(86),\n\t    keys = __webpack_require__(73);\n\t\n\t/**\n\t * Creates a `_.find` or `_.findLast` function.\n\t *\n\t * @private\n\t * @param {Function} findIndexFunc The function to find the collection index.\n\t * @returns {Function} Returns the new find function.\n\t */\n\tfunction createFind(findIndexFunc) {\n\t  return function(collection, predicate, fromIndex) {\n\t    var iterable = Object(collection);\n\t    if (!isArrayLike(collection)) {\n\t      var iteratee = baseIteratee(predicate, 3);\n\t      collection = keys(collection);\n\t      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t    }\n\t    var index = findIndexFunc(collection, predicate, fromIndex);\n\t    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t  };\n\t}\n\t\n\tmodule.exports = createFind;\n\n\n/***/ }),\n\n/***/ 4343:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar createFind = __webpack_require__(4280),\n\t    findIndex = __webpack_require__(4344);\n\t\n\t/**\n\t * Iterates over elements of `collection`, returning the first element\n\t * `predicate` returns truthy for. The predicate is invoked with three\n\t * arguments: (value, index|key, collection).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Collection\n\t * @param {Array|Object} collection The collection to inspect.\n\t * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t * @param {number} [fromIndex=0] The index to search from.\n\t * @returns {*} Returns the matched element, else `undefined`.\n\t * @example\n\t *\n\t * var users = [\n\t *   { 'user': 'barney',  'age': 36, 'active': true },\n\t *   { 'user': 'fred',    'age': 40, 'active': false },\n\t *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t * ];\n\t *\n\t * _.find(users, function(o) { return o.age < 40; });\n\t * // => object for 'barney'\n\t *\n\t * // The `_.matches` iteratee shorthand.\n\t * _.find(users, { 'age': 1, 'active': true });\n\t * // => object for 'pebbles'\n\t *\n\t * // The `_.matchesProperty` iteratee shorthand.\n\t * _.find(users, ['active', false]);\n\t * // => object for 'fred'\n\t *\n\t * // The `_.property` iteratee shorthand.\n\t * _.find(users, 'active');\n\t * // => object for 'barney'\n\t */\n\tvar find = createFind(findIndex);\n\t\n\tmodule.exports = find;\n\n\n/***/ }),\n\n/***/ 4344:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseFindIndex = __webpack_require__(656),\n\t    baseIteratee = __webpack_require__(61),\n\t    toInteger = __webpack_require__(339);\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max;\n\t\n\t/**\n\t * This method is like `_.find` except that it returns the index of the first\n\t * element `predicate` returns truthy for instead of the element itself.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 1.1.0\n\t * @category Array\n\t * @param {Array} array The array to inspect.\n\t * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t * @param {number} [fromIndex=0] The index to search from.\n\t * @returns {number} Returns the index of the found element, else `-1`.\n\t * @example\n\t *\n\t * var users = [\n\t *   { 'user': 'barney',  'active': false },\n\t *   { 'user': 'fred',    'active': false },\n\t *   { 'user': 'pebbles', 'active': true }\n\t * ];\n\t *\n\t * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t * // => 0\n\t *\n\t * // The `_.matches` iteratee shorthand.\n\t * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t * // => 1\n\t *\n\t * // The `_.matchesProperty` iteratee shorthand.\n\t * _.findIndex(users, ['active', false]);\n\t * // => 0\n\t *\n\t * // The `_.property` iteratee shorthand.\n\t * _.findIndex(users, 'active');\n\t * // => 2\n\t */\n\tfunction findIndex(array, predicate, fromIndex) {\n\t  var length = array == null ? 0 : array.length;\n\t  if (!length) {\n\t    return -1;\n\t  }\n\t  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t  if (index < 0) {\n\t    index = nativeMax(length + index, 0);\n\t  }\n\t  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n\t}\n\t\n\tmodule.exports = findIndex;\n\n\n/***/ }),\n\n/***/ 910:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(4);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _uniq = __webpack_require__(479);\n\t\n\tvar _uniq2 = _interopRequireDefault(_uniq);\n\t\n\tvar _SuperBlock = __webpack_require__(912);\n\t\n\tvar _SuperBlock2 = _interopRequireDefault(_SuperBlock);\n\t\n\tvar _Spacer = __webpack_require__(168);\n\t\n\tvar _Spacer2 = _interopRequireDefault(_Spacer);\n\t\n\t__webpack_require__(1236);\n\t\n\tvar _propTypes3 = __webpack_require__(124);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar propTypes = {\n\t  introNodes: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t    fields: _propTypes2.default.shape({ slug: _propTypes2.default.string.isRequired }),\n\t    frontmatter: _propTypes2.default.shape({\n\t      title: _propTypes2.default.string.isRequired,\n\t      block: _propTypes2.default.string.isRequired\n\t    })\n\t  })),\n\t  nodes: _propTypes2.default.arrayOf(_propTypes3.ChallengeNode)\n\t};\n\t\n\tvar ShowMap = function (_PureComponent) {\n\t  _inherits(ShowMap, _PureComponent);\n\t\n\t  function ShowMap() {\n\t    _classCallCheck(this, ShowMap);\n\t\n\t    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n\t  }\n\t\n\t  ShowMap.prototype.renderSuperBlocks = function renderSuperBlocks(superBlocks) {\n\t    var _props = this.props,\n\t        nodes = _props.nodes,\n\t        introNodes = _props.introNodes;\n\t\n\t    return superBlocks.map(function (superBlock) {\n\t      return _react2.default.createElement(_SuperBlock2.default, {\n\t        introNodes: introNodes,\n\t        key: superBlock,\n\t        nodes: nodes,\n\t        superBlock: superBlock\n\t      });\n\t    });\n\t  };\n\t\n\t  ShowMap.prototype.render = function render() {\n\t    var nodes = this.props.nodes;\n\t\n\t    var superBlocks = (0, _uniq2.default)(nodes.map(function (_ref) {\n\t      var superBlock = _ref.superBlock;\n\t      return superBlock;\n\t    }));\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'map-ui' },\n\t      _react2.default.createElement(\n\t        'ul',\n\t        null,\n\t        this.renderSuperBlocks(superBlocks),\n\t        _react2.default.createElement(_Spacer2.default, null)\n\t      )\n\t    );\n\t  };\n\t\n\t  return ShowMap;\n\t}(_react.PureComponent);\n\t\n\tShowMap.displayName = 'Map';\n\tShowMap.propTypes = propTypes;\n\t\n\texports.default = ShowMap;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 911:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.Block = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(4);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _redux = __webpack_require__(27);\n\t\n\tvar _reactRedux = __webpack_require__(21);\n\t\n\tvar _reselect = __webpack_require__(46);\n\t\n\tvar _gatsbyLink = __webpack_require__(223);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _analytics = __webpack_require__(79);\n\t\n\tvar _analytics2 = _interopRequireDefault(_analytics);\n\t\n\tvar _redux2 = __webpack_require__(281);\n\t\n\tvar _app = __webpack_require__(56);\n\t\n\tvar _Caret = __webpack_require__(550);\n\t\n\tvar _Caret2 = _interopRequireDefault(_Caret);\n\t\n\tvar _GreenPass = __webpack_require__(169);\n\t\n\tvar _GreenPass2 = _interopRequireDefault(_GreenPass);\n\t\n\tvar _GreenNotCompleted = __webpack_require__(929);\n\t\n\tvar _GreenNotCompleted2 = _interopRequireDefault(_GreenNotCompleted);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t/* eslint-disable max-len */\n\t\n\t\n\tvar dict = __webpack_require__(181);\n\t/* eslint-enable max-len */\n\tvar mapStateToProps = function mapStateToProps(state, ownProps) {\n\t  var expandedSelector = (0, _redux2.makeExpandedBlockSelector)(ownProps.blockDashedName);\n\t\n\t  return (0, _reselect.createSelector)(expandedSelector, _app.userSelector, function (isExpanded, _ref) {\n\t    var _ref$completedChallen = _ref.completedChallenges,\n\t        completedChallenges = _ref$completedChallen === undefined ? [] : _ref$completedChallen;\n\t    return {\n\t      isExpanded: isExpanded,\n\t      completedChallenges: completedChallenges.map(function (_ref2) {\n\t        var id = _ref2.id;\n\t        return id;\n\t      })\n\t    };\n\t  })(state);\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return (0, _redux.bindActionCreators)({ toggleBlock: _redux2.toggleBlock }, dispatch);\n\t};\n\t\n\tvar propTypes = {\n\t  blockDashedName: _propTypes2.default.string,\n\t  challenges: _propTypes2.default.array,\n\t  completedChallenges: _propTypes2.default.arrayOf(_propTypes2.default.string),\n\t  intro: _propTypes2.default.shape({\n\t    fields: _propTypes2.default.shape({ slug: _propTypes2.default.string.isRequired }),\n\t    frontmatter: _propTypes2.default.shape({\n\t      title: _propTypes2.default.string.isRequired,\n\t      block: _propTypes2.default.string.isRequired\n\t    })\n\t  }),\n\t  isExpanded: _propTypes2.default.bool,\n\t  toggleBlock: _propTypes2.default.func.isRequired\n\t};\n\t\n\tvar mapIconStyle = { height: '15px', marginRight: '10px', width: '15px' };\n\t\n\tvar Block = exports.Block = function (_PureComponent) {\n\t  _inherits(Block, _PureComponent);\n\t\n\t  function Block() {\n\t    _classCallCheck(this, Block);\n\t\n\t    for (var _len = arguments.length, props = Array(_len), _key = 0; _key < _len; _key++) {\n\t      props[_key] = arguments[_key];\n\t    }\n\t\n\t    var _this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(props)));\n\t\n\t    _this.handleBlockClick = _this.handleBlockClick.bind(_this);\n\t    _this.handleChallengeClick = _this.handleChallengeClick.bind(_this);\n\t    _this.renderChallenges = _this.renderChallenges.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  Block.prototype.handleBlockClick = function handleBlockClick() {\n\t    var _props = this.props,\n\t        blockDashedName = _props.blockDashedName,\n\t        toggleBlock = _props.toggleBlock;\n\t\n\t    _analytics2.default.event({\n\t      category: 'Map Block Click',\n\t      action: blockDashedName\n\t    });\n\t    return toggleBlock(blockDashedName);\n\t  };\n\t\n\t  Block.prototype.handleChallengeClick = function handleChallengeClick(slug) {\n\t    return function () {\n\t      return _analytics2.default.event({\n\t        category: 'Map Challenge Click',\n\t        action: slug\n\t      });\n\t    };\n\t  };\n\t\n\t  Block.prototype.renderCheckMark = function renderCheckMark(isCompleted) {\n\t    return isCompleted ? _react2.default.createElement(_GreenPass2.default, { style: mapIconStyle }) : _react2.default.createElement(_GreenNotCompleted2.default, { style: mapIconStyle });\n\t  };\n\t\n\t  Block.prototype.renderChallenges = function renderChallenges() {\n\t    var _this2 = this;\n\t\n\t    var intro = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    var challenges = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\n\t    // TODO: Split this into a Challenge Component and add tests\n\t    // TODO: The styles badge and map-badge on the completion span do not exist\n\t    return [intro].concat(challenges).map(function (challenge, i) {\n\t      dict.forEach(function (item) {\n\t        if (challenge.title && item.chinese && challenge.title == item.english) {\n\t          challenge.title = item.chinese;\n\t        }\n\t        if (challenge.frontmatter && item.chinese && challenge.frontmatter.title == item.english) {\n\t          challenge.frontmatter.title = item.chinese;\n\t        }\n\t      });\n\t      var completedClass = challenge.isCompleted ? ' map-challenge-title-completed' : '';\n\t      return _react2.default.createElement(\n\t        'li',\n\t        {\n\t          className: 'map-challenge-title' + completedClass,\n\t          key: 'map-challenge' + challenge.fields.slug\n\t        },\n\t        _react2.default.createElement(\n\t          'span',\n\t          { className: 'badge map-badge' },\n\t          i !== 0 && _this2.renderCheckMark(challenge.isCompleted)\n\t        ),\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          {\n\t            onClick: _this2.handleChallengeClick(challenge.fields.slug),\n\t            to: challenge.fields.slug\n\t          },\n\t          challenge.title || challenge.frontmatter.title\n\t        )\n\t      );\n\t    });\n\t  };\n\t\n\t  Block.prototype.render = function render() {\n\t    var _props2 = this.props,\n\t        completedChallenges = _props2.completedChallenges,\n\t        challenges = _props2.challenges,\n\t        isExpanded = _props2.isExpanded,\n\t        intro = _props2.intro;\n\t    var blockName = challenges[0].fields.blockName;\n\t\n\t    var chinese;\n\t    dict.forEach(function (item) {\n\t      if (item.english == blockName) {\n\t        chinese = item.chinese;\n\t      }\n\t    });\n\t    var challengesWithCompleted = challenges.map(function (challenge) {\n\t      var id = challenge.id;\n\t\n\t      var isCompleted = completedChallenges.some(function (completedId) {\n\t        return id === completedId;\n\t      });\n\t      return _extends({}, challenge, { isCompleted: isCompleted });\n\t    });\n\t    return _react2.default.createElement(\n\t      'li',\n\t      { className: 'block ' + (isExpanded ? 'open' : '') },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'map-title', onClick: this.handleBlockClick },\n\t        _react2.default.createElement(_Caret2.default, null),\n\t        _react2.default.createElement(\n\t          'h5',\n\t          null,\n\t          chinese\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'ul',\n\t        null,\n\t        isExpanded ? this.renderChallenges(intro, challengesWithCompleted) : null\n\t      )\n\t    );\n\t  };\n\t\n\t  return Block;\n\t}(_react.PureComponent);\n\t\n\tBlock.displayName = 'Block';\n\tBlock.propTypes = propTypes;\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Block);\n\n/***/ }),\n\n/***/ 912:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.SuperBlock = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(4);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _redux = __webpack_require__(27);\n\t\n\tvar _reactRedux = __webpack_require__(21);\n\t\n\tvar _reselect = __webpack_require__(46);\n\t\n\tvar _uniq = __webpack_require__(479);\n\t\n\tvar _uniq2 = _interopRequireDefault(_uniq);\n\t\n\tvar _find = __webpack_require__(4343);\n\t\n\tvar _find2 = _interopRequireDefault(_find);\n\t\n\tvar _Block = __webpack_require__(911);\n\t\n\tvar _Block2 = _interopRequireDefault(_Block);\n\t\n\tvar _redux2 = __webpack_require__(281);\n\t\n\tvar _Caret = __webpack_require__(550);\n\t\n\tvar _Caret2 = _interopRequireDefault(_Caret);\n\t\n\tvar _propTypes3 = __webpack_require__(124);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar dict = __webpack_require__(181);\n\t\n\tvar mapStateToProps = function mapStateToProps(state, ownProps) {\n\t  var expandedSelector = (0, _redux2.makeExpandedSuperBlockSelector)(ownProps.superBlock);\n\t\n\t  return (0, _reselect.createSelector)(expandedSelector, function (isExpanded) {\n\t    return { isExpanded: isExpanded };\n\t  })(state);\n\t};\n\t\n\tfunction mapDispatchToProps(dispatch) {\n\t  return (0, _redux.bindActionCreators)({\n\t    toggleSuperBlock: _redux2.toggleSuperBlock\n\t  }, dispatch);\n\t}\n\t\n\tvar propTypes = {\n\t  introNodes: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t    fields: _propTypes2.default.shape({ slug: _propTypes2.default.string.isRequired }),\n\t    frontmatter: _propTypes2.default.shape({\n\t      title: _propTypes2.default.string.isRequired,\n\t      block: _propTypes2.default.string.isRequired\n\t    })\n\t  })),\n\t  isExpanded: _propTypes2.default.bool,\n\t  nodes: _propTypes2.default.arrayOf(_propTypes3.ChallengeNode),\n\t  superBlock: _propTypes2.default.string,\n\t  toggleSuperBlock: _propTypes2.default.func.isRequired\n\t};\n\t\n\tvar codingPrepRE = new RegExp('Interview Prep');\n\t\n\tfunction createSuperBlockTitle(str) {\n\t  var courseName = void 0;\n\t  dict.forEach(function (item) {\n\t    if (item.english == str) {\n\t      courseName = item.chinese;\n\t    }\n\t  });\n\t  return codingPrepRE.test(str) ? courseName + ' (\\u6570\\u5343\\u4E2A\\u5C0F\\u65F6)' : courseName + ' (300\\u4E2A\\u5C0F\\u65F6)';\n\t}\n\t\n\tvar SuperBlock = exports.SuperBlock = function (_PureComponent) {\n\t  _inherits(SuperBlock, _PureComponent);\n\t\n\t  function SuperBlock() {\n\t    _classCallCheck(this, SuperBlock);\n\t\n\t    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));\n\t  }\n\t\n\t  SuperBlock.prototype.renderBlock = function renderBlock(superBlock) {\n\t    var _props = this.props,\n\t        nodes = _props.nodes,\n\t        introNodes = _props.introNodes;\n\t\n\t    var blocksForSuperBlock = nodes.filter(function (node) {\n\t      return node.superBlock === superBlock;\n\t    });\n\t    var blockDashedNames = (0, _uniq2.default)(blocksForSuperBlock.map(function (_ref) {\n\t      var block = _ref.block;\n\t      return block;\n\t    }));\n\t    return _react2.default.createElement(\n\t      'ul',\n\t      null,\n\t      blockDashedNames.map(function (blockDashedName) {\n\t        return _react2.default.createElement(_Block2.default, {\n\t          blockDashedName: blockDashedName,\n\t          challenges: blocksForSuperBlock.filter(function (node) {\n\t            return node.block === blockDashedName;\n\t          }),\n\t          intro: (0, _find2.default)(introNodes, function (_ref2) {\n\t            var block = _ref2.frontmatter.block;\n\t            return block.toLowerCase().split(' ').join('-') === blockDashedName;\n\t          }),\n\t          key: blockDashedName\n\t        });\n\t      })\n\t    );\n\t  };\n\t\n\t  SuperBlock.prototype.render = function render() {\n\t    var _props2 = this.props,\n\t        superBlock = _props2.superBlock,\n\t        isExpanded = _props2.isExpanded,\n\t        toggleSuperBlock = _props2.toggleSuperBlock;\n\t\n\t    return _react2.default.createElement(\n\t      'li',\n\t      { className: 'superblock ' + (isExpanded ? 'open' : '') },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'map-title', onClick: function onClick() {\n\t            return toggleSuperBlock(superBlock);\n\t          } },\n\t        _react2.default.createElement(_Caret2.default, null),\n\t        _react2.default.createElement(\n\t          'h4',\n\t          null,\n\t          createSuperBlockTitle(superBlock)\n\t        )\n\t      ),\n\t      isExpanded ? this.renderBlock(superBlock) : null\n\t    );\n\t  };\n\t\n\t  return SuperBlock;\n\t}(_react.PureComponent);\n\t\n\tSuperBlock.displayName = 'SuperBlock';\n\tSuperBlock.propTypes = propTypes;\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SuperBlock);\n\n/***/ }),\n\n/***/ 181:\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"english\":\"Responsive Web Design\",\"chinese\":\"响应式 Web 设计\"},{\"english\":\"Javascript Algorithms And Data Structures\",\"chinese\":\"算法和数据结构\"},{\"english\":\"Front End Libraries\",\"chinese\":\"前端库和框架\"},{\"english\":\"Data Visualization\",\"chinese\":\"数据可视化\"},{\"english\":\"Apis And Microservices\",\"chinese\":\"API 和微服务\"},{\"english\":\"Information Security And Quality Assurance\",\"chinese\":\"信息安全和质量保证\"},{\"english\":\"Coding Interview Prep\",\"chinese\":\"面试攻略\"},{\"english\":\"Basic HTML and HTML5\",\"chinese\":\"HTML 基础\"},{\"english\":\"Basic CSS\",\"chinese\":\"CSS 基础\"},{\"english\":\"Applied Visual Design\",\"chinese\":\"应用视觉设计\"},{\"english\":\"Applied Accessibility\",\"chinese\":\"应用无障碍\"},{\"english\":\"Responsive Web Design Principles\",\"chinese\":\"响应式 Web 设计原则\"},{\"english\":\"CSS Flexbox\",\"chinese\":\"CSS 弹性盒子\"},{\"english\":\"CSS Grid\",\"chinese\":\"CSS 网格\"},{\"english\":\"Responsive Web Design Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Basic JavaScript\",\"chinese\":\"JavaScript 基础\"},{\"english\":\"ES6\",\"chinese\":\"ES6\"},{\"english\":\"Regular Expressions\",\"chinese\":\"正则表达式\"},{\"english\":\"Debugging\",\"chinese\":\"调试\"},{\"english\":\"Basic Data Structures\",\"chinese\":\"数据结构基础\"},{\"english\":\"Basic Algorithm Scripting\",\"chinese\":\"算法基础\"},{\"english\":\"Object Oriented Programming\",\"chinese\":\"面向对象编程\"},{\"english\":\"Functional Programming\",\"chinese\":\"函数式编程\"},{\"english\":\"Intermediate Algorithm Scripting\",\"chinese\":\"算法中级\"},{\"english\":\"JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Bootstrap\",\"chinese\":\"Bootstrap\"},{\"english\":\"jQuery\",\"chinese\":\"jQuery\"},{\"english\":\"Sass\",\"chinese\":\"Sass\"},{\"english\":\"React\",\"chinese\":\"React\"},{\"english\":\"Redux\",\"chinese\":\"Redux\"},{\"english\":\"React and Redux\",\"chinese\":\"React 和 Redux\"},{\"english\":\"Front End Libraries Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Data Visualization with D3\",\"chinese\":\"用 D3 实现数据可视化\"},{\"english\":\"JSON APIs and Ajax\",\"chinese\":\"JSON 和 Ajax\"},{\"english\":\"Data Visualization Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Managing Packages with Npm\",\"chinese\":\"用 Npm 来管理模块\"},{\"english\":\"Basic Node and Express\",\"chinese\":\"Node 和 Express 基础\"},{\"english\":\"MongoDB and Mongoose\",\"chinese\":\"MongoDB 和 Mongoose\"},{\"english\":\"Apis and Microservices Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Information Security with HelmetJS\",\"chinese\":\"信息安全——Helmet.js\"},{\"english\":\"Quality Assurance and Testing with Chai\",\"chinese\":\"质量保证和测试——Chai.js\"},{\"english\":\"Advanced Node and Express\",\"chinese\":\"Node 和 Express 高级\"},{\"english\":\"Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Algorithms\",\"chinese\":\"算法\"},{\"english\":\"Data Structures\",\"chinese\":\"数据结构\"},{\"english\":\"Take Home Projects\",\"chinese\":\"私人项目\"},{\"english\":\"Rosetta Code\",\"chinese\":\"罗塞塔代码\"},{\"english\":\"Project Euler\",\"chinese\":\"欧拉计划\"},{\"english\":\"Introduction to Basic HTML and HTML5\",\"chinese\":\"HTML 基础介绍\"},{\"english\":\"Say Hello to HTML Elements\",\"chinese\":\"向 HTML 元素问好\"},{\"english\":\"Headline with the h2 Element\",\"chinese\":\"用 h2 元素代表副标题\"},{\"english\":\"Inform with the Paragraph Element\",\"chinese\":\"用 p 元素代表段落\"},{\"english\":\"Fill in the Blank with Placeholder Text\",\"chinese\":\"用占位符文本填充空白\"},{\"english\":\"Uncomment HTML\",\"chinese\":\"去除 HTML 的注释\"},{\"english\":\"Comment out HTML\",\"chinese\":\"给 HTML 添加注释\"},{\"english\":\"Delete HTML Elements\",\"chinese\":\"删除 HTML 元素\"},{\"english\":\"Introduction to HTML5 Elements\",\"chinese\":\"HTML5 元素介绍\"},{\"english\":\"Add Images to Your Website\",\"chinese\":\"给网站添加图片\"},{\"english\":\"Link to External Pages with Anchor Elements\",\"chinese\":\"用锚点实现网页间的跳转\"},{\"english\":\"Link to Internal Sections of a Page with Anchor Elements\",\"chinese\":\"用锚点实现网页内部跳转\"},{\"english\":\"Nest an Anchor Element within a Paragraph\",\"chinese\":\"将锚点嵌套在段落中\"},{\"english\":\"Make Dead Links Using the Hash Symbol\",\"chinese\":\"用 # 号来创建固定链接\"},{\"english\":\"Turn an Image into a Link\",\"chinese\":\"给图片添加链接\"},{\"english\":\"Create a Bulleted Unordered List\",\"chinese\":\"创建一个无序列表\"},{\"english\":\"Create an Ordered List\",\"chinese\":\"创建一个有序列表\"},{\"english\":\"Create a Text Field\",\"chinese\":\"创建一个输入框\"},{\"english\":\"Add Placeholder Text to a Text Field\",\"chinese\":\"给输入框添加占位符文本\"},{\"english\":\"Create a Form Element\",\"chinese\":\"创建一个表单\"},{\"english\":\"Add a Submit Button to a Form\",\"chinese\":\"给表单添加提交按钮\"},{\"english\":\"Use HTML5 to Require a Field\",\"chinese\":\"给表单添加一个必填字段\"},{\"english\":\"Create a Set of Radio Buttons\",\"chinese\":\"创建一组单选按钮\"},{\"english\":\"Create a Set of Checkboxes\",\"chinese\":\"创建一组复选框\"},{\"english\":\"Check Radio Buttons and Checkboxes by Default\",\"chinese\":\"给单选按钮和复选框添加默认选中项\"},{\"english\":\"Nest Many Elements within a Single div Element\",\"chinese\":\"元素嵌套\"},{\"english\":\"Declare the Doctype of an HTML Document\",\"chinese\":\"声明 HTML 文档的文档类型\"},{\"english\":\"Define the Head and Body of an HTML Document\",\"chinese\":\"定义 HTML 文档的标题和正文\"},{\"english\":\"Introduction to Basic CSS\",\"chinese\":\"CSS 基础介绍\"},{\"english\":\"Change the Color of Text\",\"chinese\":\"更改文本的颜色\"},{\"english\":\"Use CSS Selectors to Style Elements\",\"chinese\":\"使用元素选择器来设置元素的样式\"},{\"english\":\"Use a CSS Class to Style an Element\",\"chinese\":\"使用 class 选择器设置单个元素的样式\"},{\"english\":\"Style Multiple Elements with a CSS Class\",\"chinese\":\"使用 class 选择器设置多个元素的样式\"},{\"english\":\"Change the Font Size of an Element\",\"chinese\":\"更改元素的字体大小\"},{\"english\":\"Set the Font Family of an Element\",\"chinese\":\"设置元素的字体家族\"},{\"english\":\"Import a Google Font\",\"chinese\":\"引入谷歌字体\"},{\"english\":\"Specify How Fonts Should Degrade\",\"chinese\":\"字体如何优雅降级\"},{\"english\":\"Size Your Images\",\"chinese\":\"调整图片的大小\"},{\"english\":\"Add Borders Around Your Elements\",\"chinese\":\"在元素周围添加边框\"},{\"english\":\"Add Rounded Corners with border-radius\",\"chinese\":\"用 border-radius 添加圆角边框\"},{\"english\":\"Make Circular Images with a border-radius\",\"chinese\":\"用 border-radius 制作圆形图片\"},{\"english\":\"Give a Background Color to a div Element\",\"chinese\":\"给 div 元素添加背景色\"},{\"english\":\"Set the id of an Element\",\"chinese\":\"设置元素的 id\"},{\"english\":\"Use an id Attribute to Style an Element\",\"chinese\":\"使用 id 属性来设定元素的样式\"},{\"english\":\"Adjust the Padding of an Element\",\"chinese\":\"调整元素的内边距\"},{\"english\":\"Adjust the Margin of an Element\",\"chinese\":\"调整元素的外边距\"},{\"english\":\"Add a Negative Margin to an Element\",\"chinese\":\"给元素添加负外边距\"},{\"english\":\"Add Different Padding to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的内边距\"},{\"english\":\"Add Different Margins to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的外边距\"},{\"english\":\"Use Clockwise Notation to Specify the Padding of an Element\",\"chinese\":\"使用顺时针方向指定元素的内边距\"},{\"english\":\"Use Clockwise Notation to Specify the Margin of an Element\",\"chinese\":\"使用顺时针方向指定元素的外边距\"},{\"english\":\"Use Attribute Selectors to Style Elements\",\"chinese\":\"使用属性选择器来设置元素的样式\"},{\"english\":\"Understand Absolute versus Relative Units\",\"chinese\":\"理解绝对单位与相对单位\"},{\"english\":\"Style the HTML Body Element\",\"chinese\":\"给 HTML 的 Body 元素添加样式\"},{\"english\":\"Inherit Styles from the Body Element\",\"chinese\":\"从 Body 元素继承样式\"},{\"english\":\"Prioritize One Style Over Another\",\"chinese\":\"样式中的优先级\"},{\"english\":\"Override Styles in Subsequent CSS\",\"chinese\":\"Class 选择器的优先级高于继承样式\"},{\"english\":\"Override Class Declarations by Styling ID Attributes\",\"chinese\":\"ID 选择器优先级高于 Class 选择器\"},{\"english\":\"Override Class Declarations with Inline Styles\",\"chinese\":\"内联样式的优先级高于 ID 选择器\"},{\"english\":\"Override All Other Styles by using Important\",\"chinese\":\"Important 的优先级最高\"},{\"english\":\"Use Hex Code for Specific Colors\",\"chinese\":\"使用十六进制编码获得指定颜色\"},{\"english\":\"Use Hex Code to Mix Colors\",\"chinese\":\"使用十六进制编码混合颜色\"},{\"english\":\"Use Abbreviated Hex Code\",\"chinese\":\"使用缩写的十六进制编码\"},{\"english\":\"Use RGB values to Color Elements\",\"chinese\":\"使用 RGB 值为元素上色\"},{\"english\":\"Use RGB to Mix Colors\",\"chinese\":\"使用 RGB 混合颜色\"},{\"english\":\"Use CSS Variables to change several elements at once\",\"chinese\":\"使用 CSS 变量一次更改多个元素\"},{\"english\":\"Create a custom CSS Variable\",\"chinese\":\"创建一个自定义的 CSS 变量\"},{\"english\":\"Use a custom CSS Variable\",\"chinese\":\"使用一个自定义的 CSS 变量\"},{\"english\":\"Attach a Fallback value to a CSS Variable\",\"chinese\":\"给 CSS 变量附加回退值\"},{\"english\":\"Cascading CSS variables\",\"chinese\":\"层级 CSS 变量\"},{\"english\":\"Change a variable for a specific area\",\"chinese\":\"更改特定区域的变量\"},{\"english\":\"Use a media query to change a variable\",\"chinese\":\"使用媒体查询更改变量\"},{\"english\":\"Introduction to the Applied Visual Design Challenges\",\"chinese\":\"应用视觉设计介绍\"},{\"english\":\"Create Visual Balance Using the text-align Property\",\"chinese\":\"使用 text-align 属性创建视觉平衡\"},{\"english\":\"Adjust the Width of an Element Using the width Property\",\"chinese\":\"使用 width 属性调整元素的宽度\"},{\"english\":\"Adjust the Height of an Element Using the height Property\",\"chinese\":\"使用 height 属性调整元素的宽度\"},{\"english\":\"Use the strong Tag to Make Text Bold\",\"chinese\":\"使用 strong 标签加粗文本\"},{\"english\":\"Use the u Tag to Underline Text\",\"chinese\":\"使用 u 标签给文本添加下划线\"},{\"english\":\"Use the em Tag to Italicize Text\",\"chinese\":\"使用 em 标签强调文本\"},{\"english\":\"Use the s Tag to Strikethrough Text\",\"chinese\":\"使用 s 标签给文本添加删除线\"},{\"english\":\"Create a Horizontal Line Using the hr Element\",\"chinese\":\"使用 hr 标签创建水平线\"},{\"english\":\"Adjust the background-color Property of Text\",\"chinese\":\"调整文本的背景色\"},{\"english\":\"Adjust the Size of a Header Versus a Paragraph Tag\",\"chinese\":\"调整标题与段落的大小\"},{\"english\":\"Add a box-shadow to a Card-like Element\",\"chinese\":\"给卡片元素添加 box-shadow\"},{\"english\":\"Decrease the Opacity of an Element\",\"chinese\":\"降低元素的 opactiy\"},{\"english\":\"Use the text-transform Property to Make Text Uppercase\",\"chinese\":\"使用 text-transform 属性给文本添加大写效果\"},{\"english\":\"Set the font-size for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-size\"},{\"english\":\"Set the font-weight for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-weight\"},{\"english\":\"Set the font-size of Paragraph Text\",\"chinese\":\"设置段落文本的 font-size\"},{\"english\":\"Set the line-height of Paragraphs\",\"chinese\":\"设置段落的 line-height\"},{\"english\":\"Adjust the Hover State of an Anchor Tag\",\"chinese\":\"调整锚点的悬停状态\"},{\"english\":\"Change an Element's Relative Position\",\"chinese\":\"更改元素的相对位置\"},{\"english\":\"Move a Relatively Positioned Element with CSS Offsets\",\"chinese\":\"使用 CSS 偏移移动相对定位的元素\"},{\"english\":\"Lock an Element to its Parent with Absolute Positioning\",\"chinese\":\"绝对定位的参照物是元素的父元素\"},{\"english\":\"Lock an Element to the Browser Window with Fixed Positioning\",\"chinese\":\"固定定位的参照物是浏览器的窗口\"},{\"english\":\"Push Elements Left or Right with the float Property\",\"chinese\":\"使用 float 属性将元素左浮动或右浮动\"},{\"english\":\"Change the Position of Overlapping Elements with the z-index Property\",\"chinese\":\"使用 z-index 属性更改重叠元素的位置\"},{\"english\":\"Center an Element Horizontally Using the margin Property\",\"chinese\":\"使用 margin 属性将元素水平居中\"},{\"english\":\"Learn about Complementary Colors\",\"chinese\":\"了解互补色\"},{\"english\":\"Learn about Tertiary Colors\",\"chinese\":\"了解三原色\"},{\"english\":\"Adjust the Color of Various Elements to Complementary Colors\",\"chinese\":\"将各种元素的颜色调整为互补色\"},{\"english\":\"Adjust the Hue of a Color\",\"chinese\":\"调整颜色的色相\"},{\"english\":\"Adjust the Tone of a Color\",\"chinese\":\"调整颜色的色调\"},{\"english\":\"Create a Gradual CSS Linear Gradient\",\"chinese\":\"创建一个 CSS 线性渐变\"},{\"english\":\"Use a CSS Linear Gradient to Create a Striped Element\",\"chinese\":\"使用 CSS 线性渐变创建条纹元素\"},{\"english\":\"Create Texture by Adding a Subtle Pattern as a Background Image\",\"chinese\":\"通过添加细微图案作为背景图像来创建纹理\"},{\"english\":\"Use the CSS Transform scale Property to Change the Size of an Element\",\"chinese\":\"使用 CSS Transform scale 属性可以更改元素的大小\"},{\"english\":\"Use the CSS Transform scale Property to Scale an Element on Hover\",\"chinese\":\"使用CSS Transform scale 属性在悬停时缩放元素\"},{\"english\":\"Use the CSS Transform Property skewX to Skew an Element Along the X-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿X轴倾斜元素\"},{\"english\":\"Use the CSS Transform Property skewY to Skew an Element Along the Y-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿Y轴倾斜元素\"},{\"english\":\"Create a Graphic Using CSS\",\"chinese\":\"使用 CSS 创建一个图形\"},{\"english\":\"Create a More Complex Shape Using CSS and HTML\",\"chinese\":\"使用 CSS 和 HTML 创建更复杂的形状\"},{\"english\":\"Learn How the CSS @keyframes and animation Properties Work\",\"chinese\":\"了解 CSS 的关键帧和动画是如何工作的\"},{\"english\":\"Use CSS Animation to Change the Hover State of a Button\",\"chinese\":\"使用CSS动画更改按钮的悬停状态\"},{\"english\":\"Modify Fill Mode of an Animation\",\"chinese\":\"修改动画的填充模式\"},{\"english\":\"Create Movement Using CSS Animation\",\"chinese\":\"使用 CSS 动画创建运动\"},{\"english\":\"Create Visual Direction by Fading an Element from Left to Right\",\"chinese\":\"通过从左到右淡化元素来创建视觉方向\"},{\"english\":\"Animate Elements Continually Using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作永不停止的动画\"},{\"english\":\"Make a CSS Heartbeat using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作 CSS 心跳\"},{\"english\":\"Animate Elements at Variable Rates\",\"chinese\":\"以可变速率来给元素添加动画\"},{\"english\":\"Animate Multiple Elements at Variable Rates\",\"chinese\":\"以可变速率来给多个元素添加动画\"},{\"english\":\"Change Animation Timing with Keywords\",\"chinese\":\"使用关键字更改动画定时器\"},{\"english\":\"Learn How Bezier Curves Work\",\"chinese\":\"学习贝塞尔曲线的原理\"},{\"english\":\"Use a Bezier Curve to Move a Graphic\",\"chinese\":\"使用贝塞尔曲线移动图形\"},{\"english\":\"Make Motion More Natural Using a Bezier Curve\",\"chinese\":\"使用贝塞尔曲线让运动更加自然\"},{\"english\":\"Introduction to the Applied Accessibility Challenges\",\"chinese\":\"应用无障碍介绍\"},{\"english\":\"Add a Text Alternative to Images for Visually Impaired Accessibility\",\"chinese\":\"为视觉受损的用户添加替代图像的文本\"},{\"english\":\"Know When Alt Text Should be Left Blank\",\"chinese\":\"知道 Alt 文本何时应该留空\"},{\"english\":\"Use Headings to Show Hierarchical Relationships of Content\",\"chinese\":\"使用标题显示内容的层次关系\"},{\"english\":\"Jump Straight to the Content Using the main Element\",\"chinese\":\"使用 main 元素包裹主题内容\"},{\"english\":\"Wrap Content in the article Element\",\"chinese\":\"使用 article 元素包裹文章内容\"},{\"english\":\"Make Screen Reader Navigation Easier with the header Landmark\",\"chinese\":\"使用 header 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the nav Landmark\",\"chinese\":\"使用 nav 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the footer Landmark\",\"chinese\":\"使用 footer 元素使屏幕阅读器更容易导航\"},{\"english\":\"Improve Accessibility of Audio Content with the audio Element\",\"chinese\":\"使用 audio 元素提高音频内容的可访问性\"},{\"english\":\"Improve Chart Accessibility with the figure Element\",\"chinese\":\"使用 figure 元素提高图表的可访问性\"},{\"english\":\"Improve Form Field Accessibility with the label Element\",\"chinese\":\"使用 label 元素提高表单的可访问性\"},{\"english\":\"Wrap Radio Buttons in a fieldset Element for Better Accessibility\",\"chinese\":\"将单选按钮包裹在 fieldset 元素中以获得更好的可访问性\"},{\"english\":\"Add an Accessible Date Picker\",\"chinese\":\"添加可访问的日期选择器\"},{\"english\":\"Standardize Times with the HTML5 datetime Attribute\",\"chinese\":\"使用 HTML5 的 datatime 属性标准化时间\"},{\"english\":\"Make Elements Only Visible to a Screen Reader by Using Custom CSS\",\"chinese\":\"使用自定义 CSS 让元素仅对屏幕阅读器可见\"},{\"english\":\"Improve Readability with High Contrast Text\",\"chinese\":\"使用高对比度文本提高可读性\"},{\"english\":\"Avoid Colorblindness Issues by Using Sufficient Contrast\",\"chinese\":\"通过使用充足的对比度避免色盲问题\"},{\"english\":\"Avoid Colorblindness Issues by Carefully Choosing Colors that Convey Information\",\"chinese\":\"通过仔细选择传达信息的颜色来避免色盲问题\"},{\"english\":\"Give Links Meaning by Using Descriptive Link Text\",\"chinese\":\"使用描述性链接文本赋予链接含义\"},{\"english\":\"Make Links Navigatable with HTML Access Keys\",\"chinese\":\"通过给元素添加 accesskey 属性来让用户可以在链接之间快速导航\"},{\"english\":\"Use tabindex to Add Keyboard Focus to an Element\",\"chinese\":\"使用 tabindex 将键盘焦点添加到元素中\"},{\"english\":\"Use tabindex to Specify the Order of Keyboard Focus for Several Elements\",\"chinese\":\"使用 tabindex 指定多个元素的键盘焦点顺序\"},{\"english\":\"Introduction to the Responsive Web Design Challenges\",\"chinese\":\"响应式 Web 设计介绍\"},{\"english\":\"Create a Media Query\",\"chinese\":\"创建一个媒介查询\"},{\"english\":\"Make an Image Responsive\",\"chinese\":\"使图片根据设备尺寸自如响应\"},{\"english\":\"Use a Retina Image for Higher Resolution Displays\",\"chinese\":\"针对高分辨率屏幕应使用视网膜图片\"},{\"english\":\"Make Typography Responsive\",\"chinese\":\"使排版根据设备尺寸自如响应\"},{\"english\":\"Introduction to the CSS Flexbox Challenges\",\"chinese\":\"CSS弹性盒子介绍\"},{\"english\":\"Use display: flex to Position Two Boxes\",\"chinese\":\"使用 display: flex 定位两个盒子\"},{\"english\":\"Add Flex Superpowers to the Tweet Embed\",\"chinese\":\"在推文中添加弹性盒子布局\"},{\"english\":\"Use the flex-direction Property to Make a Row\",\"chinese\":\"使用 flex-direction 属性创建一行\"},{\"english\":\"Apply the flex-direction Property to Create Rows in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多行\"},{\"english\":\"Use the flex-direction Property to Make a Column\",\"chinese\":\"使用 flex-direction 属性创建一列\"},{\"english\":\"Apply the flex-direction Property to Create a Column in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多列\"},{\"english\":\"Align Elements Using the justify-content Property\",\"chinese\":\"使用 justify-content 属性对齐元素\"},{\"english\":\"Use the justify-content Property in the Tweet Embed\",\"chinese\":\"在推文中使用 justify-content 属性\"},{\"english\":\"Align Elements Using the align-items Property\",\"chinese\":\"使用 align-items 属性对齐元素\"},{\"english\":\"Use the align-items Property in the Tweet Embed\",\"chinese\":\"在推文中使用 align-items 属性\"},{\"english\":\"Use the flex-wrap Property to Wrap a Row or Column\",\"chinese\":\"使用 flex-wrap 属性包裹一行或一列\"},{\"english\":\"Use the flex-shrink Property to Shrink Items\",\"chinese\":\"使用 flex-shrink 属性收缩项目\"},{\"english\":\"Use the flex-grow Property to Expand Items\",\"chinese\":\"使用 flex-grow 属性扩展项目\"},{\"english\":\"Use the flex-basis Property to Set the Initial Size of an Item\",\"chinese\":\"使用 flex-basic 属性设置项目的初始大小\"},{\"english\":\"Use the flex Shorthand Property\",\"chinese\":\"使用 flex 短方法属性\"},{\"english\":\"Use the order Property to Rearrange Items\",\"chinese\":\"使用 order 属性重新排列项目\"},{\"english\":\"Use the align-self Property\",\"chinese\":\"使用 align-self 属性\"},{\"english\":\"Introduction to the CSS Grid Challenges\",\"chinese\":\"CSS 网格介绍\"},{\"english\":\"Create Your First CSS Grid\",\"chinese\":\"创建你的第一个 CSS 网格\"},{\"english\":\"Add Columns with grid-template-columns\",\"chinese\":\"使用 grid-template-columns 添加多列\"},{\"english\":\"Add Rows with grid-template-rows\",\"chinese\":\"使用 grid-template-rows 添加多行\"},{\"english\":\"Use CSS Grid units to Change the Size of Columns and Rows\",\"chinese\":\"使用 CSS 网格单位来更改列和行的大小\"},{\"english\":\"Create a Column Gap Using grid-column-gap\",\"chinese\":\"使用 grid-column-gap 创建多列之间的间距\"},{\"english\":\"Create a Row Gap using grid-row-gap\",\"chinese\":\"使用 grid-row-gap 创建多行之间的间距\"},{\"english\":\"Add Gaps Faster with grid-gap\",\"chinese\":\"使用 grid-gap 更快地添加间距\"},{\"english\":\"Use grid-column to Control Spacing\",\"chinese\":\"使用 grid-column 来控制剩余部分\"},{\"english\":\"Use grid-row to Control Spacing\",\"chinese\":\"使用 grid-row 来控制剩余部分\"},{\"english\":\"Align an Item Horizontally using justify-self\",\"chinese\":\"使用 justify-self 水平对齐项目\"},{\"english\":\"Align an Item Vertically using align-self\",\"chinese\":\"使用 align-self 垂直对齐项目\"},{\"english\":\"Align All Items Horizontally using justify-items\",\"chinese\":\"使用 justify-items 水平对齐所有项目\"},{\"english\":\"Align All Items Vertically using align-items\",\"chinese\":\"使用 align-items 垂直对齐所有项目\"},{\"english\":\"Divide the Grid Into an Area Template\",\"chinese\":\"将网格划分为区域模板\"},{\"english\":\"Place Items in Grid Areas Using the grid-area Property\",\"chinese\":\"使用 grid-area 属性将项目放置在网格区域中\"},{\"english\":\"Use grid-area Without Creating an Areas Template\",\"chinese\":\"使用 grid-area 创建区域模板\"},{\"english\":\"Reduce Repetition Using the repeat Function\",\"chinese\":\"使用 repeat 函数减少重复\"},{\"english\":\"Limit Item Size Using the minmax Function\",\"chinese\":\"使用 minmax 函数限制项目大小\"},{\"english\":\"Create Flexible Layouts Using auto-fill\",\"chinese\":\"使用 auto-fill 创建弹性布局\"},{\"english\":\"Create Flexible Layouts Using auto-fit\",\"chinese\":\"使用 auto-fit 创建弹性布局\"},{\"english\":\"Use Media Queries to Create Responsive Layouts\",\"chinese\":\"使用媒体查询创建响应式布局\"},{\"english\":\"Create Grids within Grids\",\"chinese\":\"在网格中创建网格\"},{\"english\":\"Introduction to the Responsive Web Design Projects\",\"chinese\":\"响应式 Web 设计项目介绍\"},{\"english\":\"Build a Tribute Page\",\"chinese\":\"制作一个致敬页\"},{\"english\":\"Build a Survey Form\",\"chinese\":\"制作一个调查表格\"},{\"english\":\"Build a Product Landing Page\",\"chinese\":\"制作一个产品登录页\"},{\"english\":\"Build a Technical Documentation Page\",\"chinese\":\"制作一个技术文档页面\"},{\"english\":\"Build a Personal Portfolio Webpage\",\"chinese\":\"制作一个个人作品集网页\"},{\"english\":\"Introduction to JavaScript\",\"chinese\":\"JavaScript 介绍\"},{\"english\":\"Comment Your JavaScript Code\",\"chinese\":\"给代码添加注释\"},{\"english\":\"Declare JavaScript Variables\",\"chinese\":\"声明变量\"},{\"english\":\"Storing Values with the Assignment Operator\",\"chinese\":\"使用赋值运算符存储值\"},{\"english\":\"Initializing Variables with the Assignment Operator\",\"chinese\":\"使用赋值运算符初始化变量\"},{\"english\":\"Understanding Uninitialized Variables\",\"chinese\":\"理解未初始化的变量\"},{\"english\":\"Understanding Case Sensitivity in Variables\",\"chinese\":\"了解变量名区分大小写\"},{\"english\":\"Add Two Numbers with JavaScript\",\"chinese\":\"加法运算\"},{\"english\":\"Subtract One Number from Another with JavaScript\",\"chinese\":\"减法运算\"},{\"english\":\"Multiply Two Numbers with JavaScript\",\"chinese\":\"乘法运算\"},{\"english\":\"Divide One Number by Another with JavaScript\",\"chinese\":\"除法运算\"},{\"english\":\"Increment a Number with JavaScript\",\"chinese\":\"数字递增\"},{\"english\":\"Decrement a Number with JavaScript\",\"chinese\":\"数字递减\"},{\"english\":\"Create Decimal Numbers with JavaScript\",\"chinese\":\"创建一个小数\"},{\"english\":\"Multiply Two Decimals with JavaScript\",\"chinese\":\"两个小数相乘\"},{\"english\":\"Divide One Decimal by Another with JavaScript\",\"chinese\":\"两个小数相除\"},{\"english\":\"Finding a Remainder in JavaScript\",\"chinese\":\"求余运算\"},{\"english\":\"Compound Assignment With Augmented Addition\",\"chinese\":\"复合赋值之 +=\"},{\"english\":\"Compound Assignment With Augmented Subtraction\",\"chinese\":\"复合赋值之 -=\"},{\"english\":\"Compound Assignment With Augmented Multiplication\",\"chinese\":\"复合赋值之 *=\"},{\"english\":\"Compound Assignment With Augmented Division\",\"chinese\":\"复合赋值之 /=\"},{\"english\":\"Declare String Variables\",\"chinese\":\"声明字符串变量\"},{\"english\":\"Escaping Literal Quotes in Strings\",\"chinese\":\"转义字符串中的引号\"},{\"english\":\"Quoting Strings with Single Quotes\",\"chinese\":\"用单引号引用字符串\"},{\"english\":\"Escape Sequences in Strings\",\"chinese\":\"字符串中的转义序列\"},{\"english\":\"Concatenating Strings with Plus Operator\",\"chinese\":\"用加号运算符连接字符串\"},{\"english\":\"Concatenating Strings with the Plus Equals Operator\",\"chinese\":\"用 += 运算符连接字符串\"},{\"english\":\"Constructing Strings with Variables\",\"chinese\":\"用变量构造字符串\"},{\"english\":\"Appending Variables to Strings\",\"chinese\":\"将变量附加到字符串\"},{\"english\":\"Find the Length of a String\",\"chinese\":\"查找字符串的长度\"},{\"english\":\"Use Bracket Notation to Find the First Character in a String\",\"chinese\":\"使用方括号查找字符串中的第一个字符\"},{\"english\":\"Understand String Immutability\",\"chinese\":\"了解字符串的不变性\"},{\"english\":\"Use Bracket Notation to Find the Nth Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符\"},{\"english\":\"Use Bracket Notation to Find the Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的最后一个字符\"},{\"english\":\"Use Bracket Notation to Find the Nth-to-Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符到最后一个字符\"},{\"english\":\"Word Blanks\",\"chinese\":\"填词造句\"},{\"english\":\"Store Multiple Values in one Variable using JavaScript Arrays\",\"chinese\":\"使用 JavaScript 数组将多个值存储在一个变量中\"},{\"english\":\"Nest one Array within Another Array\",\"chinese\":\"将一个数组嵌套在另一个数组中\"},{\"english\":\"Access Array Data with Indexes\",\"chinese\":\"通过索引访问数组中的数据\"},{\"english\":\"Modify Array Data With Indexes\",\"chinese\":\"通过索引修改数组中的数据\"},{\"english\":\"Access Multi-Dimensional Arrays With Indexes\",\"chinese\":\"使用索引访问多维数组\"},{\"english\":\"Manipulate Arrays With push()\",\"chinese\":\"使用 push() 操作数组\"},{\"english\":\"Manipulate Arrays With pop()\",\"chinese\":\"使用 pop() 操作数组\"},{\"english\":\"Manipulate Arrays With shift()\",\"chinese\":\"使用 shift() 操作数组\"},{\"english\":\"Manipulate Arrays With unshift()\",\"chinese\":\"使用 unshift() 操作数组\"},{\"english\":\"Shopping List\",\"chinese\":\"购物清单\"},{\"english\":\"Write Reusable JavaScript with Functions\",\"chinese\":\"用函数编写可重用代码\"},{\"english\":\"Passing Values to Functions with Arguments\",\"chinese\":\"将值传递给带有参数的函数\"},{\"english\":\"Global Scope and Functions\",\"chinese\":\"全局作用域和函数\"},{\"english\":\"Local Scope and Functions\",\"chinese\":\"局部作用域和函数\"},{\"english\":\"Global vs. Local Scope in Functions\",\"chinese\":\"函数中的全局作用域和局部作用域\"},{\"english\":\"Return a Value from a Function with Return\",\"chinese\":\"函数可以返回某个值\"},{\"english\":\"Understanding Undefined Value returned from a Function\",\"chinese\":\"函数也可以返回 undefined\"},{\"english\":\"Assignment with a Returned Value\",\"chinese\":\"用返回值来赋值\"},{\"english\":\"Stand in Line\",\"chinese\":\"排队\"},{\"english\":\"Understanding Boolean Values\",\"chinese\":\"理解布尔值\"},{\"english\":\"Use Conditional Logic with If Statements\",\"chinese\":\"用 if 语句来表达条件逻辑\"},{\"english\":\"Comparison with the Equality Operator\",\"chinese\":\"相等运算符\"},{\"english\":\"Comparison with the Strict Equality Operator\",\"chinese\":\"严格相等运算符\"},{\"english\":\"Practice comparing different values\",\"chinese\":\"比较不同值\"},{\"english\":\"Comparison with the Inequality Operator\",\"chinese\":\"不等运算符\"},{\"english\":\"Comparison with the Strict Inequality Operator\",\"chinese\":\"严格不等运算符\"},{\"english\":\"Comparison with the Greater Than Operator\",\"chinese\":\"大于运算符\"},{\"english\":\"Comparison with the Greater Than Or Equal To Operator\",\"chinese\":\"大于或等于运算符\"},{\"english\":\"Comparison with the Less Than Operator\",\"chinese\":\"小于运算符\"},{\"english\":\"Comparison with the Less Than Or Equal To Operator\",\"chinese\":\"小于或等于运算符\"},{\"english\":\"Comparisons with the Logical And Operator\",\"chinese\":\"逻辑与运算符\"},{\"english\":\"Comparisons with the Logical Or Operator\",\"chinese\":\"逻辑或运算符\"},{\"english\":\"Introducing Else Statements\",\"chinese\":\"介绍 else 语句\"},{\"english\":\"Introducing Else If Statements\",\"chinese\":\"介绍 else if 语句\"},{\"english\":\"Logical Order in If Else Statements\",\"chinese\":\"if else 语句中的逻辑顺序\"},{\"english\":\"Chaining If Else Statements\",\"chinese\":\"多个 if else 语句\"},{\"english\":\"Golf Code\",\"chinese\":\"高尔夫代码\"},{\"english\":\"Selecting from Many Options with Switch Statements\",\"chinese\":\"使用 Switch 语句从许多选项中进行选择\"},{\"english\":\"Adding a Default Option in Switch Statements\",\"chinese\":\"在 Switch 语句中添加默认选项\"},{\"english\":\"Multiple Identical Options in Switch Statements\",\"chinese\":\"在 Switch 语句添加多个相同选项\"},{\"english\":\"Replacing If Else Chains with Switch\",\"chinese\":\"用一个 Switch 语句来替代多个 if else 语句\"},{\"english\":\"Returning Boolean Values from Functions\",\"chinese\":\"从函数返回布尔值\"},{\"english\":\"Return Early Pattern for Functions\",\"chinese\":\"函数执行到 return 语句就结束\"},{\"english\":\"Counting Cards\",\"chinese\":\"21点游戏\"},{\"english\":\"Build JavaScript Objects\",\"chinese\":\"新建 JavaScript 对象\"},{\"english\":\"Accessing Object Properties with Dot Notation\",\"chinese\":\"通过点符号访问对象属性\"},{\"english\":\"Accessing Object Properties with Bracket Notation\",\"chinese\":\"通过方括号访问对象属性\"},{\"english\":\"Accessing Object Properties with Variables\",\"chinese\":\"通过变量访问对象属性\"},{\"english\":\"Updating Object Properties\",\"chinese\":\"更新对象属性\"},{\"english\":\"Add New Properties to a JavaScript Object\",\"chinese\":\"给对象添加新属性\"},{\"english\":\"Delete Properties from a JavaScript Object\",\"chinese\":\"删除对象的属性\"},{\"english\":\"Using Objects for Lookups\",\"chinese\":\"使用对象进行查找\"},{\"english\":\"Testing Objects for Properties\",\"chinese\":\"测试对象的属性\"},{\"english\":\"Manipulating Complex Objects\",\"chinese\":\"操作复杂对象\"},{\"english\":\"Accessing Nested Objects\",\"chinese\":\"访问嵌套对象\"},{\"english\":\"Accessing Nested Arrays\",\"chinese\":\"访问嵌套数组\"},{\"english\":\"Record Collection\",\"chinese\":\"记录集合\"},{\"english\":\"Iterate with JavaScript While Loops\",\"chinese\":\"while 循环\"},{\"english\":\"Iterate with JavaScript For Loops\",\"chinese\":\"for 循环\"},{\"english\":\"Iterate Odd Numbers With a For Loop\",\"chinese\":\"使用 For 循环遍历数组的奇数\"},{\"english\":\"Count Backwards With a For Loop\",\"chinese\":\"使用 For 循环反向遍历数组\"},{\"english\":\"Iterate Through an Array with a For Loop\",\"chinese\":\"使用 For 循环遍历数组\"},{\"english\":\"Nesting For Loops\",\"chinese\":\"循环嵌套\"},{\"english\":\"Iterate with JavaScript Do...While Loops\",\"chinese\":\"do...while 循环\"},{\"english\":\"Profile Lookup\",\"chinese\":\"资料查找\"},{\"english\":\"Generate Random Fractions with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机分数\"},{\"english\":\"Generate Random Whole Numbers with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机整数\"},{\"english\":\"Generate Random Whole Numbers within a Range\",\"chinese\":\"生成某个范围内的随机整数\"},{\"english\":\"Use the parseInt Function\",\"chinese\":\"使用 parseInt 函数\"},{\"english\":\"Use the parseInt Function with a Radix\",\"chinese\":\"使用 parseInt 函数并传入一个基数\"},{\"english\":\"Use the Conditional (Ternary) Operator\",\"chinese\":\"使用三元运算符\"},{\"english\":\"Use Multiple Conditional (Ternary) Operators\",\"chinese\":\"使用多个三元运算符\"},{\"english\":\"Introduction to the ES6 Challenges\",\"chinese\":\"ES6介绍\"},{\"english\":\"Explore Differences Between the var and let Keywords\",\"chinese\":\"探索 var 和 let 关键字之间的差异\"},{\"english\":\"Compare Scopes of the var and let Keywords\",\"chinese\":\"比较 var 和 let 关键字的作用域\"},{\"english\":\"Declare a Read-Only Variable with the const Keyword\",\"chinese\":\"用 const 关键字声明只读变量\"},{\"english\":\"Mutate an Array Declared with const\",\"chinese\":\"改变一个用 const 声明的数组\"},{\"english\":\"Prevent Object Mutation\",\"chinese\":\"防止对象改变\"},{\"english\":\"Use Arrow Functions to Write Concise Anonymous Functions\",\"chinese\":\"使用箭头函数编写简洁的匿名函数\"},{\"english\":\"Write Arrow Functions with Parameters\",\"chinese\":\"编写带参数的箭头函数\"},{\"english\":\"Write Higher Order Arrow Functions\",\"chinese\":\"编写高阶箭头函数\"},{\"english\":\"Set Default Parameters for Your Functions\",\"chinese\":\"设置函数的默认参数\"},{\"english\":\"Use the Rest Operator with Function Parameters\",\"chinese\":\"将 rest 操作符与函数参数一起使用\"},{\"english\":\"Use the Spread Operator to Evaluate Arrays In-Place\",\"chinese\":\"使用 spread 运算符展开数组项\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Objects\",\"chinese\":\"使用解构赋值从对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Nested Objects\",\"chinese\":\"使用解构赋值从嵌套对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Arrays\",\"chinese\":\"使用解构赋值从数组中分配变量\"},{\"english\":\"Use Destructuring Assignment with the Rest Operator to Reassign Array Elements\",\"chinese\":\"使用解构赋值配合 rest 操作符来重新分配数组元素\"},{\"english\":\"Use Destructuring Assignment to Pass an Object as a Function's Parameters\",\"chinese\":\"使用解构赋值将对象作为函数的参数传递\"},{\"english\":\"Create Strings using Template Literals\",\"chinese\":\"使用模板字面量创建字符串\"},{\"english\":\"Write Concise Object Literal Declarations Using Simple Fields\",\"chinese\":\"使用简单字段编写简洁的对象字面量声明\"},{\"english\":\"Write Concise Declarative Functions with ES6\",\"chinese\":\"用 ES6 编写简洁的函数声明\"},{\"english\":\"Use class Syntax to Define a Constructor Function\",\"chinese\":\"使用 class 语法定义构造函数\"},{\"english\":\"Use getters and setters to Control Access to an Object\",\"chinese\":\"使用 getter 和 setter 来控制对象的访问\"},{\"english\":\"Understand the Differences Between import and require\",\"chinese\":\"了解 import 和 require 之间的差异\"},{\"english\":\"Use export to Reuse a Code Block\",\"chinese\":\"用 export 来重用代码块\"},{\"english\":\"Use * to Import Everything from a File\",\"chinese\":\"用 * 从文件中导入所有内容\"},{\"english\":\"Create an Export Fallback with export default\",\"chinese\":\"用 export default 创建一个默认导出\"},{\"english\":\"Import a Default Export\",\"chinese\":\"导入一个默认的导出\"},{\"english\":\"Introduction to the Regular Expression Challenges\",\"chinese\":\"正则表达式介绍\"},{\"english\":\"Using the Test Method\",\"chinese\":\"使用测试方法\"},{\"english\":\"Match Literal Strings\",\"chinese\":\"匹配文字字符串\"},{\"english\":\"Match a Literal String with Different Possibilities\",\"chinese\":\"同时用多种模式匹配文字字符串\"},{\"english\":\"Ignore Case While Matching\",\"chinese\":\"匹配时忽略大小写\"},{\"english\":\"Extract Matches\",\"chinese\":\"提取匹配项\"},{\"english\":\"Find More Than the First Match\",\"chinese\":\"全局匹配\"},{\"english\":\"Match Anything with Wildcard Period\",\"chinese\":\"用通配符.匹配任何内容\"},{\"english\":\"Match Single Character with Multiple Possibilities\",\"chinese\":\"将单个字符与多种可能性匹配\"},{\"english\":\"Match Letters of the Alphabet\",\"chinese\":\"匹配字母表中的字母\"},{\"english\":\"Match Numbers and Letters of the Alphabet\",\"chinese\":\"匹配字母表中的数字和字母\"},{\"english\":\"Match Single Characters Not Specified\",\"chinese\":\"匹配单个未指定的字符\"},{\"english\":\"Match Characters that Occur One or More Times\",\"chinese\":\"匹配出现一次或多次的字符\"},{\"english\":\"Match Characters that Occur Zero or More Times\",\"chinese\":\"匹配出现零次或多次的字符\"},{\"english\":\"Find Characters with Lazy Matching\",\"chinese\":\"用惰性匹配来查找字符\"},{\"english\":\"Find One or More Criminals in a Hunt\",\"chinese\":\"在狩猎中找到一个或多个罪犯\"},{\"english\":\"Match Beginning String Patterns\",\"chinese\":\"匹配字符串的开头\"},{\"english\":\"Match Ending String Patterns\",\"chinese\":\"匹配字符串的末尾\"},{\"english\":\"Match All Letters and Numbers\",\"chinese\":\"匹配所有的字母和数字\"},{\"english\":\"Match Everything But Letters and Numbers\",\"chinese\":\"匹配除了字母和数字的所有符号\"},{\"english\":\"Match All Numbers\",\"chinese\":\"匹配所有数字\"},{\"english\":\"Match All Non-Numbers\",\"chinese\":\"匹配所有非数字\"},{\"english\":\"Restrict Possible Usernames\",\"chinese\":\"限制可能的用户名\"},{\"english\":\"Match Whitespace\",\"chinese\":\"匹配空白字符\"},{\"english\":\"Match Non-Whitespace Characters\",\"chinese\":\"匹配非空白字符\"},{\"english\":\"Specify Upper and Lower Number of Matches\",\"chinese\":\"指定匹配的上限和下限\"},{\"english\":\"Specify Only the Lower Number of Matches\",\"chinese\":\"只指定匹配的下限\"},{\"english\":\"Specify Exact Number of Matches\",\"chinese\":\"指定匹配的确切数量\"},{\"english\":\"Check for All or None\",\"chinese\":\"检查全部或无\"},{\"english\":\"Positive and Negative Lookahead\",\"chinese\":\"正向先行断言和负向先行断言\"},{\"english\":\"Reuse Patterns Using Capture Groups\",\"chinese\":\"使用捕获组重用模式\"},{\"english\":\"Use Capture Groups to Search and Replace\",\"chinese\":\"使用捕获组搜索和替换\"},{\"english\":\"Remove Whitespace from Start and End\",\"chinese\":\"删除开头和结尾的空白\"},{\"english\":\"Introduction to the Debugging Challenges\",\"chinese\":\"调试介绍\"},{\"english\":\"Use the JavaScript Console to Check the Value of a Variable\",\"chinese\":\"使用控制台检查变量值\"},{\"english\":\"Understanding the Differences between the freeCodeCamp and Browser Console\",\"chinese\":\"了解 freeCodeCamp 和浏览器控制台之间的差异\"},{\"english\":\"Use typeof to Check the Type of a Variable\",\"chinese\":\"使用 type of 检查变量的类型\"},{\"english\":\"Catch Misspelled Variable and Function Names\",\"chinese\":\"捕获拼错的变量名和函数名\"},{\"english\":\"Catch Unclosed Parentheses, Brackets, Braces and Quotes\",\"chinese\":\"捕获未闭合的括号、方括号、大括号和引号\"},{\"english\":\"Catch Mixed Usage of Single and Double Quotes\",\"chinese\":\"捕捉单引号和双引号的混合用法\"},{\"english\":\"Catch Use of Assignment Operator Instead of Equality Operator\",\"chinese\":\"捕获使用赋值运算符而不是相等运算符\"},{\"english\":\"Catch Missing Open and Closing Parenthesis After a Function Call\",\"chinese\":\"捕捉函数调用后缺少的左括号和右括号\"},{\"english\":\"Catch Arguments Passed in the Wrong Order When Calling a Function\",\"chinese\":\"调用函数时，捕获以错误顺序传递的参数\"},{\"english\":\"Catch Off By One Errors When Using Indexing\",\"chinese\":\"捕获使用索引的时候出现的错误\"},{\"english\":\"Use Caution When Reinitializing Variables Inside a Loop\",\"chinese\":\"重新初始化循环中的变量时要小心\"},{\"english\":\"Prevent Infinite Loops with a Valid Terminal Condition\",\"chinese\":\"使用有效的终止条件防止无限循环\"},{\"english\":\"Introduction to the Basic Data Structure Challenges\",\"chinese\":\"数据结构基础介绍\"},{\"english\":\"Use an Array to Store a Collection of Data\",\"chinese\":\"使用数组存储数据集合\"},{\"english\":\"Access an Array's Contents Using Bracket Notation\",\"chinese\":\"使用方括号访问数组的内容\"},{\"english\":\"Add Items to an Array with push() and unshift()\",\"chinese\":\"使用 push() 和 unshift() 添加项目到数组中\"},{\"english\":\"Remove Items from an Array with pop() and shift()\",\"chinese\":\"使用 pop() 和 shift() 从数组中删除项目\"},{\"english\":\"Remove Items Using splice()\",\"chinese\":\"使用 splice() 删除项目\"},{\"english\":\"Add Items Using splice()\",\"chinese\":\"使用 splice() 增加项目\"},{\"english\":\"Copy Array Items Using slice()\",\"chinese\":\"使用 slice() 拷贝数组项目\"},{\"english\":\"Copy an Array with the Spread Operator\",\"chinese\":\"使用扩展运算符复制数组\"},{\"english\":\"Combine Arrays with the Spread Operator\",\"chinese\":\"组合使用数组和扩展运算符\"},{\"english\":\"Check For The Presence of an Element With indexOf()\",\"chinese\":\"使用 indexOf() 检查元素是否存在\"},{\"english\":\"Iterate Through All an Array's Items Using For Loops\",\"chinese\":\"使用 For 循环迭代数组的所有项\"},{\"english\":\"Create complex multi-dimensional arrays\",\"chinese\":\"创建复杂的多维数组\"},{\"english\":\"Add Key-Value Pairs to JavaScript Objects\",\"chinese\":\"将键值对添加到对象中\"},{\"english\":\"Modify an Object Nested Within an Object\",\"chinese\":\"修改嵌套在对象中的对象\"},{\"english\":\"Access Property Names with Bracket Notation\",\"chinese\":\"使用方括号访问属性名称\"},{\"english\":\"Use the delete Keyword to Remove Object Properties\",\"chinese\":\"使用 delete 关键字删除对象属性\"},{\"english\":\"Check if an Object has a Property\",\"chinese\":\"检查对象是否具有某个属性\"},{\"english\":\" Iterate Through the Keys of an Object with a for...in Statement\",\"chinese\":\"使用 for...in 语句迭代对象\"},{\"english\":\"Generate an Array of All Object Keys with Object.keys()\",\"chinese\":\"使用 Object.Keys() 生成对象所有键组成的数组\"},{\"english\":\"Modify an Array Stored in an Object\",\"chinese\":\"修改存储在对象中的数组\"},{\"english\":\"Introduction to Basic Algorithm Scripting\",\"chinese\":\"算法基础介绍\"},{\"english\":\"Convert Celsius to Fahrenheit\",\"chinese\":\"将摄氏温度转换成华氏温度\"},{\"english\":\"Reverse a String\",\"chinese\":\"翻转字符串\"},{\"english\":\"Factorialize a Number\",\"chinese\":\"数字的阶乘\"},{\"english\":\"Find the Longest Word in a String\",\"chinese\":\"查找字符串中最长的单词\"},{\"english\":\"Return Largest Numbers in Arrays\",\"chinese\":\"返回数组中最大的数字\"},{\"english\":\"Confirm the Ending\",\"chinese\":\"检查字符串的结尾\"},{\"english\":\"Repeat a String Repeat a String\",\"chinese\":\"重复字符串\"},{\"english\":\"Truncate a String\",\"chinese\":\"截断字符串\"},{\"english\":\"Finders Keepers\",\"chinese\":\"发现者与看护者\"},{\"english\":\"Boo who\",\"chinese\":\"真假测试\"},{\"english\":\"Title Case a Sentence\",\"chinese\":\"单词的首字母大写\"},{\"english\":\"Slice and Splice\",\"chinese\":\"slice 和 splice\"},{\"english\":\"Falsy Bouncer\",\"chinese\":\"去除数组中的假值\"},{\"english\":\"Where do I Belong\",\"chinese\":\"我身在何处\"},{\"english\":\"Mutations\",\"chinese\":\"集合之间的关系\"},{\"english\":\"Chunky Monkey\",\"chinese\":\"猴子吃香蕉\"},{\"english\":\"Introduction to the Object Oriented Programming Challenges\",\"chinese\":\"面向对象编程介绍\"},{\"english\":\"Create a Basic JavaScript Object\",\"chinese\":\"创建一个基本的 JavaScript 对象\"},{\"english\":\"Use Dot Notation to Access the Properties of an Object\",\"chinese\":\"使用点符号来访问对象的属性\"},{\"english\":\"Create a Method on an Object\",\"chinese\":\"在对象上创建方法\"},{\"english\":\"Make Code More Reusable with the this Keyword\",\"chinese\":\"使用 this 关键字使代码更加可重用\"},{\"english\":\"Define a Constructor Function\",\"chinese\":\"定义构造函数\"},{\"english\":\"Use a Constructor to Create Objects\",\"chinese\":\"使用构造函数创建对象\"},{\"english\":\"Extend Constructors to Receive Arguments\",\"chinese\":\"扩展构造函数以接收参数\"},{\"english\":\"Verify an Object's Constructor with instanceof\",\"chinese\":\"使用 instance of 验证对象的构造函数\"},{\"english\":\"Understand Own Properties\",\"chinese\":\"了解自己的属性\"},{\"english\":\"Use Prototype Properties to Reduce Duplicate Code\",\"chinese\":\"使用原型属性来减少重复代码\"},{\"english\":\"Iterate Over All Properties\",\"chinese\":\"迭代所有属性\"},{\"english\":\"Understand the Constructor Property\",\"chinese\":\"了解构造函数属性\"},{\"english\":\"Change the Prototype to a New Object\",\"chinese\":\"将原型更改为新对象\"},{\"english\":\"Remember to Set the Constructor Property when Changing the Prototype\",\"chinese\":\"更改原型时，记得设置构造函数属性\"},{\"english\":\"Understand Where an Object’s Prototype Comes From\",\"chinese\":\"了解对象的原型来自哪里\"},{\"english\":\"Understand the Prototype Chain\",\"chinese\":\"了解原型链\"},{\"english\":\"Use Inheritance So You Don't Repeat Yourself\",\"chinese\":\"使用继承避免重复\"},{\"english\":\"Inherit Behaviors from a Supertype\",\"chinese\":\"从超类继承行为\"},{\"english\":\"Set the Child's Prototype to an Instance of the Parent\",\"chinese\":\"将子辈的原型设置为父辈的实例\"},{\"english\":\"Reset an Inherited Constructor Property\",\"chinese\":\"重置一个继承的构造函数属性\"},{\"english\":\"Add Methods After Inheritance\",\"chinese\":\"继承后添加方法\"},{\"english\":\"Override Inherited Methods\",\"chinese\":\"重写继承的方法\"},{\"english\":\"Use a Mixin to Add Common Behavior Between Unrelated Objects\",\"chinese\":\"使用 Mixin 在不相关对象之间添加共同行为\"},{\"english\":\"Use Closure to Protect Properties Within an Object from Being Modified Externally\",\"chinese\":\"使用闭包保护对象内的属性不被外部修改\"},{\"english\":\"Understand the Immediately Invoked Function Expression (IIFE)\",\"chinese\":\"了解立即调用函数表达（IIFE）\"},{\"english\":\"Use an IIFE to Create a Module\",\"chinese\":\" 使用 IIFE 创建一个模块\"},{\"english\":\"Introduction to the Functional Programming Challenges\",\"chinese\":\"函数式编程介绍\"},{\"english\":\"Learn About Functional Programming\",\"chinese\":\"学习函数式编程\"},{\"english\":\"Understand Functional Programming Terminology\",\"chinese\":\"了解函数式编程术语\"},{\"english\":\"Understand the Hazards of Using Imperative Code\",\"chinese\":\"了解使用命令式编程的危害\"},{\"english\":\"Avoid Mutations and Side Effects Using Functional Programming\",\"chinese\":\"使用函数式编程避免突变和副作用\"},{\"english\":\"Pass Arguments to Avoid External Dependence in a Function\",\"chinese\":\"传递参数以避免函数中的外部依赖\"},{\"english\":\"Refactor Global Variables Out of Functions\",\"chinese\":\"在函数中重构全局变量\"},{\"english\":\"Use the map Method to Extract Data from an Array\",\"chinese\":\"使用 map 方法从数组中提取数据\"},{\"english\":\"Implement map on a Prototype\",\"chinese\":\"在原型上实现 map 方法\"},{\"english\":\"Use the filter Method to Extract Data from an Array\",\"chinese\":\"使用 filter 方法从数组中提取数据\"},{\"english\":\"Implement the filter Method on a Prototype\",\"chinese\":\"在原型上实现 filter 方法\"},{\"english\":\"Return Part of an Array Using the slice Method\",\"chinese\":\"使用 slice 方法返回数组的一部分\"},{\"english\":\"Remove Elements from an Array Using slice Instead of splice\",\"chinese\":\"使用 slice 而不是 splice 从数组中移除元素\"},{\"english\":\"Combine Two Arrays Using the concat Method\",\"chinese\":\"使用 concat 方法组合两个数组\"},{\"english\":\"Add Elements to the End of an Array Using concat Instead of push\",\"chinese\":\"使用 concat 而不是 push 将元素添加到数组的末尾\"},{\"english\":\"Use the reduce Method to Analyze Data\",\"chinese\":\"使用 reduce 方法分析数据\"},{\"english\":\"Sort an Array Alphabetically using the sort Method\",\"chinese\":\"使用 sort 方法按字母顺序给数组排序\"},{\"english\":\"Return a Sorted Array Without Changing the Original Array\",\"chinese\":\"在不更改原始数组的前提下返回排序后的数组\"},{\"english\":\"Split a String into an Array Using the split Method\",\"chinese\":\"使用 split 方法将字符串拆分成数组\"},{\"english\":\"Combine an Array into a String Using the join Method\",\"chinese\":\"使用 join 方法将数组组合成字符串\"},{\"english\":\"Apply Functional Programming to Convert Strings to URL Slugs\",\"chinese\":\"应用函数式编程将字符串转换为URL片段\"},{\"english\":\"Use the every Method to Check that Every Element in an Array Meets a Criteria\",\"chinese\":\"使用 every 方法检查数组中的每个元素是否符合条件\"},{\"english\":\"Use the some Method to Check that Any Elements in an Array Meet a Criteria\",\"chinese\":\"使用 some 方法检查数组中是否有元素是否符合条件\"},{\"english\":\"Introduction to Currying and Partial Application\",\"chinese\":\"函数柯里化\"},{\"english\":\"Introduction to the Intermediate Algorithm Scripting Challenges\",\"chinese\":\"算法中级介绍\"},{\"english\":\"Sum All Numbers in a Range\",\"chinese\":\"范围内的数字求和\"},{\"english\":\"Diff Two Arrays\",\"chinese\":\"区分两个数组\"},{\"english\":\"Seek and Destroy\",\"chinese\":\"瞄准和消灭\"},{\"english\":\"Wherefore art thou\",\"chinese\":\"罗密欧与朱丽叶\"},{\"english\":\"Spinal Tap Case\",\"chinese\":\"短线连接格式\"},{\"english\":\"Pig Latin\",\"chinese\":\"儿童黑话\"},{\"english\":\"Search and Replace\",\"chinese\":\"搜索和替换\"},{\"english\":\"DNA Pairing\",\"chinese\":\"DNA 配对\"},{\"english\":\"Missing letters\",\"chinese\":\"丢失的字母\"},{\"english\":\"Sorted Union\",\"chinese\":\"集合排序\"},{\"english\":\"Convert HTML Entities\",\"chinese\":\"转换HTML实体\"},{\"english\":\"Sum All Odd Fibonacci Numbers\",\"chinese\":\"求斐波那契数组中的奇数之和\"},{\"english\":\"Sum All Primes\",\"chinese\":\"对所有素数求和\"},{\"english\":\"Smallest Common Multiple\",\"chinese\":\"最小公倍数\"},{\"english\":\"Drop it\",\"chinese\":\"放弃\"},{\"english\":\"Steamroller\",\"chinese\":\"扁平化\"},{\"english\":\"Binary Agents\",\"chinese\":\"二进制转化\"},{\"english\":\"Everything Be True\",\"chinese\":\"真假值判断\"},{\"english\":\"Arguments Optional\",\"chinese\":\"可选参数\"},{\"english\":\"Make a Person\",\"chinese\":\"构造一个 Person 类\"},{\"english\":\"Map the Debris\",\"chinese\":\"绘制碎片图\"},{\"english\":\"Introduction to the JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"算法和数据结构介绍\"},{\"english\":\"Palindrome Checker\",\"chinese\":\"回文检查器\"},{\"english\":\"Roman Numeral Converter\",\"chinese\":\"罗马数字转换器\"},{\"english\":\"Caesars Cipher\",\"chinese\":\"凯撒密码\"},{\"english\":\"Telephone Number Validator\",\"chinese\":\"电话号码验证器\"},{\"english\":\"Cash Register\",\"chinese\":\"收银机\"},{\"english\":\"Introduction to the Bootstrap Challenges\",\"chinese\":\"Bootstrap 介绍\"},{\"english\":\"Use Responsive Design with Bootstrap Fluid Containers\",\"chinese\":\"使用 Fluid 容器实现响应式设计\"},{\"english\":\"Make Images Mobile Responsive\",\"chinese\":\"使图片自适应移动端\"},{\"english\":\"Center Text with Bootstrap\",\"chinese\":\"用 Bootstrap 居中文本\"},{\"english\":\"Create a Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 按钮\"},{\"english\":\"Create a Block Element Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 块级元素\"},{\"english\":\"Taste the Bootstrap Button Color Rainbow\",\"chinese\":\"体验 Bootstrap 彩虹色的按钮\"},{\"english\":\"Call out Optional Actions with btn-info\",\"chinese\":\"使用 btn-info 调出可选操作\"},{\"english\":\"Warn Your Users of a Dangerous Action with btn-danger\",\"chinese\":\"使用 btn-danger 警告你的用户，这是危险操作。\"},{\"english\":\"Use the Bootstrap Grid to Put Elements Side By Side\",\"chinese\":\"使用 Bootstrap 网格并排放置元素\"},{\"english\":\"Ditch Custom CSS for Bootstrap\",\"chinese\":\"用 Bootstrap 来取代我们之前的自定义样式\"},{\"english\":\"Use a span to Target Inline Elements\",\"chinese\":\"使用 span 创建行内元素\"},{\"english\":\"Create a Custom Heading\",\"chinese\":\"创建自定义标题\"},{\"english\":\"Add Font Awesome Icons to our Buttons\",\"chinese\":\"将字体图标添加到我们的按钮中\"},{\"english\":\"Add Font Awesome Icons to all of our Buttons\",\"chinese\":\"将字体图标添加到我们所有的按钮上\"},{\"english\":\"Responsively Style Radio Buttons\",\"chinese\":\"响应式风格的单选按钮\"},{\"english\":\"Responsively Style Checkboxes\",\"chinese\":\"响应式风格的复选框\"},{\"english\":\"Style Text Inputs as Form Controls\",\"chinese\":\"给表单控件的输入框添加样式\"},{\"english\":\"Line up Form Elements Responsively with Bootstrap\",\"chinese\":\"使用 Bootstrap 响应式排列表单元素\"},{\"english\":\"Create a Bootstrap Headline\",\"chinese\":\"创建一个 Bootstrap 标题\"},{\"english\":\"House our page within a Bootstrap container-fluid div\",\"chinese\":\"将我们的页面放在 Fluid 容器中\"},{\"english\":\"Create a Bootstrap Row\",\"chinese\":\"创建一个 Bootstrap Row\"},{\"english\":\"Split Your Bootstrap Row\",\"chinese\":\"分割你的 Bootstrap Row\"},{\"english\":\"Create Bootstrap Wells\",\"chinese\":\"创建 Bootstrap Wells\"},{\"english\":\"Add Elements within Your Bootstrap Wells\",\"chinese\":\"在 Bootstrap Wells 中添加元素\"},{\"english\":\"Apply the Default Bootstrap Button Style\",\"chinese\":\"给 Bootstrap 按钮添加默认样式\"},{\"english\":\"Create a Class to Target with jQuery Selectors\",\"chinese\":\"分别给每个目标元素的 class 属性添加一个 target 值\"},{\"english\":\"Add id Attributes to Bootstrap Elements\",\"chinese\":\"给 Bootstrap 元素添加id属性\"},{\"english\":\"Label Bootstrap Wells\",\"chinese\":\"给 Bootstrap Wells 贴标签\"},{\"english\":\"Give Each Element a Unique id\",\"chinese\":\"给每个元素一个唯一的 id\"},{\"english\":\"Label Bootstrap Buttons\",\"chinese\":\"给 Bootstrap 按钮贴标签\"},{\"english\":\"Use Comments to Clarify Code\",\"chinese\":\"使用注释来说明代码\"},{\"english\":\"Introduction to jQuery\",\"chinese\":\"jQuery 介绍\"},{\"english\":\"Learn How Script Tags and Document Ready Work\",\"chinese\":\"了解 Script 和 Document 是如何工作的\"},{\"english\":\"Target HTML Elements with Selectors Using jQuery\",\"chinese\":\"使用 jQuery 配合元素选择器选择元素\"},{\"english\":\"Target Elements by Class Using jQuery\",\"chinese\":\"使用 jQuery 配合 class 选择器选择元素\"},{\"english\":\"Target Elements by id Using jQuery\",\"chinese\":\"使用 jQuery 配合 id 选择器选择元素\"},{\"english\":\"Delete Your jQuery Functions\",\"chinese\":\"删除 jQuery 函数\"},{\"english\":\"Target the Same Element with Multiple jQuery Selectors\",\"chinese\":\"用多个 jQuery 选择器瞄准同一个元素\"},{\"english\":\"Remove Classes from an Element with jQuery\",\"chinese\":\"使用 jQuery 从元素中移除 class\"},{\"english\":\"Change the CSS of an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素的 CSS\"},{\"english\":\"Disable an Element Using jQuery\",\"chinese\":\"使用 jQuery 禁用元素\"},{\"english\":\"Change Text Inside an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素内部的文本\"},{\"english\":\"Remove an Element Using jQuery\",\"chinese\":\"使用 jQuery 删除元素\"},{\"english\":\"Use appendTo to Move Elements with jQuery\",\"chinese\":\"使用 jQuery 的 appendTo 方法可以移动元素\"},{\"english\":\"Clone an Element Using jQuery\",\"chinese\":\"使用 jQuery 克隆元素\"},{\"english\":\"Target the Parent of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的父元素\"},{\"english\":\"Target the Children of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的子元素\"},{\"english\":\"Target a Specific Child of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的特定子元素\"},{\"english\":\"Target Even Elements Using jQuery\",\"chinese\":\"使用 jQuery 选择偶数元素\"},{\"english\":\"Use jQuery to Modify the Entire Page\",\"chinese\":\"使用 jQuery 修改整个页面\"},{\"english\":\"Introduction to the Sass Challenges\",\"chinese\":\"Sass 介绍\"},{\"english\":\"Store Data with Sass Variables\",\"chinese\":\"用 Sass 变量存储数据\"},{\"english\":\"Nest CSS with Sass\",\"chinese\":\"用 Sass 嵌套 CSS\"},{\"english\":\"Create Reusable CSS with Mixins\",\"chinese\":\"用 Mixins 创建可重用 CSS\"},{\"english\":\"Use @if and @else to Add Logic To Your Styles\",\"chinese\":\"使用 @if 和 @else 为你的样式添加逻辑\"},{\"english\":\"Use @for to Create a Sass Loop\",\"chinese\":\"使用 @for 创建一个 Sass 循环\"},{\"english\":\"Use @each to Map Over Items in a List\",\"chinese\":\"使用 @each 遍历列表中的项目\"},{\"english\":\"Apply a Style Until a Condition is Met with @while\",\"chinese\":\"使用 @while 当条件满足时样式生效\"},{\"english\":\"Split Your Styles into Smaller Chunks with Partials\",\"chinese\":\"用 Partials 将你的样式分成小块\"},{\"english\":\"Extend One Set of CSS Styles to Another Element\",\"chinese\":\"将一组CSS样式扩展到另一个元素\"},{\"english\":\"Introduction to the React Challenges\",\"chinese\":\"React 介绍\"},{\"english\":\"Create a Simple JSX Element\",\"chinese\":\"创建一个简单的 JSX 元素\"},{\"english\":\"Create a Complex JSX Element\",\"chinese\":\"创建一个复杂的 JSX 元素\"},{\"english\":\"Add Comments in JSX\",\"chinese\":\"在 JSX 中添加注释\"},{\"english\":\"Render HTML Elements to the DOM\",\"chinese\":\"渲染 HTML 元素为 DOM 树\"},{\"english\":\"Define an HTML Class in JSX\",\"chinese\":\"在 JSX 中定义一个 HTML Class\"},{\"english\":\"Learn About Self-Closing JSX Tags\",\"chinese\":\"了解自动闭合的 JSX 标记\"},{\"english\":\"Create a Stateless Functional Component\",\"chinese\":\"创建一个无状态的函数组件\"},{\"english\":\"Create a React Component\",\"chinese\":\"创建一个 React 组件\"},{\"english\":\"Create a Component with Composition\",\"chinese\":\"用组合的方式创建一个 React 组件 \"},{\"english\":\"Use React to Render Nested Components\",\"chinese\":\"使用 React 渲染嵌套组件\"},{\"english\":\"Compose React Components\",\"chinese\":\"组合 React 组件\"},{\"english\":\"Render a Class Component to the DOM\",\"chinese\":\"渲染 class 组件为 Dom 树\"},{\"english\":\"Write a React Component from Scratch\",\"chinese\":\"从零开始写一个 React 组件\"},{\"english\":\"Pass Props to a Stateless Functional Component\",\"chinese\":\"将 Props 传递给无状态函数组件\"},{\"english\":\"Pass an Array as Props\",\"chinese\":\"传递一个数组作为 Props\"},{\"english\":\"Use Default Props\",\"chinese\":\"使用默认的 Props\"},{\"english\":\"Override Default Props\",\"chinese\":\"覆盖默认的 Props\"},{\"english\":\"Use PropTypes to Define the Props You Expect\",\"chinese\":\"使用 PropTypes 来定义你期望的 Props\"},{\"english\":\"Access Props Using this.props\",\"chinese\":\"使用 this.props 访问 Props\"},{\"english\":\"Review Using Props with Stateless Functional Components\",\"chinese\":\"复习如何使用 Props 和无状态函数组件\"},{\"english\":\"Create a Stateful Component\",\"chinese\":\"创建一个有状态的组件\"},{\"english\":\"Render State in the User Interface\",\"chinese\":\"在用户界面中渲染状态\"},{\"english\":\"Render State in the User Interface Another Way\",\"chinese\":\"以另一种方式在用户界面中渲染状态\"},{\"english\":\"Set State with this.setState\",\"chinese\":\"用 this.setState 设置状态\"},{\"english\":\"Bind 'this' to a Class Method\",\"chinese\":\"将 this 绑定到 Class 方法\"},{\"english\":\"Use State to Toggle an Element\",\"chinese\":\"使用 State 切换元素\"},{\"english\":\"Write a Simple Counter\",\"chinese\":\"写一个简单的计数器\"},{\"english\":\"Create a Controlled Input\",\"chinese\":\"创建一个可以控制的输入框\"},{\"english\":\"Create a Controlled Form\",\"chinese\":\"创建一个可以控制的表单\"},{\"english\":\"Pass State as Props to Child Components\",\"chinese\":\"将 State 作为 Props 传递给子组件\"},{\"english\":\"Pass a Callback as Props\",\"chinese\":\"传递回调作为 Props\"},{\"english\":\"Use the Lifecycle Method componentWillMount\",\"chinese\":\"使用生命周期方法：componentWillMount\"},{\"english\":\"Use the Lifecycle Method componentDidMount\",\"chinese\":\"使用生命周期方法：componentDidMount\"},{\"english\":\"Add Event Listeners\",\"chinese\":\"添加事件侦听器\"},{\"english\":\"Manage Updates with Lifecycle Methods\",\"chinese\":\"使用生命周期方法管理更新\"},{\"english\":\"Optimize Re-Renders with shouldComponentUpdate\",\"chinese\":\"使用 shouldComponentUpdate 优化重新渲染\"},{\"english\":\"Introducing Inline Styles\",\"chinese\":\"介绍内联样式\"},{\"english\":\"Add Inline Styles in React\",\"chinese\":\"在 React 中添加内联样式\"},{\"english\":\"Use Advanced JavaScript in React Render Method\",\"chinese\":\"在 React Render 方法中使用 JavaScript\"},{\"english\":\"Render with an If/Else Condition\",\"chinese\":\"使用 If/Else 条件进行渲染\"},{\"english\":\"Use && for a More Concise Conditional\",\"chinese\":\"使用 && 获得更简洁的条件\"},{\"english\":\"Use a Ternary Expression for Conditional Rendering\",\"chinese\":\"使用三元表达式进行条件渲染\"},{\"english\":\"Render Conditionally from Props\",\"chinese\":\"根据 Props 有条件地渲染\"},{\"english\":\"Change Inline CSS Conditionally Based on Component State\",\"chinese\":\"根据组件状态有条件地更改内联 CSS\"},{\"english\":\"Use Array.map() to Dynamically Render Elements\",\"chinese\":\"使用 Array.map() 动态渲染元素\"},{\"english\":\"Give Sibling Elements a Unique Key Attribute\",\"chinese\":\"给同级元素一个唯一的键属性\"},{\"english\":\"Use Array.filter() to Dynamically Filter an Array\",\"chinese\":\"使用 Array.Filter() 动态过滤数组\"},{\"english\":\"Render React on the Server with renderToString\",\"chinese\":\"用 renderToString 在服务器上渲染 React\"},{\"english\":\"Introduction to the Redux Challenges\",\"chinese\":\"Redux 介绍\"},{\"english\":\"Create a Redux Store\",\"chinese\":\"创建一个 Redux Store\"},{\"english\":\"Get State from the Redux Store\",\"chinese\":\"从 Redux Store 获取状态\"},{\"english\":\"Define a Redux Action\",\"chinese\":\"定义一个 Redux Action\"},{\"english\":\"Define an Action Creator\",\"chinese\":\"定义一个 Action Creator\"},{\"english\":\"Dispatch an Action Event\",\"chinese\":\"分发 Action Event\"},{\"english\":\"Handle an Action in the Store\",\"chinese\":\"在 Store 里处理 Action\"},{\"english\":\"Use a Switch Statement to Handle Multiple Actions\",\"chinese\":\"使用 Switch 语句处理多个 Actions\"},{\"english\":\"Use const for Action Types\",\"chinese\":\"使用 const 声明 Action Types\"},{\"english\":\"Register a Store Listener\",\"chinese\":\"注册 Store 监听器\"},{\"english\":\"Combine Multiple Reducers\",\"chinese\":\"组合多个 Reduces\"},{\"english\":\"Send Action Data to the Store\",\"chinese\":\"发送 Action Data 给 Store\"},{\"english\":\"Use Middleware to Handle Asynchronous Actions\",\"chinese\":\"使用中间件处理异步操作\"},{\"english\":\"Write a Counter with Redux\",\"chinese\":\"用 Redux 写一个计数器\"},{\"english\":\"Never Mutate State\",\"chinese\":\"永不改变状态\"},{\"english\":\"Use the Spread Operator on Arrays\",\"chinese\":\"在数组中使用扩展运算符\"},{\"english\":\"Remove an Item from an Array\",\"chinese\":\"从数组中删除项目\"},{\"english\":\"Copy an Object with Object.assign\",\"chinese\":\"使用 Object.assign 拷贝对象\"},{\"english\":\"Introduction to the React and Redux Challenges\",\"chinese\":\"React 和 Redux 介绍\"},{\"english\":\"Getting Started with React Redux\",\"chinese\":\"React 和 Redux 入门\"},{\"english\":\"Manage State Locally First\",\"chinese\":\"首先在本地管理状态\"},{\"english\":\"Extract State Logic to Redux\",\"chinese\":\"提取状态逻辑给 Redux\"},{\"english\":\"Use Provider to Connect Redux to React\",\"chinese\":\"使用 Provider 连接 Redux 和 React\"},{\"english\":\"Map State to Props\",\"chinese\":\"映射 State 到 Props\"},{\"english\":\"Map Dispatch to Props\",\"chinese\":\"映射 Dispatch 到 Props\"},{\"english\":\"Connect Redux to React\",\"chinese\":\"连接 Redux 和 React\"},{\"english\":\"Connect Redux to the Messages App\",\"chinese\":\"将 Redux 连接到 Messages App\"},{\"english\":\"Extract Local State into Redux\",\"chinese\":\"将局部状态提取到 Redux 中\"},{\"english\":\"Moving Forward From Here\",\"chinese\":\"从这里前进\"},{\"english\":\"Introduction to the Front End Libraries Projects\",\"chinese\":\"项目实战介绍\"},{\"english\":\"Build a Random Quote Machine\",\"chinese\":\"构建一个随机引语生成器\"},{\"english\":\"Build a Markdown Previewer\",\"chinese\":\"构建一个 Markdown 文件预览器\"},{\"english\":\"Build a Drum Machine\",\"chinese\":\"构建一台鼓式机器\"},{\"english\":\"Build a JavaScript Calculator\",\"chinese\":\"构建一个 JavaScript 计算器\"},{\"english\":\"Build a Pomodoro Clock\",\"chinese\":\"构建一个番茄时钟\"},{\"english\":\"Introduction to the Data Visualization with D3 Challenges\",\"chinese\":\"数据可视化\"},{\"english\":\"Add Document Elements with D3\",\"chinese\":\"用 D3 给文档添加元素\"},{\"english\":\"Select a Group of Elements with D3\",\"chinese\":\"用 D3 选择一组元素\"},{\"english\":\"Work with Data in D3\",\"chinese\":\"使用 D3 中的数据\"},{\"english\":\"Work with Dynamic Data in D3\",\"chinese\":\"使用 D3 中的动态数据\"},{\"english\":\"Add Inline Styling to Elements\",\"chinese\":\"给元素添加内联样式\"},{\"english\":\"Change Styles Based on Data\",\"chinese\":\"根据数据更改样式\"},{\"english\":\"Add Classes with D3\",\"chinese\":\"用 D3 添加 Class\"},{\"english\":\"Update the Height of an Element Dynamically\",\"chinese\":\"动态更新元素的高度\"},{\"english\":\"Change the Presentation of a Bar Chart\",\"chinese\":\"更改条形图的显示方式\"},{\"english\":\"Learn About SVG in D3\",\"chinese\":\"了解 D3 中的 SVG\"},{\"english\":\"Display Shapes with SVG\",\"chinese\":\"用 SVG 显示形状\"},{\"english\":\"Create a Bar for Each Data Point in the Set\",\"chinese\":\"为集合中的每个数据点创建一个 Bar\"},{\"english\":\"Dynamically Set the Coordinates for Each Bar\",\"chinese\":\"动态设置每个 Bar 的坐标\"},{\"english\":\"Dynamically Change the Height of Each Bar\",\"chinese\":\"动态更改每个条的高度\"},{\"english\":\"Invert SVG Elements\",\"chinese\":\"反转 SVG 元素\"},{\"english\":\"Change the Color of an SVG Element\",\"chinese\":\"更改 SVG 元素的颜色\"},{\"english\":\"Add Labels to D3 Elements\",\"chinese\":\"给 D3 元素添加标签\"},{\"english\":\"Style D3 Labels\",\"chinese\":\"给 D3 标签添加样式\"},{\"english\":\"Add a Hover Effect to a D3 Element\",\"chinese\":\"给 D3 元素添加悬停效果\"},{\"english\":\"Add a Tooltip to a D3 Element\",\"chinese\":\"给 D3 元素添加工具提示\"},{\"english\":\"Create a Scatterplot with SVG Circles\",\"chinese\":\"使用 SVG Circles 创建散点图\"},{\"english\":\"Add Attributes to the Circle Elements\",\"chinese\":\"给 Circle 元素添加属性\"},{\"english\":\"Add Labels to Scatter Plot Circles\",\"chinese\":\"向散点图的 Circles 添加标签\"},{\"english\":\"Create a Linear Scale with D3\",\"chinese\":\"用 D3 创建线性比例\"},{\"english\":\"Set a Domain and a Range on a Scale\",\"chinese\":\"按比例设置域和范围\"},{\"english\":\"Use the d3.max and d3.min Functions to Find Minimum and Maximum Values in a Dataset\",\"chinese\":\"使用 d3.max 和 d3.min 函数在数据集中查找最小值和最大值\"},{\"english\":\"Use Dynamic Scales\",\"chinese\":\"使用动态比例\"},{\"english\":\"Use a Pre-Defined Scale to Place Elements\",\"chinese\":\"使用预定义的比例放置元素\"},{\"english\":\"Add Axes to a Visualization\",\"chinese\":\"添加坐标轴到可视化中\"},{\"english\":\"Introduction to the JSON APIs and AJAX Challenges\",\"chinese\":\"介绍 JSON 和 AJAX\"},{\"english\":\"Handle Click Events with JavaScript using the onclick property\",\"chinese\":\"使用 onclick 属性处理点击事件\"},{\"english\":\"Change Text with click Events\",\"chinese\":\"通过单击事件更改文本\"},{\"english\":\"Get JSON with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法获取 JSON\"},{\"english\":\"Access the JSON Data from an API\",\"chinese\":\"访问来自 API 的 JSON 数据\"},{\"english\":\"Convert JSON Data to HTML\",\"chinese\":\"将 JSON 数据转换为 HTML\"},{\"english\":\"Render Images from Data Sources\",\"chinese\":\"渲染数据源的图像\"},{\"english\":\"Pre-filter JSON to Get the Data You Need\",\"chinese\":\"预先过滤 JSON 以获得所需的数据\"},{\"english\":\"Get Geolocation Data to Find A User's GPS Coordinates\",\"chinese\":\"根据地理位置数据找到用户的 GPS 坐标\"},{\"english\":\"Post Data with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法发送数据\"},{\"english\":\"Introduction to the Data Visualization Projects\",\"chinese\":\"介绍数据可视化\"},{\"english\":\"Visualize Data with a Bar Chart\",\"chinese\":\"用条形图可视化数据\"},{\"english\":\"Visualize Data with a Scatterplot Graph\",\"chinese\":\"用散点图可视化数据\"},{\"english\":\"Visualize Data with a Heat Map\",\"chinese\":\"用热图可视化数据\"},{\"english\":\"Visualize Data with a Choropleth Map\",\"chinese\":\"用地区分布图可视化数据\"},{\"english\":\"Visualize Data with a Treemap Diagram\",\"chinese\":\"用树形图可视化数据\"},{\"english\":\"Introduction to the Managing Packages with npm Challenges\",\"chinese\":\"介绍 Node 包管理器——npm\"},{\"english\":\"How to Use package.json, the Core of Any Node.js Project or npm Package\",\"chinese\":\"如何使用 package.json 成为 Node.js 项目或 npm 包的核心\"},{\"english\":\"Add a Description to Your package.json\",\"chinese\":\"给 package.json 添加一个描述\"},{\"english\":\"Add Keywords to Your package.json\",\"chinese\":\"给 package.json 添加关键词\"},{\"english\":\"Add a License to Your package.json\",\"chinese\":\"给 package.json 添加许可证\"},{\"english\":\"Add a Version to Your package.json\",\"chinese\":\"给 package.json 添加版本号\"},{\"english\":\"Expand Your Project with External Packages from npm\",\"chinese\":\"使用 npm 的外部软件包扩展您的项目\"},{\"english\":\"Manage npm Dependencies By Understanding Semantic Versioning\",\"chinese\":\"通过理解语义版本化来管理 npm 依赖关系\"},{\"english\":\"Use the Tilde-Character to Always Use the Latest Patch Version of a Dependency\",\"chinese\":\"用波浪字符始终使用依赖项的最新补丁版本\"},{\"english\":\"Use the Caret-Character to Use the Latest Minor Version of a Dependency\",\"chinese\":\"用插入字符可以使用依赖项的最新次要版本\"},{\"english\":\"Remove a Package from Your Dependencies\",\"chinese\":\"从依赖项中删除包\"},{\"english\":\"Introduction to the Basic Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 基础\"},{\"english\":\"Meet the Node console\",\"chinese\":\"认识 Node 的控制台\"},{\"english\":\"Start a Working Express Server\",\"chinese\":\"启动一个 Express 服务器\"},{\"english\":\"Serve an HTML File\",\"chinese\":\"服务 HTML 文件\"},{\"english\":\"Serve Static Assets\",\"chinese\":\"服务静态资源\"},{\"english\":\"Serve JSON on a Specific Route\",\"chinese\":\"服务指定路由上的 JSON\"},{\"english\":\"Use the .env File\",\"chinese\":\"使用 .env 文件\"},{\"english\":\"Implement a Root-Level Request Logger Middleware\",\"chinese\":\"实现一个根层的请求记录器中间件\"},{\"english\":\"Chain Middleware to Create a Time Server\",\"chinese\":\"使用链中间件来创建时间服务器\"},{\"english\":\"Get Route Parameter Input from the Client\",\"chinese\":\"从客户端获取路由参数输入\"},{\"english\":\"Get Query Parameter Input from the Client\",\"chinese\":\"从客户端获取查询参数输入\"},{\"english\":\"Use body-parser to Parse POST Requests\",\"chinese\":\"使用 body-parser 来解析POST请求\"},{\"english\":\"Get Data from POST Requests\",\"chinese\":\"从 POST 请求中获取数据\"},{\"english\":\"Introduction to the MongoDB and Mongoose Challenges\",\"chinese\":\"介绍 MongogDB 和 Mongoose\"},{\"english\":\"Install and Set Up Mongoose\",\"chinese\":\"安装和设置 Mongoose\"},{\"english\":\"Create a Model\",\"chinese\":\"创建一个模型\"},{\"english\":\"Create and Save a Record of a Model\",\"chinese\":\"用模型来创建并保存一条记录\"},{\"english\":\"Create Many Records with model.create()\",\"chinese\":\"使用 model.create() 创建许多记录\"},{\"english\":\"Use model.find() to Search Your Database\",\"chinese\":\"使用 model.find() 查找数据库\"},{\"english\":\"Use model.findOne() to Return a Single Matching Document from Your Database\",\"chinese\":\"使用 model.findOne() 从数据库中返回一个匹配的文档\"},{\"english\":\"Use model.findById() to Search Your Database By _id\",\"chinese\":\"使用 model.findById() 按 _id 搜索数据库\"},{\"english\":\"Perform Classic Updates by Running Find, Edit, then Save\",\"chinese\":\"通过运行 find、edit、save 来执行经典更新\"},{\"english\":\"Perform New Updates on a Document Using model.findOneAndUpdate()\",\"chinese\":\"使用 model.findOneAndUpdate() 对文档执行新的更新\"},{\"english\":\"Delete One Document Using model.findByIdAndRemove\",\"chinese\":\"使用 model.findByIdAndRemove() 删除一个文档\"},{\"english\":\"Delete Many Documents with model.remove()\",\"chinese\":\"使用 model.remove() 删除许多文档\"},{\"english\":\"Chain Search Query Helpers to Narrow Search Results\",\"chinese\":\"通过链搜索查询帮助器缩小搜索结果\"},{\"english\":\"Introduction to the APIs and Microservices Projects\",\"chinese\":\"介绍 API 和 微服务\"},{\"english\":\"Timestamp Microservice\",\"chinese\":\"时间戳\"},{\"english\":\"Request Header Parser Microservice\",\"chinese\":\"请求头解析器\"},{\"english\":\"URL Shortener Microservice\",\"chinese\":\"短网址\"},{\"english\":\"Exercise Tracker\",\"chinese\":\"运动跟踪器\"},{\"english\":\"File Metadata Microservice\",\"chinese\":\"文件元数据\"},{\"english\":\"Introduction to Information Security with HelmetJS Challenges\",\"chinese\":\"介绍信息安全必备工具——Helmet\"},{\"english\":\"Install and Require Helmet\",\"chinese\":\"安装和引入 Helmet\"},{\"english\":\"Hide Potentially Dangerous Information Using helmet.hidePoweredBy()\",\"chinese\":\"使用 helmet.hidePoweredBy() 隐藏潜在的危险信息\"},{\"english\":\"Mitigate the Risk of Clickjacking with helmet.frameguard()\",\"chinese\":\"使用 helmet.frameguard() 降低点击劫持的风险\"},{\"english\":\"Mitigate the Risk of Cross Site Scripting (XSS) Attacks with helmet.xssFilter()\",\"chinese\":\"使用 helmet.xssFilter() 降低跨站点脚本（XSS）攻击的风险\"},{\"english\":\"Avoid Inferring the Response MIME Type with helmet.noSniff()\",\"chinese\":\"使用 helment.noSniff() 避免推断响应的 MIME 类型\"},{\"english\":\"Prevent IE from Opening Untrusted HTML with helmet.ieNoOpen()\",\"chinese\":\"使用 helment.ieNoOpen() 防止 IE 打开不受信任的 HTML\"},{\"english\":\"Ask Browsers to Access Your Site via HTTPS Only with helmet.hsts()\",\"chinese\":\"使用 helmet.hsts() 要求浏览器只通过HTTPS访问你的网站\"},{\"english\":\"Disable DNS Prefetching with helmet.dnsPrefetchControl()\",\"chinese\":\"使用 helmet.dnsPrefetchControl() 禁用 DNS 预取\"},{\"english\":\"Disable Client-Side Caching with helmet.noCache()\",\"chinese\":\"使用 helment.noCache() 禁用客户端缓存\"},{\"english\":\"Set a Content Security Policy with helmet.contentSecurityPolicy()\",\"chinese\":\"使用 helment.contentSecurityPolicy() 设置内容安全策略\"},{\"english\":\"Configure Helmet Using the ‘parent’ helmet() Middleware\",\"chinese\":\"使用 helmet() 中间件来配置 Helmet\"},{\"english\":\"Understand BCrypt Hashes\",\"chinese\":\"了解加密哈希\"},{\"english\":\"Hash and Compare Passwords Asynchronously\",\"chinese\":\"异步哈希和比较密码\"},{\"english\":\"Hash and Compare Passwords Synchronously\",\"chinese\":\"同步哈希和比较密码 \"},{\"english\":\"Introduction to the Quality Assurance with Chai Challenges\",\"chinese\":\"介绍质量保证必备工具——Chai\"},{\"english\":\"Learn How JavaScript Assertions Work\",\"chinese\":\"了解 JavaScript 断言是如何工作的\"},{\"english\":\"Test if a Variable or Function is Defined\",\"chinese\":\"测试变量或函数是否已定义\"},{\"english\":\"Use Assert.isOK and Assert.isNotOK\",\"chinese\":\"使用 Assert.isok() 和 Assert.isNotOK()\"},{\"english\":\"Test for Truthiness\",\"chinese\":\"真假测试\"},{\"english\":\"Use the Double Equals to Assert Equality\",\"chinese\":\"用两个等号断言相等\"},{\"english\":\"Use the Triple Equals to Assert Strict Equality\",\"chinese\":\"用三个等号断言严格相等\"},{\"english\":\"Assert Deep Equality with .deepEqual and .notDeepEqual\",\"chinese\":\"用 Assert.deepEqual() 和 Assert.notDeepEqual() 断言深度相等\"},{\"english\":\"Compare the Properties of Two Elements\",\"chinese\":\"比较两个元素的属性\"},{\"english\":\"Test if One Value is Below or At Least as Large as Another\",\"chinese\":\"测试一个值是否小于或等于另一个值\"},{\"english\":\"Test if a Value Falls within a Specific Range\",\"chinese\":\"测试某个值是否在特定范围内\"},{\"english\":\"Test if a Value is an Array\",\"chinese\":\"测试某个值是否为数组\"},{\"english\":\"Test if an Array Contains an Item\",\"chinese\":\"测试数组是否包含某个项目\"},{\"english\":\"Test if a Value is a String\",\"chinese\":\"测试某个值是否为字符串\"},{\"english\":\"Test if a String Contains a Substring\",\"chinese\":\"测试字符串是否包含子字符串\"},{\"english\":\"Use Regular Expressions to Test a String\",\"chinese\":\"使用正则表达式测试字符串\"},{\"english\":\"Test if an Object has a Property\",\"chinese\":\"测试对象是否具有某个属性\"},{\"english\":\"Test if a Value is of a Specific Data Structure Type\",\"chinese\":\"测试某个值是否是特定的数据类型\"},{\"english\":\"Test if an Object is an Instance of a Constructor\",\"chinese\":\"测试对象是否是构造函数的实例\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP\",\"chinese\":\"使用 Chai-HTTP 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP II\",\"chinese\":\"使用 Chai-HTTP II 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP III - PUT method\",\"chinese\":\"使用 Chai-HTTP III 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP IV - PUT method\",\"chinese\":\"使用 Chai-HTTP IV 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser\",\"chinese\":\"使用 无头浏览器 运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser II\",\"chinese\":\"使用 无头浏览器 II 运行功能测试\"},{\"english\":\"Introduction to the Advances Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 高级\"},{\"english\":\"Set up a Template Engine\",\"chinese\":\"设置模板引擎\"},{\"english\":\"Use a Template Engine's Powers\",\"chinese\":\"使用模板引擎\"},{\"english\":\"Set up Passport\",\"chinese\":\"设置 Passport\"},{\"english\":\"Serialization of a User Object\",\"chinese\":\"用户对象的序列化\"},{\"english\":\"Implement the Serialization of a Passport User\",\"chinese\":\"实现 Passport 用户的序列化\"},{\"english\":\"Authentication Strategies\",\"chinese\":\"身份验证策略\"},{\"english\":\"How to Use Passport Strategies\",\"chinese\":\"如何使用 Passport 策略\"},{\"english\":\"Create New Middleware\",\"chinese\":\"创建新的中间件\"},{\"english\":\"How to Put a Profile Together\",\"chinese\":\"如何将 Profile 放在一起\"},{\"english\":\"Logging a User Out\",\"chinese\":\"用户退出\"},{\"english\":\"Registration of New Users\",\"chinese\":\"注册新用户\"},{\"english\":\"Hashing Your Passwords\",\"chinese\":\"哈希密码\"},{\"english\":\"Clean Up Your Project with Modules\",\"chinese\":\"使用模块清理项目\"},{\"english\":\"Implementation of Social Authentication\",\"chinese\":\"实现第一种社交登录\"},{\"english\":\"Implementation of Social Authentication II\",\"chinese\":\"实现第二种社交登录\"},{\"english\":\"Implementation of Social Authentication III\",\"chinese\":\"实现第三种社交登录\"},{\"english\":\"Set up the Environment\",\"chinese\":\"设置环境\"},{\"english\":\"Communicate by Emitting\",\"chinese\":\"通过 Emitting 通信\"},{\"english\":\"Handle a Disconnect\",\"chinese\":\"处理连接断开\"},{\"english\":\"Authentication with Socket.IO\",\"chinese\":\"用 Socket.IO 进行身份验证\"},{\"english\":\"Announce New Users\",\"chinese\":\"用户公告\"},{\"english\":\"Send and Display Chat Messages\",\"chinese\":\"发送和显示聊天消息\"},{\"english\":\"Introduction to the Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Metric-Imperial Converter\",\"chinese\":\"公制英制转换器\"},{\"english\":\"Issue Tracker\",\"chinese\":\"问题跟踪器\"},{\"english\":\"Personal Library\",\"chinese\":\"个人图书馆\"},{\"english\":\"Stock Price Checker\",\"chinese\":\"股票价格检查器\"},{\"english\":\"Anonymous Message Board\",\"chinese\":\"匿名留言板\"},{\"english\":\"Introduction to the Coding Interview Algorithms\",\"chinese\":\"算法面试介绍\"},{\"english\":\"Find the Symmetric Difference\",\"chinese\":\"找到对等分差\"},{\"english\":\"Inventory Update\",\"chinese\":\"更新库存\"},{\"english\":\"No Repeats Please\",\"chinese\":\"请不要重复\"},{\"english\":\"Pairwise\",\"chinese\":\"结对\"},{\"english\":\"Implement Bubble Sort\",\"chinese\":\"冒泡排序\"},{\"english\":\"Implement Selection Sort\",\"chinese\":\"选择排序\"},{\"english\":\"Implement Insertion Sort\",\"chinese\":\"插入排序\"},{\"english\":\"Implement Quick Sort\",\"chinese\":\"快速排序\"},{\"english\":\"Implement Merge Sort\",\"chinese\":\"合并排序\"},{\"english\":\"Introduction to the Coding Interview Data Structure Questions\",\"chinese\":\"数据结构面试介绍\"},{\"english\":\"Typed Arrays\",\"chinese\":\"类型数组\"},{\"english\":\"Learn how a Stack Works\",\"chinese\":\"了解栈如何工作\"},{\"english\":\"Create a Stack Class\",\"chinese\":\"创建一个栈\"},{\"english\":\"Create a Queue Class\",\"chinese\":\"创建一个队列\"},{\"english\":\"Create a Priority Queue Class\",\"chinese\":\"创建一个优先队列\"},{\"english\":\"Create a Circular Queue\",\"chinese\":\"创建一个循环队列\"},{\"english\":\"Create a Set Class\",\"chinese\":\"介绍一种新的数据结构：集合（Set）\"},{\"english\":\"Remove from a Set\",\"chinese\":\"从集合中移除\"},{\"english\":\"Size of the Set\",\"chinese\":\"集合的大小\"},{\"english\":\"Perform a Union on Two Sets\",\"chinese\":\"求两个集合的并集\"},{\"english\":\"Perform an Intersection on Two Sets of Data\",\"chinese\":\"求两个集合的交集\"},{\"english\":\"Perform a Difference on Two Sets of Data\",\"chinese\":\"求两个集合的差异\"},{\"english\":\"Perform a Subset Check on Two Sets of Data\",\"chinese\":\"求某个集合是否为另一个集合的子集\"},{\"english\":\"Create and Add to Sets in ES6\",\"chinese\":\"创建集合并添加项目\"},{\"english\":\"Remove items from a set in ES6\",\"chinese\":\"移除集合中的项目\"},{\"english\":\"Use .has and .size on an ES6 Set\",\"chinese\":\"使用集合的 has 和 size 方法\"},{\"english\":\"Use Spread and Notes for ES5 Set() Integration\",\"chinese\":\"扩展运算符既可以用于数组，也可以用于集合。\"},{\"english\":\"Create a Map Data Structure\",\"chinese\":\"介绍一种新的数据结构：映射（Map）\"},{\"english\":\"Create an ES6 JavaScript Map\",\"chinese\":\"创建一个 JavaScript 映射\"},{\"english\":\"Create a Hash Table\",\"chinese\":\"创建一个哈希表\"},{\"english\":\"Work with Nodes in a Linked List\",\"chinese\":\"使用链表中的节点\"},{\"english\":\"Create a Linked List Class\",\"chinese\":\"引入一种新的数据结构：链表\"},{\"english\":\"Remove Elements from a Linked List\",\"chinese\":\"从链表中删除元素\"},{\"english\":\"Search within a Linked List\",\"chinese\":\"在链表中搜索\"},{\"english\":\"Remove Elements from a Linked List by Index\",\"chinese\":\"在链表中按索引删除元素\"},{\"english\":\"Add Elements at a Specific Index in a Linked List\",\"chinese\":\"在链表的指定索引处添加元素\"},{\"english\":\"Create a Doubly Linked List\",\"chinese\":\"创建一个双向链表\"},{\"english\":\"Reverse a Doubly Linked List\",\"chinese\":\"反转双向链表\"},{\"english\":\"Find the Minimum and Maximum Value in a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小值和最大值\"},{\"english\":\"Add a New Element to a Binary Search Tree\",\"chinese\":\"将新元素添加到二叉树中\"},{\"english\":\"Check if an Element is Present in a Binary Search Tree\",\"chinese\":\"检查二叉树中是否存在某个元素\"},{\"english\":\"Find the Minimum and Maximum Height of a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小高度和最大高度\"},{\"english\":\"Use Depth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用深度优先搜索\"},{\"english\":\"Use Breadth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用广度优先搜索\"},{\"english\":\"Delete a Leaf Node in a Binary Search Tree\",\"chinese\":\"删除二叉树中的叶子节点\"},{\"english\":\"Delete a Node with One Child in a Binary Search Tree\",\"chinese\":\"删除二叉树中有一个子节点的节点\"},{\"english\":\"Delete a Node with Two Children in a Binary Search Tree\",\"chinese\":\"删除二叉树中有两个子节点的节点\"},{\"english\":\"Invert a Binary Tree\",\"chinese\":\"反转二叉树\"},{\"english\":\"Create a Trie Search Tree\",\"chinese\":\"创建一个字典树\"},{\"english\":\"Insert an Element into a Max Heap\",\"chinese\":\"插入一个元素到最大堆中\"},{\"english\":\"Remove an Element from a Max Heap\",\"chinese\":\"从最大堆中删除一个元素\"},{\"english\":\"Implement Heap Sort with a Min Heap\",\"chinese\":\"在最小堆中实现堆排序\"},{\"english\":\"Adjacency List\",\"chinese\":\"邻接表\"},{\"english\":\"Adjacency Matrix\",\"chinese\":\"邻接矩阵\"},{\"english\":\"Incidence Matrix\",\"chinese\":\"关联矩阵\"},{\"english\":\"Breadth-First Search\",\"chinese\":\"广度优先搜索\"},{\"english\":\"Depth-First Search\",\"chinese\":\"深度优先搜索\"},{\"english\":\"Introduction to the Coding Interview Take Home Projects\",\"chinese\":\"私人项目介绍\"},{\"english\":\"Show the Local Weather\",\"chinese\":\"展示当地的天气\"},{\"english\":\"Build a Wikipedia Viewer\",\"chinese\":\"维基百科查看器\"},{\"english\":\"Use the Twitch JSON API\",\"chinese\":\"使用 Twitch 的 JSON API\"},{\"english\":\"Build an Image Search Abstraction Layer\",\"chinese\":\"图像搜索抽象层\"},{\"english\":\"Build a Tic Tac Toe Game\",\"chinese\":\"井字游戏\"},{\"english\":\"Build a Simon Game\",\"chinese\":\"西蒙游戏\"},{\"english\":\"Build a Camper Leaderboard\",\"chinese\":\"学员排行榜\"},{\"english\":\"Build a Recipe Box\",\"chinese\":\"食谱盒\"},{\"english\":\"Build the Game of Life\",\"chinese\":\"游戏人生\"},{\"english\":\"Build a Roguelike Dungeon Crawler Game\",\"chinese\":\"地牢围攻\"},{\"english\":\"P2P Video Chat Application\",\"chinese\":\"P2P 视频聊天应用\"},{\"english\":\"Show National Contiguity with a Force Directed Graph\",\"chinese\":\"用力有向图显示国家之间的地理联系\"},{\"english\":\"Map Data Across the Globe\",\"chinese\":\"全球地图数据\"},{\"english\":\"Manage a Book Trading Club\",\"chinese\":\"管理图书交易俱乐部\"},{\"english\":\"Build a Pinterest Clone\",\"chinese\":\"克隆 Pinterest\"},{\"english\":\"Build a Nightlife Coordination App\",\"chinese\":\"构建一个协调夜生活的应用\"},{\"english\":\"Chart the Stock Market\",\"chinese\":\"绘制股票市场图\"},{\"english\":\"Build a Voting App\",\"chinese\":\"构建一个投票应用\"},{\"english\":\"Build a Pong Game\",\"chinese\":\"构建一个乒乓游戏\"},{\"english\":\"Build a Light-Bright App\",\"chinese\":\"构建一个灯光明亮的应用\"},{\"english\":\"Introduction to the Rosetta Code Problems\",\"chinese\":\"介绍罗刹塔代码\"},{\"english\":\"100 doors\",\"chinese\":\"百扇门\"},{\"english\":\"24 game\",\"chinese\":\"24 点游戏\"},{\"english\":\"9 billion names of God the integer\",\"chinese\":\"上帝的九十亿个名字\"},{\"english\":\"ABC Problem\",\"chinese\":\"ABC 难题\"},{\"english\":\"Introduction to the Project Euler Problems\",\"chinese\":\"欧拉计划介绍\"},{\"english\":\"Problem 1: Multiples of 3 and 5\",\"chinese\":\"关卡 1：3 和 5 的倍数\"},{\"english\":\"Problem 2: Even Fibonacci Numbers\",\"chinese\":\"关卡 2：偶斐波那契数\"},{\"english\":\"Problem 3: Largest prime factor\",\"chinese\":\"关卡 3：最大质因数\"},{\"english\":\"Problem 4: Largest palindrome product\",\"chinese\":\"关卡 4：最大回文乘积\"},{\"english\":\"Problem 5: Smallest multiple\",\"chinese\":\"关卡 5：最小倍数\"},{\"english\":\"Problem 6: Sum square difference\",\"chinese\":\"关卡 6：平方的和与和的平方之差\"},{\"english\":\"Problem 7: 10001st prime\",\"chinese\":\"关卡 7：第 10001 个素数\"},{\"english\":\"Problem 8: Largest product in a series\",\"chinese\":\"关卡 8：连续数字最大乘积\"},{\"english\":\"Problem 9: Special Pythagorean triplet\",\"chinese\":\"关卡 9：特殊毕达哥拉斯三元组\"},{\"english\":\"Problem 10: Summation of primes\",\"chinese\":\"关卡 10：素数的和\"},{\"english\":\"Problem 11: Largest product in a grid\",\"chinese\":\"关卡 11：方阵中的最大乘积\"},{\"english\":\"Problem 12: Highly divisible triangular number\",\"chinese\":\"关卡 12：高度可约的三角形数\"},{\"english\":\"Problem 13: Large sum\",\"chinese\":\"关卡 13：大和\"},{\"english\":\"Problem 14: Longest Collatz sequence\",\"chinese\":\"关卡 14：最长考拉兹序列\"},{\"english\":\"Problem 15: Lattice paths\",\"chinese\":\"关卡 15：网格路径\"},{\"english\":\"Problem 16: Power digit sum\",\"chinese\":\"关卡 16：幂的数字和\"},{\"english\":\"Problem 17: Number letter counts\",\"chinese\":\"关卡 17：表达数字的英文字母计数\"},{\"english\":\"Problem 18: Maximum path sum I\",\"chinese\":\"关卡 18：最大路径和 I\"},{\"english\":\"Problem 19: Counting Sundays\",\"chinese\":\"关卡 19：数星期日\"},{\"english\":\"Problem 20: Factorial digit sum\",\"chinese\":\"关卡 20：阶乘数字和\"},{\"english\":\"Problem 21: Amicable numbers\",\"chinese\":\"关卡 21：亲和数\"},{\"english\":\"Problem 22: Names scores\",\"chinese\":\"关卡 22：姓名得分\"},{\"english\":\"Problem 23: Non-abundant sums\",\"chinese\":\"关卡 23：并非盈数之和\"},{\"english\":\"Problem 24: Lexicographic permutations\",\"chinese\":\"关卡 24：字典序排列\"},{\"english\":\"Problem 25: 1000-digit Fibonacci number\",\"chinese\":\"关卡 25：一千位斐波那契数\"},{\"english\":\"Problem 26: Reciprocal cycles\",\"chinese\":\"关卡 26：倒数的循环节\"},{\"english\":\"Problem 27: Quadratic primes\",\"chinese\":\"关卡 27：二次“素数生成”多项式\"},{\"english\":\"Problem 28: Number spiral diagonals\",\"chinese\":\"关卡 28：螺旋数阵对角线\"},{\"english\":\"Problem 29: Distinct powers\",\"chinese\":\"关卡 29：不同的幂\"},{\"english\":\"Problem 30: Digit n powers\",\"chinese\":\"关卡 30：各位数字的五次幂\"},{\"english\":\"Problem 31: Coin sums\",\"chinese\":\"关卡 31：硬币求和\"},{\"english\":\"Problem 32: Pandigital products\",\"chinese\":\"关卡 32：全数字的乘积\"},{\"english\":\"Problem 33: Digit cancelling fractions\",\"chinese\":\"关卡 33：消去数字的分数\"},{\"english\":\"Problem 34: Digit factorials\",\"chinese\":\"关卡 34：各位数字的阶乘\"},{\"english\":\"Problem 35: Circular primes\",\"chinese\":\"关卡 35：圆周素数\"},{\"english\":\"Problem 36: Double-base palindromes\",\"chinese\":\"关卡 36：双进制回文数\"},{\"english\":\"Problem 37: Truncatable primes\",\"chinese\":\"关卡 37：可截素数\"},{\"english\":\"Problem 38: Pandigital multiples\",\"chinese\":\"关卡 38：全数字的倍数\"},{\"english\":\"Problem 39: Integer right triangles\",\"chinese\":\"关卡 39：整数边长直角三角形\"},{\"english\":\"Problem 40: Champernowne's constant\",\"chinese\":\"关卡 40：钱珀瑙恩常数\"},{\"english\":\"Problem 41: Pandigital prime\",\"chinese\":\"关卡 41：全数字的素数\"},{\"english\":\"Problem 42: Coded triangle numbers\",\"chinese\":\"关卡 42：编码三角形数\"},{\"english\":\"Problem 43: Sub-string divisibility\",\"chinese\":\"关卡 43：子串的可整除性\"},{\"english\":\"Problem 44: Pentagon numbers\",\"chinese\":\"关卡 44：五边形数\"}]\n\n/***/ }),\n\n/***/ 913:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _Map = __webpack_require__(910);\n\t\n\tvar _Map2 = _interopRequireDefault(_Map);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = _Map2.default;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1236:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 281:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.reducer = exports.makeExpandedBlockSelector = exports.makeExpandedSuperBlockSelector = exports.toggleSuperBlock = exports.toggleBlock = exports.getNS = undefined;\n\t\n\tvar _handleActions;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _reduxActions = __webpack_require__(347);\n\t\n\tvar _stateManagment = __webpack_require__(285);\n\t\n\tvar ns = 'map';\n\t\n\tvar getNS = exports.getNS = function getNS() {\n\t  return ns;\n\t};\n\t\n\tvar initialState = {\n\t  expandedState: {\n\t    superBlock: {\n\t      'Responsive Web Design': true\n\t    },\n\t    block: {\n\t      'basic-html-and-html5': true\n\t    }\n\t  }\n\t};\n\t\n\tvar types = (0, _stateManagment.createTypes)(['toggleSuperBlock', 'toggleBlock'], ns);\n\t\n\tvar toggleBlock = exports.toggleBlock = (0, _reduxActions.createAction)(types.toggleBlock);\n\tvar toggleSuperBlock = exports.toggleSuperBlock = (0, _reduxActions.createAction)(types.toggleSuperBlock);\n\t\n\tvar makeExpandedSuperBlockSelector = exports.makeExpandedSuperBlockSelector = function makeExpandedSuperBlockSelector(superBlock) {\n\t  return function (state) {\n\t    return !!state[ns].expandedState.superBlock[superBlock];\n\t  };\n\t};\n\tvar makeExpandedBlockSelector = exports.makeExpandedBlockSelector = function makeExpandedBlockSelector(block) {\n\t  return function (state) {\n\t    return !!state[ns].expandedState.block[block];\n\t  };\n\t};\n\t\n\tvar reducer = exports.reducer = (0, _reduxActions.handleActions)((_handleActions = {}, _handleActions[types.toggleBlock] = function (state, _ref) {\n\t  var _extends2;\n\t\n\t  var payload = _ref.payload;\n\t  return _extends({}, state, {\n\t    expandedState: _extends({}, state.expandedState, {\n\t      block: _extends({}, state.expandedState.block, (_extends2 = {}, _extends2[payload] = !state.expandedState.block[payload], _extends2))\n\t    })\n\t  });\n\t}, _handleActions[types.toggleSuperBlock] = function (state, _ref2) {\n\t  var _extends3;\n\t\n\t  var payload = _ref2.payload;\n\t  return _extends({}, state, {\n\t    expandedState: _extends({}, state.expandedState, {\n\t      superBlock: _extends({}, state.expandedState.superBlock, (_extends3 = {}, _extends3[payload] = !state.expandedState.superBlock[payload], _extends3))\n\t    })\n\t  });\n\t}, _handleActions), initialState);\n\n/***/ }),\n\n/***/ 550:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Caret() {\n\t  return _react2.default.createElement(\n\t    'svg',\n\t    { viewBox: '0 0 100 100', width: '25px' },\n\t    _react2.default.createElement('polygon', {\n\t      points: '-6.04047,17.1511 81.8903,58.1985 -3.90024,104.196',\n\t      style: { stroke: '#aaa', fill: '#aaa', strokeWidth: '1px' },\n\t      transform: 'matrix(0.999729, 0.023281, -0.023281, 0.999729, 7.39321, -10.0425)'\n\t    })\n\t  );\n\t}\n\t\n\tCaret.displayName = 'Caret';\n\t\n\texports.default = Caret;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1242:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 917:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.query = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(4);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _gatsbyLink = __webpack_require__(223);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _reactHelmet = __webpack_require__(151);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _reactRedux = __webpack_require__(21);\n\t\n\tvar _propTypes3 = __webpack_require__(124);\n\t\n\tvar _Spacer = __webpack_require__(168);\n\t\n\tvar _Spacer2 = _interopRequireDefault(_Spacer);\n\t\n\tvar _Map = __webpack_require__(913);\n\t\n\tvar _Map2 = _interopRequireDefault(_Map);\n\t\n\t__webpack_require__(1242);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar mapStateToProps = function mapStateToProps() {\n\t  return {};\n\t}; /* global graphql */\n\t/* eslint-disable max-len */\n\t\n\t\n\tvar propTypes = {\n\t  data: _propTypes2.default.shape({\n\t    challengeNode: _propTypes3.ChallengeNode,\n\t    allChallengeNode: _propTypes3.AllChallengeNode,\n\t    allMarkdownRemark: _propTypes3.AllMarkdownRemark\n\t  })\n\t};\n\t\n\tvar IndexPage = function IndexPage(_ref) {\n\t  var _ref$data = _ref.data,\n\t      slug = _ref$data.challengeNode.fields.slug,\n\t      edges = _ref$data.allChallengeNode.edges,\n\t      mdEdges = _ref$data.allMarkdownRemark.edges;\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { className: 'index-page-wrapper' },\n\t    _react2.default.createElement(_reactHelmet2.default, { title: 'freeCodecamp \\u4E2D\\u6587\\u793E\\u533A' }),\n\t    _react2.default.createElement(_Spacer2.default, null),\n\t    _react2.default.createElement(_Spacer2.default, null),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      null,\n\t      '\\u6B22\\u8FCE\\u4F53\\u9A8C freeCodeCamp 2018 \\u5E74\\u65B0\\u7248\\u8BFE\\u7A0B'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      '\\u6211\\u4EEC\\u51C6\\u5907\\u4E86\\u6210\\u5343\\u4E0A\\u4E07\\u4E2A\\u7F16\\u7A0B\\u5173\\u5361\\u6765\\u5E2E\\u52A9\\u63D0\\u5347\\u4F60\\u7684\\u7F16\\u7A0B\\u6280\\u80FD\\u3002'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      '\\u6BCF\\u5F53\\u72EC\\u7ACB\\u5B8C\\u6210 5 \\u4E2A\\u7EC8\\u6781\\u9879\\u76EE\\uFF0C\\u4F60\\u5C31\\u53EF\\u4EE5\\u83B7\\u5F97\\u4E00\\u4E2A\\u514D\\u8D39\\u8BC1\\u4E66\\u3002'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      '\\u662F\\u7684\\uFF0C\\u5173\\u5361\\u3001\\u9879\\u76EE\\u3001\\u8BC1\\u4E66\\u3001\\u670D\\u52A1\\u5668 \\u8FD9\\u4E9B\\u90FD\\u662F 100% \\u514D\\u8D39\\u7684\\u3002'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      '\\u8FD9\\u4E00\\u5207\\u90FD\\u8981\\u611F\\u8C22',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: 'Https://github.com/freeCodeCamp', target: '_blank' },\n\t        'freeCodeCamp'\n\t      ),\n\t      ' ',\n\t      '\\u548C ',\n\t      _react2.default.createElement(\n\t        'a',\n\t        { href: 'Https://netlify.com', target: '_blank' },\n\t        'netlify'\n\t      ),\n\t      '\\u3002'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      '\\u5982\\u679C\\u4F60\\u662F\\u7F16\\u7A0B\\u65B0\\u624B\\uFF0C\\u6211\\u4EEC\\u63A8\\u8350\\u4F60',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        _gatsbyLink2.default,\n\t        { to: slug },\n\t        '\\u4ECE\\u5934\\u5F00\\u59CB'\n\t      ),\n\t      '\\u3002'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      '\\u5982\\u679C\\u4F60\\u662F\\u7F16\\u7A0B\\u8001\\u624B\\uFF0C\\u6211\\u4EEC\\u63A8\\u8350\\u4F60 \\u81EA\\u7531\\u8DF3\\u8DC3\\u3002'\n\t    ),\n\t    _react2.default.createElement(_Spacer2.default, null),\n\t    _react2.default.createElement(_Map2.default, {\n\t      introNodes: mdEdges.map(function (_ref2) {\n\t        var node = _ref2.node;\n\t        return node;\n\t      }),\n\t      nodes: edges.map(function (_ref3) {\n\t        var node = _ref3.node;\n\t        return node;\n\t      }).filter(function (_ref4) {\n\t        var isPrivate = _ref4.isPrivate;\n\t        return !isPrivate;\n\t      })\n\t    })\n\t  );\n\t};\n\t\n\tIndexPage.displayName = 'IndexPage';\n\tIndexPage.propTypes = propTypes;\n\t\n\texports.default = (0, _reactRedux.connect)(mapStateToProps)(IndexPage);\n\tvar query = exports.query = '** extracted graphql fragment **';\n\n/***/ }),\n\n/***/ 929:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar propTypes = {};\n\t\n\tfunction GreenNotCompleted(props) {\n\t  return _react2.default.createElement(\n\t    _react.Fragment,\n\t    null,\n\t    _react2.default.createElement(\n\t      'span',\n\t      { className: 'sr-only' },\n\t      'Not Passed'\n\t    ),\n\t    _react2.default.createElement(\n\t      'svg',\n\t      _extends({\n\t        height: '50',\n\t        viewBox: '0 0 200 200',\n\t        width: '50',\n\t        xmlns: 'http://www.w3.org/2000/svg'\n\t      }, props),\n\t      _react2.default.createElement(\n\t        'g',\n\t        null,\n\t        _react2.default.createElement(\n\t          'title',\n\t          null,\n\t          'Not Passed'\n\t        ),\n\t        _react2.default.createElement('circle', {\n\t          cx: '100',\n\t          cy: '99',\n\t          fill: '#FFFFFF',\n\t          r: '95',\n\t          stroke: '#006400',\n\t          strokeDasharray: 'null',\n\t          strokeLinecap: 'null',\n\t          strokeLinejoin: 'null',\n\t          strokeWidth: '5'\n\t        })\n\t      )\n\t    )\n\t  );\n\t}\n\t\n\tGreenNotCompleted.displayName = 'GreenNotCompleted';\n\tGreenNotCompleted.propTypes = propTypes;\n\t\n\texports.default = GreenNotCompleted;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-index-js-03a2ebbd7fabe4e3f9c7.js","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_createFind.js\n// module id = 4280\n// module chunks = 35783957827783","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/find.js\n// module id = 4343\n// module chunks = 35783957827783","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/findIndex.js\n// module id = 4344\n// module chunks = 35783957827783","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport uniq from 'lodash/uniq';\n\nimport SuperBlock from './components/SuperBlock';\nimport Spacer from '../util/Spacer';\n\nimport './map.css';\nimport { ChallengeNode } from '../../redux/propTypes';\n\nconst propTypes = {\n  introNodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      fields: PropTypes.shape({ slug: PropTypes.string.isRequired }),\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        block: PropTypes.string.isRequired\n      })\n    })\n  ),\n  nodes: PropTypes.arrayOf(ChallengeNode)\n};\n\nclass ShowMap extends PureComponent {\n  renderSuperBlocks(superBlocks) {\n    const { nodes, introNodes } = this.props;\n    return superBlocks.map(superBlock => (\n      <SuperBlock\n        introNodes={introNodes}\n        key={superBlock}\n        nodes={nodes}\n        superBlock={superBlock}\n      />\n    ));\n  }\n\n  render() {\n    const { nodes } = this.props;\n    const superBlocks = uniq(nodes.map(({ superBlock }) => superBlock));\n    return (\n      <div className='map-ui'>\n        <ul>\n          {this.renderSuperBlocks(superBlocks)}\n          <Spacer />\n        </ul>\n      </div>\n    );\n  }\n}\n\nShowMap.displayName = 'Map';\nShowMap.propTypes = propTypes;\n\nexport default ShowMap;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Map/Map.js","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport Link from 'gatsby-link';\n\nimport ga from '../../../analytics';\nimport { makeExpandedBlockSelector, toggleBlock } from '../redux';\nimport { userSelector } from '../../../redux/app';\nimport Caret from '../../icons/Caret';\n/* eslint-disable max-len */\nimport GreenPass from '../../../templates/Challenges/components/icons/GreenPass';\nimport GreenNotCompleted from '../../../templates/Challenges/components/icons/GreenNotCompleted';\nconst dict = require('./dict.json')\n/* eslint-enable max-len */\nconst mapStateToProps = (state, ownProps) => {\n  const expandedSelector = makeExpandedBlockSelector(ownProps.blockDashedName);\n\n  return createSelector(\n    expandedSelector,\n    userSelector,\n    (isExpanded, { completedChallenges = [] }) => ({\n      isExpanded,\n      completedChallenges: completedChallenges.map(({ id }) => id)\n    })\n  )(state);\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ toggleBlock }, dispatch);\n\nconst propTypes = {\n  blockDashedName: PropTypes.string,\n  challenges: PropTypes.array,\n  completedChallenges: PropTypes.arrayOf(PropTypes.string),\n  intro: PropTypes.shape({\n    fields: PropTypes.shape({ slug: PropTypes.string.isRequired }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      block: PropTypes.string.isRequired\n    })\n  }),\n  isExpanded: PropTypes.bool,\n  toggleBlock: PropTypes.func.isRequired\n};\n\nconst mapIconStyle = { height: '15px', marginRight: '10px', width: '15px' };\n\nexport class Block extends PureComponent {\n  constructor(...props) {\n    super(...props);\n\n    this.handleBlockClick = this.handleBlockClick.bind(this);\n    this.handleChallengeClick = this.handleChallengeClick.bind(this);\n    this.renderChallenges = this.renderChallenges.bind(this);\n  }\n\n  handleBlockClick() {\n    const { blockDashedName, toggleBlock } = this.props;\n    ga.event({\n      category: 'Map Block Click',\n      action: blockDashedName\n    });\n    return toggleBlock(blockDashedName);\n  }\n\n  handleChallengeClick(slug) {\n    return () => {\n      return ga.event({\n        category: 'Map Challenge Click',\n        action: slug\n      });\n    };\n  }\n\n  renderCheckMark(isCompleted) {\n    return isCompleted ? (\n      <GreenPass style={mapIconStyle} />\n    ) : (\n      <GreenNotCompleted style={mapIconStyle} />\n    );\n  }\n\n  renderChallenges(intro = {}, challenges = []) {\n    // TODO: Split this into a Challenge Component and add tests\n    // TODO: The styles badge and map-badge on the completion span do not exist\n    return [intro].concat(challenges).map((challenge, i) => {\n      dict.forEach(function(item){\n        if(challenge.title && item.chinese && challenge.title == item.english){\n          challenge.title = item.chinese\n        }\n        if(challenge.frontmatter && item.chinese && challenge.frontmatter.title == item.english){\n          challenge.frontmatter.title = item.chinese\n        }\n      })\n      const completedClass = challenge.isCompleted\n        ? ' map-challenge-title-completed'\n        : '';\n      return (\n        <li\n          className={'map-challenge-title' + completedClass}\n          key={'map-challenge' + challenge.fields.slug}\n          >\n          <span className='badge map-badge'>\n            {i !== 0 && this.renderCheckMark(challenge.isCompleted)}\n          </span>\n          <Link\n            onClick={this.handleChallengeClick(challenge.fields.slug)}\n            to={challenge.fields.slug}\n            >\n            {challenge.title || challenge.frontmatter.title}\n          </Link>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { completedChallenges, challenges, isExpanded, intro } = this.props;\n    const { blockName } = challenges[0].fields;\n    var chinese\n    dict.forEach(function(item){\n      if(item.english == blockName){\n        chinese = item.chinese     \n      }\n    })\n    const challengesWithCompleted = challenges.map(challenge => {\n      const { id } = challenge;\n      const isCompleted = completedChallenges.some(\n        completedId => id === completedId\n      );\n      return { ...challenge, isCompleted };\n    });\n    return (\n      <li className={`block ${isExpanded ? 'open' : ''}`}>\n        <div className='map-title' onClick={this.handleBlockClick}>\n          <Caret />\n          <h5>{chinese}</h5>\n        </div>\n        <ul>\n          {isExpanded\n            ? this.renderChallenges(intro, challengesWithCompleted)\n            : null}\n        </ul>\n      </li>\n    );\n  }\n}\n\nBlock.displayName = 'Block';\nBlock.propTypes = propTypes;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Block);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Map/components/Block.js","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport uniq from 'lodash/uniq';\nimport find from 'lodash/find';\n\nimport Block from './Block';\n\nimport { makeExpandedSuperBlockSelector, toggleSuperBlock } from '../redux';\nimport Caret from '../../icons/Caret';\nimport { ChallengeNode } from '../../../redux/propTypes';\n\nconst dict = require('./dict.json')\n\nconst mapStateToProps = (state, ownProps) => {\n  const expandedSelector = makeExpandedSuperBlockSelector(ownProps.superBlock);\n\n  return createSelector(expandedSelector, isExpanded => ({ isExpanded }))(\n    state\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      toggleSuperBlock\n    },\n    dispatch\n  );\n}\n\nconst propTypes = {\n  introNodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      fields: PropTypes.shape({ slug: PropTypes.string.isRequired }),\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        block: PropTypes.string.isRequired\n      })\n    })\n  ),\n  isExpanded: PropTypes.bool,\n  nodes: PropTypes.arrayOf(ChallengeNode),\n  superBlock: PropTypes.string,\n  toggleSuperBlock: PropTypes.func.isRequired\n};\n\nconst codingPrepRE = new RegExp('Interview Prep');\n\nfunction createSuperBlockTitle(str) {\n  let courseName\n  dict.forEach(function(item){\n    if(item.english == str){\n      courseName = item.chinese\n    }\n  })\n  return codingPrepRE.test(str)\n        ? `${courseName} (数千个小时)`\n        : `${courseName} (300个小时)`;\n}\n\nexport class SuperBlock extends PureComponent {\n  renderBlock(superBlock) {\n    const { nodes, introNodes } = this.props;\n    const blocksForSuperBlock = nodes.filter(\n      node => node.superBlock === superBlock\n    );\n    const blockDashedNames = uniq(\n      blocksForSuperBlock.map(({ block }) => block)\n    );\n    return (\n      <ul>\n        {blockDashedNames.map(blockDashedName => (\n          <Block\n            blockDashedName={blockDashedName}\n            challenges={blocksForSuperBlock.filter(\n              node => node.block === blockDashedName\n            )}\n            intro={find(\n              introNodes,\n              ({ frontmatter: { block } }) =>\n                block\n                  .toLowerCase()\n                  .split(' ')\n                  .join('-') === blockDashedName\n            )}\n            key={blockDashedName}\n          />\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    const { superBlock, isExpanded, toggleSuperBlock } = this.props;\n    return (\n      <li className={`superblock ${isExpanded ? 'open' : ''}`}>\n        <div className='map-title' onClick={() => toggleSuperBlock(superBlock)}>\n          <Caret />\n          <h4>{createSuperBlockTitle(superBlock)}</h4>\n        </div>\n        {isExpanded ? this.renderBlock(superBlock) : null}\n      </li>\n    );\n  }\n}\n\nSuperBlock.displayName = 'SuperBlock';\nSuperBlock.propTypes = propTypes;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SuperBlock);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Map/components/SuperBlock.js","module.exports = [{\"english\":\"Responsive Web Design\",\"chinese\":\"响应式 Web 设计\"},{\"english\":\"Javascript Algorithms And Data Structures\",\"chinese\":\"算法和数据结构\"},{\"english\":\"Front End Libraries\",\"chinese\":\"前端库和框架\"},{\"english\":\"Data Visualization\",\"chinese\":\"数据可视化\"},{\"english\":\"Apis And Microservices\",\"chinese\":\"API 和微服务\"},{\"english\":\"Information Security And Quality Assurance\",\"chinese\":\"信息安全和质量保证\"},{\"english\":\"Coding Interview Prep\",\"chinese\":\"面试攻略\"},{\"english\":\"Basic HTML and HTML5\",\"chinese\":\"HTML 基础\"},{\"english\":\"Basic CSS\",\"chinese\":\"CSS 基础\"},{\"english\":\"Applied Visual Design\",\"chinese\":\"应用视觉设计\"},{\"english\":\"Applied Accessibility\",\"chinese\":\"应用无障碍\"},{\"english\":\"Responsive Web Design Principles\",\"chinese\":\"响应式 Web 设计原则\"},{\"english\":\"CSS Flexbox\",\"chinese\":\"CSS 弹性盒子\"},{\"english\":\"CSS Grid\",\"chinese\":\"CSS 网格\"},{\"english\":\"Responsive Web Design Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Basic JavaScript\",\"chinese\":\"JavaScript 基础\"},{\"english\":\"ES6\",\"chinese\":\"ES6\"},{\"english\":\"Regular Expressions\",\"chinese\":\"正则表达式\"},{\"english\":\"Debugging\",\"chinese\":\"调试\"},{\"english\":\"Basic Data Structures\",\"chinese\":\"数据结构基础\"},{\"english\":\"Basic Algorithm Scripting\",\"chinese\":\"算法基础\"},{\"english\":\"Object Oriented Programming\",\"chinese\":\"面向对象编程\"},{\"english\":\"Functional Programming\",\"chinese\":\"函数式编程\"},{\"english\":\"Intermediate Algorithm Scripting\",\"chinese\":\"算法中级\"},{\"english\":\"JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Bootstrap\",\"chinese\":\"Bootstrap\"},{\"english\":\"jQuery\",\"chinese\":\"jQuery\"},{\"english\":\"Sass\",\"chinese\":\"Sass\"},{\"english\":\"React\",\"chinese\":\"React\"},{\"english\":\"Redux\",\"chinese\":\"Redux\"},{\"english\":\"React and Redux\",\"chinese\":\"React 和 Redux\"},{\"english\":\"Front End Libraries Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Data Visualization with D3\",\"chinese\":\"用 D3 实现数据可视化\"},{\"english\":\"JSON APIs and Ajax\",\"chinese\":\"JSON 和 Ajax\"},{\"english\":\"Data Visualization Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Managing Packages with Npm\",\"chinese\":\"用 Npm 来管理模块\"},{\"english\":\"Basic Node and Express\",\"chinese\":\"Node 和 Express 基础\"},{\"english\":\"MongoDB and Mongoose\",\"chinese\":\"MongoDB 和 Mongoose\"},{\"english\":\"Apis and Microservices Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Information Security with HelmetJS\",\"chinese\":\"信息安全——Helmet.js\"},{\"english\":\"Quality Assurance and Testing with Chai\",\"chinese\":\"质量保证和测试——Chai.js\"},{\"english\":\"Advanced Node and Express\",\"chinese\":\"Node 和 Express 高级\"},{\"english\":\"Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Algorithms\",\"chinese\":\"算法\"},{\"english\":\"Data Structures\",\"chinese\":\"数据结构\"},{\"english\":\"Take Home Projects\",\"chinese\":\"私人项目\"},{\"english\":\"Rosetta Code\",\"chinese\":\"罗塞塔代码\"},{\"english\":\"Project Euler\",\"chinese\":\"欧拉计划\"},{\"english\":\"Introduction to Basic HTML and HTML5\",\"chinese\":\"HTML 基础介绍\"},{\"english\":\"Say Hello to HTML Elements\",\"chinese\":\"向 HTML 元素问好\"},{\"english\":\"Headline with the h2 Element\",\"chinese\":\"用 h2 元素代表副标题\"},{\"english\":\"Inform with the Paragraph Element\",\"chinese\":\"用 p 元素代表段落\"},{\"english\":\"Fill in the Blank with Placeholder Text\",\"chinese\":\"用占位符文本填充空白\"},{\"english\":\"Uncomment HTML\",\"chinese\":\"去除 HTML 的注释\"},{\"english\":\"Comment out HTML\",\"chinese\":\"给 HTML 添加注释\"},{\"english\":\"Delete HTML Elements\",\"chinese\":\"删除 HTML 元素\"},{\"english\":\"Introduction to HTML5 Elements\",\"chinese\":\"HTML5 元素介绍\"},{\"english\":\"Add Images to Your Website\",\"chinese\":\"给网站添加图片\"},{\"english\":\"Link to External Pages with Anchor Elements\",\"chinese\":\"用锚点实现网页间的跳转\"},{\"english\":\"Link to Internal Sections of a Page with Anchor Elements\",\"chinese\":\"用锚点实现网页内部跳转\"},{\"english\":\"Nest an Anchor Element within a Paragraph\",\"chinese\":\"将锚点嵌套在段落中\"},{\"english\":\"Make Dead Links Using the Hash Symbol\",\"chinese\":\"用 # 号来创建固定链接\"},{\"english\":\"Turn an Image into a Link\",\"chinese\":\"给图片添加链接\"},{\"english\":\"Create a Bulleted Unordered List\",\"chinese\":\"创建一个无序列表\"},{\"english\":\"Create an Ordered List\",\"chinese\":\"创建一个有序列表\"},{\"english\":\"Create a Text Field\",\"chinese\":\"创建一个输入框\"},{\"english\":\"Add Placeholder Text to a Text Field\",\"chinese\":\"给输入框添加占位符文本\"},{\"english\":\"Create a Form Element\",\"chinese\":\"创建一个表单\"},{\"english\":\"Add a Submit Button to a Form\",\"chinese\":\"给表单添加提交按钮\"},{\"english\":\"Use HTML5 to Require a Field\",\"chinese\":\"给表单添加一个必填字段\"},{\"english\":\"Create a Set of Radio Buttons\",\"chinese\":\"创建一组单选按钮\"},{\"english\":\"Create a Set of Checkboxes\",\"chinese\":\"创建一组复选框\"},{\"english\":\"Check Radio Buttons and Checkboxes by Default\",\"chinese\":\"给单选按钮和复选框添加默认选中项\"},{\"english\":\"Nest Many Elements within a Single div Element\",\"chinese\":\"元素嵌套\"},{\"english\":\"Declare the Doctype of an HTML Document\",\"chinese\":\"声明 HTML 文档的文档类型\"},{\"english\":\"Define the Head and Body of an HTML Document\",\"chinese\":\"定义 HTML 文档的标题和正文\"},{\"english\":\"Introduction to Basic CSS\",\"chinese\":\"CSS 基础介绍\"},{\"english\":\"Change the Color of Text\",\"chinese\":\"更改文本的颜色\"},{\"english\":\"Use CSS Selectors to Style Elements\",\"chinese\":\"使用元素选择器来设置元素的样式\"},{\"english\":\"Use a CSS Class to Style an Element\",\"chinese\":\"使用 class 选择器设置单个元素的样式\"},{\"english\":\"Style Multiple Elements with a CSS Class\",\"chinese\":\"使用 class 选择器设置多个元素的样式\"},{\"english\":\"Change the Font Size of an Element\",\"chinese\":\"更改元素的字体大小\"},{\"english\":\"Set the Font Family of an Element\",\"chinese\":\"设置元素的字体家族\"},{\"english\":\"Import a Google Font\",\"chinese\":\"引入谷歌字体\"},{\"english\":\"Specify How Fonts Should Degrade\",\"chinese\":\"字体如何优雅降级\"},{\"english\":\"Size Your Images\",\"chinese\":\"调整图片的大小\"},{\"english\":\"Add Borders Around Your Elements\",\"chinese\":\"在元素周围添加边框\"},{\"english\":\"Add Rounded Corners with border-radius\",\"chinese\":\"用 border-radius 添加圆角边框\"},{\"english\":\"Make Circular Images with a border-radius\",\"chinese\":\"用 border-radius 制作圆形图片\"},{\"english\":\"Give a Background Color to a div Element\",\"chinese\":\"给 div 元素添加背景色\"},{\"english\":\"Set the id of an Element\",\"chinese\":\"设置元素的 id\"},{\"english\":\"Use an id Attribute to Style an Element\",\"chinese\":\"使用 id 属性来设定元素的样式\"},{\"english\":\"Adjust the Padding of an Element\",\"chinese\":\"调整元素的内边距\"},{\"english\":\"Adjust the Margin of an Element\",\"chinese\":\"调整元素的外边距\"},{\"english\":\"Add a Negative Margin to an Element\",\"chinese\":\"给元素添加负外边距\"},{\"english\":\"Add Different Padding to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的内边距\"},{\"english\":\"Add Different Margins to Each Side of an Element\",\"chinese\":\"给元素的每一侧添加不同的外边距\"},{\"english\":\"Use Clockwise Notation to Specify the Padding of an Element\",\"chinese\":\"使用顺时针方向指定元素的内边距\"},{\"english\":\"Use Clockwise Notation to Specify the Margin of an Element\",\"chinese\":\"使用顺时针方向指定元素的外边距\"},{\"english\":\"Use Attribute Selectors to Style Elements\",\"chinese\":\"使用属性选择器来设置元素的样式\"},{\"english\":\"Understand Absolute versus Relative Units\",\"chinese\":\"理解绝对单位与相对单位\"},{\"english\":\"Style the HTML Body Element\",\"chinese\":\"给 HTML 的 Body 元素添加样式\"},{\"english\":\"Inherit Styles from the Body Element\",\"chinese\":\"从 Body 元素继承样式\"},{\"english\":\"Prioritize One Style Over Another\",\"chinese\":\"样式中的优先级\"},{\"english\":\"Override Styles in Subsequent CSS\",\"chinese\":\"Class 选择器的优先级高于继承样式\"},{\"english\":\"Override Class Declarations by Styling ID Attributes\",\"chinese\":\"ID 选择器优先级高于 Class 选择器\"},{\"english\":\"Override Class Declarations with Inline Styles\",\"chinese\":\"内联样式的优先级高于 ID 选择器\"},{\"english\":\"Override All Other Styles by using Important\",\"chinese\":\"Important 的优先级最高\"},{\"english\":\"Use Hex Code for Specific Colors\",\"chinese\":\"使用十六进制编码获得指定颜色\"},{\"english\":\"Use Hex Code to Mix Colors\",\"chinese\":\"使用十六进制编码混合颜色\"},{\"english\":\"Use Abbreviated Hex Code\",\"chinese\":\"使用缩写的十六进制编码\"},{\"english\":\"Use RGB values to Color Elements\",\"chinese\":\"使用 RGB 值为元素上色\"},{\"english\":\"Use RGB to Mix Colors\",\"chinese\":\"使用 RGB 混合颜色\"},{\"english\":\"Use CSS Variables to change several elements at once\",\"chinese\":\"使用 CSS 变量一次更改多个元素\"},{\"english\":\"Create a custom CSS Variable\",\"chinese\":\"创建一个自定义的 CSS 变量\"},{\"english\":\"Use a custom CSS Variable\",\"chinese\":\"使用一个自定义的 CSS 变量\"},{\"english\":\"Attach a Fallback value to a CSS Variable\",\"chinese\":\"给 CSS 变量附加回退值\"},{\"english\":\"Cascading CSS variables\",\"chinese\":\"层级 CSS 变量\"},{\"english\":\"Change a variable for a specific area\",\"chinese\":\"更改特定区域的变量\"},{\"english\":\"Use a media query to change a variable\",\"chinese\":\"使用媒体查询更改变量\"},{\"english\":\"Introduction to the Applied Visual Design Challenges\",\"chinese\":\"应用视觉设计介绍\"},{\"english\":\"Create Visual Balance Using the text-align Property\",\"chinese\":\"使用 text-align 属性创建视觉平衡\"},{\"english\":\"Adjust the Width of an Element Using the width Property\",\"chinese\":\"使用 width 属性调整元素的宽度\"},{\"english\":\"Adjust the Height of an Element Using the height Property\",\"chinese\":\"使用 height 属性调整元素的宽度\"},{\"english\":\"Use the strong Tag to Make Text Bold\",\"chinese\":\"使用 strong 标签加粗文本\"},{\"english\":\"Use the u Tag to Underline Text\",\"chinese\":\"使用 u 标签给文本添加下划线\"},{\"english\":\"Use the em Tag to Italicize Text\",\"chinese\":\"使用 em 标签强调文本\"},{\"english\":\"Use the s Tag to Strikethrough Text\",\"chinese\":\"使用 s 标签给文本添加删除线\"},{\"english\":\"Create a Horizontal Line Using the hr Element\",\"chinese\":\"使用 hr 标签创建水平线\"},{\"english\":\"Adjust the background-color Property of Text\",\"chinese\":\"调整文本的背景色\"},{\"english\":\"Adjust the Size of a Header Versus a Paragraph Tag\",\"chinese\":\"调整标题与段落的大小\"},{\"english\":\"Add a box-shadow to a Card-like Element\",\"chinese\":\"给卡片元素添加 box-shadow\"},{\"english\":\"Decrease the Opacity of an Element\",\"chinese\":\"降低元素的 opactiy\"},{\"english\":\"Use the text-transform Property to Make Text Uppercase\",\"chinese\":\"使用 text-transform 属性给文本添加大写效果\"},{\"english\":\"Set the font-size for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-size\"},{\"english\":\"Set the font-weight for Multiple Heading Elements\",\"chinese\":\"设置多个标题元素的 font-weight\"},{\"english\":\"Set the font-size of Paragraph Text\",\"chinese\":\"设置段落文本的 font-size\"},{\"english\":\"Set the line-height of Paragraphs\",\"chinese\":\"设置段落的 line-height\"},{\"english\":\"Adjust the Hover State of an Anchor Tag\",\"chinese\":\"调整锚点的悬停状态\"},{\"english\":\"Change an Element's Relative Position\",\"chinese\":\"更改元素的相对位置\"},{\"english\":\"Move a Relatively Positioned Element with CSS Offsets\",\"chinese\":\"使用 CSS 偏移移动相对定位的元素\"},{\"english\":\"Lock an Element to its Parent with Absolute Positioning\",\"chinese\":\"绝对定位的参照物是元素的父元素\"},{\"english\":\"Lock an Element to the Browser Window with Fixed Positioning\",\"chinese\":\"固定定位的参照物是浏览器的窗口\"},{\"english\":\"Push Elements Left or Right with the float Property\",\"chinese\":\"使用 float 属性将元素左浮动或右浮动\"},{\"english\":\"Change the Position of Overlapping Elements with the z-index Property\",\"chinese\":\"使用 z-index 属性更改重叠元素的位置\"},{\"english\":\"Center an Element Horizontally Using the margin Property\",\"chinese\":\"使用 margin 属性将元素水平居中\"},{\"english\":\"Learn about Complementary Colors\",\"chinese\":\"了解互补色\"},{\"english\":\"Learn about Tertiary Colors\",\"chinese\":\"了解三原色\"},{\"english\":\"Adjust the Color of Various Elements to Complementary Colors\",\"chinese\":\"将各种元素的颜色调整为互补色\"},{\"english\":\"Adjust the Hue of a Color\",\"chinese\":\"调整颜色的色相\"},{\"english\":\"Adjust the Tone of a Color\",\"chinese\":\"调整颜色的色调\"},{\"english\":\"Create a Gradual CSS Linear Gradient\",\"chinese\":\"创建一个 CSS 线性渐变\"},{\"english\":\"Use a CSS Linear Gradient to Create a Striped Element\",\"chinese\":\"使用 CSS 线性渐变创建条纹元素\"},{\"english\":\"Create Texture by Adding a Subtle Pattern as a Background Image\",\"chinese\":\"通过添加细微图案作为背景图像来创建纹理\"},{\"english\":\"Use the CSS Transform scale Property to Change the Size of an Element\",\"chinese\":\"使用 CSS Transform scale 属性可以更改元素的大小\"},{\"english\":\"Use the CSS Transform scale Property to Scale an Element on Hover\",\"chinese\":\"使用CSS Transform scale 属性在悬停时缩放元素\"},{\"english\":\"Use the CSS Transform Property skewX to Skew an Element Along the X-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿X轴倾斜元素\"},{\"english\":\"Use the CSS Transform Property skewY to Skew an Element Along the Y-Axis\",\"chinese\":\"使用 CSS Transform skex 属性沿Y轴倾斜元素\"},{\"english\":\"Create a Graphic Using CSS\",\"chinese\":\"使用 CSS 创建一个图形\"},{\"english\":\"Create a More Complex Shape Using CSS and HTML\",\"chinese\":\"使用 CSS 和 HTML 创建更复杂的形状\"},{\"english\":\"Learn How the CSS @keyframes and animation Properties Work\",\"chinese\":\"了解 CSS 的关键帧和动画是如何工作的\"},{\"english\":\"Use CSS Animation to Change the Hover State of a Button\",\"chinese\":\"使用CSS动画更改按钮的悬停状态\"},{\"english\":\"Modify Fill Mode of an Animation\",\"chinese\":\"修改动画的填充模式\"},{\"english\":\"Create Movement Using CSS Animation\",\"chinese\":\"使用 CSS 动画创建运动\"},{\"english\":\"Create Visual Direction by Fading an Element from Left to Right\",\"chinese\":\"通过从左到右淡化元素来创建视觉方向\"},{\"english\":\"Animate Elements Continually Using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作永不停止的动画\"},{\"english\":\"Make a CSS Heartbeat using an Infinite Animation Count\",\"chinese\":\"使用无限的动画计数制作 CSS 心跳\"},{\"english\":\"Animate Elements at Variable Rates\",\"chinese\":\"以可变速率来给元素添加动画\"},{\"english\":\"Animate Multiple Elements at Variable Rates\",\"chinese\":\"以可变速率来给多个元素添加动画\"},{\"english\":\"Change Animation Timing with Keywords\",\"chinese\":\"使用关键字更改动画定时器\"},{\"english\":\"Learn How Bezier Curves Work\",\"chinese\":\"学习贝塞尔曲线的原理\"},{\"english\":\"Use a Bezier Curve to Move a Graphic\",\"chinese\":\"使用贝塞尔曲线移动图形\"},{\"english\":\"Make Motion More Natural Using a Bezier Curve\",\"chinese\":\"使用贝塞尔曲线让运动更加自然\"},{\"english\":\"Introduction to the Applied Accessibility Challenges\",\"chinese\":\"应用无障碍介绍\"},{\"english\":\"Add a Text Alternative to Images for Visually Impaired Accessibility\",\"chinese\":\"为视觉受损的用户添加替代图像的文本\"},{\"english\":\"Know When Alt Text Should be Left Blank\",\"chinese\":\"知道 Alt 文本何时应该留空\"},{\"english\":\"Use Headings to Show Hierarchical Relationships of Content\",\"chinese\":\"使用标题显示内容的层次关系\"},{\"english\":\"Jump Straight to the Content Using the main Element\",\"chinese\":\"使用 main 元素包裹主题内容\"},{\"english\":\"Wrap Content in the article Element\",\"chinese\":\"使用 article 元素包裹文章内容\"},{\"english\":\"Make Screen Reader Navigation Easier with the header Landmark\",\"chinese\":\"使用 header 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the nav Landmark\",\"chinese\":\"使用 nav 元素使屏幕阅读器更容易导航\"},{\"english\":\"Make Screen Reader Navigation Easier with the footer Landmark\",\"chinese\":\"使用 footer 元素使屏幕阅读器更容易导航\"},{\"english\":\"Improve Accessibility of Audio Content with the audio Element\",\"chinese\":\"使用 audio 元素提高音频内容的可访问性\"},{\"english\":\"Improve Chart Accessibility with the figure Element\",\"chinese\":\"使用 figure 元素提高图表的可访问性\"},{\"english\":\"Improve Form Field Accessibility with the label Element\",\"chinese\":\"使用 label 元素提高表单的可访问性\"},{\"english\":\"Wrap Radio Buttons in a fieldset Element for Better Accessibility\",\"chinese\":\"将单选按钮包裹在 fieldset 元素中以获得更好的可访问性\"},{\"english\":\"Add an Accessible Date Picker\",\"chinese\":\"添加可访问的日期选择器\"},{\"english\":\"Standardize Times with the HTML5 datetime Attribute\",\"chinese\":\"使用 HTML5 的 datatime 属性标准化时间\"},{\"english\":\"Make Elements Only Visible to a Screen Reader by Using Custom CSS\",\"chinese\":\"使用自定义 CSS 让元素仅对屏幕阅读器可见\"},{\"english\":\"Improve Readability with High Contrast Text\",\"chinese\":\"使用高对比度文本提高可读性\"},{\"english\":\"Avoid Colorblindness Issues by Using Sufficient Contrast\",\"chinese\":\"通过使用充足的对比度避免色盲问题\"},{\"english\":\"Avoid Colorblindness Issues by Carefully Choosing Colors that Convey Information\",\"chinese\":\"通过仔细选择传达信息的颜色来避免色盲问题\"},{\"english\":\"Give Links Meaning by Using Descriptive Link Text\",\"chinese\":\"使用描述性链接文本赋予链接含义\"},{\"english\":\"Make Links Navigatable with HTML Access Keys\",\"chinese\":\"通过给元素添加 accesskey 属性来让用户可以在链接之间快速导航\"},{\"english\":\"Use tabindex to Add Keyboard Focus to an Element\",\"chinese\":\"使用 tabindex 将键盘焦点添加到元素中\"},{\"english\":\"Use tabindex to Specify the Order of Keyboard Focus for Several Elements\",\"chinese\":\"使用 tabindex 指定多个元素的键盘焦点顺序\"},{\"english\":\"Introduction to the Responsive Web Design Challenges\",\"chinese\":\"响应式 Web 设计介绍\"},{\"english\":\"Create a Media Query\",\"chinese\":\"创建一个媒介查询\"},{\"english\":\"Make an Image Responsive\",\"chinese\":\"使图片根据设备尺寸自如响应\"},{\"english\":\"Use a Retina Image for Higher Resolution Displays\",\"chinese\":\"针对高分辨率屏幕应使用视网膜图片\"},{\"english\":\"Make Typography Responsive\",\"chinese\":\"使排版根据设备尺寸自如响应\"},{\"english\":\"Introduction to the CSS Flexbox Challenges\",\"chinese\":\"CSS弹性盒子介绍\"},{\"english\":\"Use display: flex to Position Two Boxes\",\"chinese\":\"使用 display: flex 定位两个盒子\"},{\"english\":\"Add Flex Superpowers to the Tweet Embed\",\"chinese\":\"在推文中添加弹性盒子布局\"},{\"english\":\"Use the flex-direction Property to Make a Row\",\"chinese\":\"使用 flex-direction 属性创建一行\"},{\"english\":\"Apply the flex-direction Property to Create Rows in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多行\"},{\"english\":\"Use the flex-direction Property to Make a Column\",\"chinese\":\"使用 flex-direction 属性创建一列\"},{\"english\":\"Apply the flex-direction Property to Create a Column in the Tweet Embed\",\"chinese\":\"在推文中使用 flex-direction 创建多列\"},{\"english\":\"Align Elements Using the justify-content Property\",\"chinese\":\"使用 justify-content 属性对齐元素\"},{\"english\":\"Use the justify-content Property in the Tweet Embed\",\"chinese\":\"在推文中使用 justify-content 属性\"},{\"english\":\"Align Elements Using the align-items Property\",\"chinese\":\"使用 align-items 属性对齐元素\"},{\"english\":\"Use the align-items Property in the Tweet Embed\",\"chinese\":\"在推文中使用 align-items 属性\"},{\"english\":\"Use the flex-wrap Property to Wrap a Row or Column\",\"chinese\":\"使用 flex-wrap 属性包裹一行或一列\"},{\"english\":\"Use the flex-shrink Property to Shrink Items\",\"chinese\":\"使用 flex-shrink 属性收缩项目\"},{\"english\":\"Use the flex-grow Property to Expand Items\",\"chinese\":\"使用 flex-grow 属性扩展项目\"},{\"english\":\"Use the flex-basis Property to Set the Initial Size of an Item\",\"chinese\":\"使用 flex-basic 属性设置项目的初始大小\"},{\"english\":\"Use the flex Shorthand Property\",\"chinese\":\"使用 flex 短方法属性\"},{\"english\":\"Use the order Property to Rearrange Items\",\"chinese\":\"使用 order 属性重新排列项目\"},{\"english\":\"Use the align-self Property\",\"chinese\":\"使用 align-self 属性\"},{\"english\":\"Introduction to the CSS Grid Challenges\",\"chinese\":\"CSS 网格介绍\"},{\"english\":\"Create Your First CSS Grid\",\"chinese\":\"创建你的第一个 CSS 网格\"},{\"english\":\"Add Columns with grid-template-columns\",\"chinese\":\"使用 grid-template-columns 添加多列\"},{\"english\":\"Add Rows with grid-template-rows\",\"chinese\":\"使用 grid-template-rows 添加多行\"},{\"english\":\"Use CSS Grid units to Change the Size of Columns and Rows\",\"chinese\":\"使用 CSS 网格单位来更改列和行的大小\"},{\"english\":\"Create a Column Gap Using grid-column-gap\",\"chinese\":\"使用 grid-column-gap 创建多列之间的间距\"},{\"english\":\"Create a Row Gap using grid-row-gap\",\"chinese\":\"使用 grid-row-gap 创建多行之间的间距\"},{\"english\":\"Add Gaps Faster with grid-gap\",\"chinese\":\"使用 grid-gap 更快地添加间距\"},{\"english\":\"Use grid-column to Control Spacing\",\"chinese\":\"使用 grid-column 来控制剩余部分\"},{\"english\":\"Use grid-row to Control Spacing\",\"chinese\":\"使用 grid-row 来控制剩余部分\"},{\"english\":\"Align an Item Horizontally using justify-self\",\"chinese\":\"使用 justify-self 水平对齐项目\"},{\"english\":\"Align an Item Vertically using align-self\",\"chinese\":\"使用 align-self 垂直对齐项目\"},{\"english\":\"Align All Items Horizontally using justify-items\",\"chinese\":\"使用 justify-items 水平对齐所有项目\"},{\"english\":\"Align All Items Vertically using align-items\",\"chinese\":\"使用 align-items 垂直对齐所有项目\"},{\"english\":\"Divide the Grid Into an Area Template\",\"chinese\":\"将网格划分为区域模板\"},{\"english\":\"Place Items in Grid Areas Using the grid-area Property\",\"chinese\":\"使用 grid-area 属性将项目放置在网格区域中\"},{\"english\":\"Use grid-area Without Creating an Areas Template\",\"chinese\":\"使用 grid-area 创建区域模板\"},{\"english\":\"Reduce Repetition Using the repeat Function\",\"chinese\":\"使用 repeat 函数减少重复\"},{\"english\":\"Limit Item Size Using the minmax Function\",\"chinese\":\"使用 minmax 函数限制项目大小\"},{\"english\":\"Create Flexible Layouts Using auto-fill\",\"chinese\":\"使用 auto-fill 创建弹性布局\"},{\"english\":\"Create Flexible Layouts Using auto-fit\",\"chinese\":\"使用 auto-fit 创建弹性布局\"},{\"english\":\"Use Media Queries to Create Responsive Layouts\",\"chinese\":\"使用媒体查询创建响应式布局\"},{\"english\":\"Create Grids within Grids\",\"chinese\":\"在网格中创建网格\"},{\"english\":\"Introduction to the Responsive Web Design Projects\",\"chinese\":\"响应式 Web 设计项目介绍\"},{\"english\":\"Build a Tribute Page\",\"chinese\":\"制作一个致敬页\"},{\"english\":\"Build a Survey Form\",\"chinese\":\"制作一个调查表格\"},{\"english\":\"Build a Product Landing Page\",\"chinese\":\"制作一个产品登录页\"},{\"english\":\"Build a Technical Documentation Page\",\"chinese\":\"制作一个技术文档页面\"},{\"english\":\"Build a Personal Portfolio Webpage\",\"chinese\":\"制作一个个人作品集网页\"},{\"english\":\"Introduction to JavaScript\",\"chinese\":\"JavaScript 介绍\"},{\"english\":\"Comment Your JavaScript Code\",\"chinese\":\"给代码添加注释\"},{\"english\":\"Declare JavaScript Variables\",\"chinese\":\"声明变量\"},{\"english\":\"Storing Values with the Assignment Operator\",\"chinese\":\"使用赋值运算符存储值\"},{\"english\":\"Initializing Variables with the Assignment Operator\",\"chinese\":\"使用赋值运算符初始化变量\"},{\"english\":\"Understanding Uninitialized Variables\",\"chinese\":\"理解未初始化的变量\"},{\"english\":\"Understanding Case Sensitivity in Variables\",\"chinese\":\"了解变量名区分大小写\"},{\"english\":\"Add Two Numbers with JavaScript\",\"chinese\":\"加法运算\"},{\"english\":\"Subtract One Number from Another with JavaScript\",\"chinese\":\"减法运算\"},{\"english\":\"Multiply Two Numbers with JavaScript\",\"chinese\":\"乘法运算\"},{\"english\":\"Divide One Number by Another with JavaScript\",\"chinese\":\"除法运算\"},{\"english\":\"Increment a Number with JavaScript\",\"chinese\":\"数字递增\"},{\"english\":\"Decrement a Number with JavaScript\",\"chinese\":\"数字递减\"},{\"english\":\"Create Decimal Numbers with JavaScript\",\"chinese\":\"创建一个小数\"},{\"english\":\"Multiply Two Decimals with JavaScript\",\"chinese\":\"两个小数相乘\"},{\"english\":\"Divide One Decimal by Another with JavaScript\",\"chinese\":\"两个小数相除\"},{\"english\":\"Finding a Remainder in JavaScript\",\"chinese\":\"求余运算\"},{\"english\":\"Compound Assignment With Augmented Addition\",\"chinese\":\"复合赋值之 +=\"},{\"english\":\"Compound Assignment With Augmented Subtraction\",\"chinese\":\"复合赋值之 -=\"},{\"english\":\"Compound Assignment With Augmented Multiplication\",\"chinese\":\"复合赋值之 *=\"},{\"english\":\"Compound Assignment With Augmented Division\",\"chinese\":\"复合赋值之 /=\"},{\"english\":\"Declare String Variables\",\"chinese\":\"声明字符串变量\"},{\"english\":\"Escaping Literal Quotes in Strings\",\"chinese\":\"转义字符串中的引号\"},{\"english\":\"Quoting Strings with Single Quotes\",\"chinese\":\"用单引号引用字符串\"},{\"english\":\"Escape Sequences in Strings\",\"chinese\":\"字符串中的转义序列\"},{\"english\":\"Concatenating Strings with Plus Operator\",\"chinese\":\"用加号运算符连接字符串\"},{\"english\":\"Concatenating Strings with the Plus Equals Operator\",\"chinese\":\"用 += 运算符连接字符串\"},{\"english\":\"Constructing Strings with Variables\",\"chinese\":\"用变量构造字符串\"},{\"english\":\"Appending Variables to Strings\",\"chinese\":\"将变量附加到字符串\"},{\"english\":\"Find the Length of a String\",\"chinese\":\"查找字符串的长度\"},{\"english\":\"Use Bracket Notation to Find the First Character in a String\",\"chinese\":\"使用方括号查找字符串中的第一个字符\"},{\"english\":\"Understand String Immutability\",\"chinese\":\"了解字符串的不变性\"},{\"english\":\"Use Bracket Notation to Find the Nth Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符\"},{\"english\":\"Use Bracket Notation to Find the Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的最后一个字符\"},{\"english\":\"Use Bracket Notation to Find the Nth-to-Last Character in a String\",\"chinese\":\"使用方括号查找字符串中的第N个字符到最后一个字符\"},{\"english\":\"Word Blanks\",\"chinese\":\"填词造句\"},{\"english\":\"Store Multiple Values in one Variable using JavaScript Arrays\",\"chinese\":\"使用 JavaScript 数组将多个值存储在一个变量中\"},{\"english\":\"Nest one Array within Another Array\",\"chinese\":\"将一个数组嵌套在另一个数组中\"},{\"english\":\"Access Array Data with Indexes\",\"chinese\":\"通过索引访问数组中的数据\"},{\"english\":\"Modify Array Data With Indexes\",\"chinese\":\"通过索引修改数组中的数据\"},{\"english\":\"Access Multi-Dimensional Arrays With Indexes\",\"chinese\":\"使用索引访问多维数组\"},{\"english\":\"Manipulate Arrays With push()\",\"chinese\":\"使用 push() 操作数组\"},{\"english\":\"Manipulate Arrays With pop()\",\"chinese\":\"使用 pop() 操作数组\"},{\"english\":\"Manipulate Arrays With shift()\",\"chinese\":\"使用 shift() 操作数组\"},{\"english\":\"Manipulate Arrays With unshift()\",\"chinese\":\"使用 unshift() 操作数组\"},{\"english\":\"Shopping List\",\"chinese\":\"购物清单\"},{\"english\":\"Write Reusable JavaScript with Functions\",\"chinese\":\"用函数编写可重用代码\"},{\"english\":\"Passing Values to Functions with Arguments\",\"chinese\":\"将值传递给带有参数的函数\"},{\"english\":\"Global Scope and Functions\",\"chinese\":\"全局作用域和函数\"},{\"english\":\"Local Scope and Functions\",\"chinese\":\"局部作用域和函数\"},{\"english\":\"Global vs. Local Scope in Functions\",\"chinese\":\"函数中的全局作用域和局部作用域\"},{\"english\":\"Return a Value from a Function with Return\",\"chinese\":\"函数可以返回某个值\"},{\"english\":\"Understanding Undefined Value returned from a Function\",\"chinese\":\"函数也可以返回 undefined\"},{\"english\":\"Assignment with a Returned Value\",\"chinese\":\"用返回值来赋值\"},{\"english\":\"Stand in Line\",\"chinese\":\"排队\"},{\"english\":\"Understanding Boolean Values\",\"chinese\":\"理解布尔值\"},{\"english\":\"Use Conditional Logic with If Statements\",\"chinese\":\"用 if 语句来表达条件逻辑\"},{\"english\":\"Comparison with the Equality Operator\",\"chinese\":\"相等运算符\"},{\"english\":\"Comparison with the Strict Equality Operator\",\"chinese\":\"严格相等运算符\"},{\"english\":\"Practice comparing different values\",\"chinese\":\"比较不同值\"},{\"english\":\"Comparison with the Inequality Operator\",\"chinese\":\"不等运算符\"},{\"english\":\"Comparison with the Strict Inequality Operator\",\"chinese\":\"严格不等运算符\"},{\"english\":\"Comparison with the Greater Than Operator\",\"chinese\":\"大于运算符\"},{\"english\":\"Comparison with the Greater Than Or Equal To Operator\",\"chinese\":\"大于或等于运算符\"},{\"english\":\"Comparison with the Less Than Operator\",\"chinese\":\"小于运算符\"},{\"english\":\"Comparison with the Less Than Or Equal To Operator\",\"chinese\":\"小于或等于运算符\"},{\"english\":\"Comparisons with the Logical And Operator\",\"chinese\":\"逻辑与运算符\"},{\"english\":\"Comparisons with the Logical Or Operator\",\"chinese\":\"逻辑或运算符\"},{\"english\":\"Introducing Else Statements\",\"chinese\":\"介绍 else 语句\"},{\"english\":\"Introducing Else If Statements\",\"chinese\":\"介绍 else if 语句\"},{\"english\":\"Logical Order in If Else Statements\",\"chinese\":\"if else 语句中的逻辑顺序\"},{\"english\":\"Chaining If Else Statements\",\"chinese\":\"多个 if else 语句\"},{\"english\":\"Golf Code\",\"chinese\":\"高尔夫代码\"},{\"english\":\"Selecting from Many Options with Switch Statements\",\"chinese\":\"使用 Switch 语句从许多选项中进行选择\"},{\"english\":\"Adding a Default Option in Switch Statements\",\"chinese\":\"在 Switch 语句中添加默认选项\"},{\"english\":\"Multiple Identical Options in Switch Statements\",\"chinese\":\"在 Switch 语句添加多个相同选项\"},{\"english\":\"Replacing If Else Chains with Switch\",\"chinese\":\"用一个 Switch 语句来替代多个 if else 语句\"},{\"english\":\"Returning Boolean Values from Functions\",\"chinese\":\"从函数返回布尔值\"},{\"english\":\"Return Early Pattern for Functions\",\"chinese\":\"函数执行到 return 语句就结束\"},{\"english\":\"Counting Cards\",\"chinese\":\"21点游戏\"},{\"english\":\"Build JavaScript Objects\",\"chinese\":\"新建 JavaScript 对象\"},{\"english\":\"Accessing Object Properties with Dot Notation\",\"chinese\":\"通过点符号访问对象属性\"},{\"english\":\"Accessing Object Properties with Bracket Notation\",\"chinese\":\"通过方括号访问对象属性\"},{\"english\":\"Accessing Object Properties with Variables\",\"chinese\":\"通过变量访问对象属性\"},{\"english\":\"Updating Object Properties\",\"chinese\":\"更新对象属性\"},{\"english\":\"Add New Properties to a JavaScript Object\",\"chinese\":\"给对象添加新属性\"},{\"english\":\"Delete Properties from a JavaScript Object\",\"chinese\":\"删除对象的属性\"},{\"english\":\"Using Objects for Lookups\",\"chinese\":\"使用对象进行查找\"},{\"english\":\"Testing Objects for Properties\",\"chinese\":\"测试对象的属性\"},{\"english\":\"Manipulating Complex Objects\",\"chinese\":\"操作复杂对象\"},{\"english\":\"Accessing Nested Objects\",\"chinese\":\"访问嵌套对象\"},{\"english\":\"Accessing Nested Arrays\",\"chinese\":\"访问嵌套数组\"},{\"english\":\"Record Collection\",\"chinese\":\"记录集合\"},{\"english\":\"Iterate with JavaScript While Loops\",\"chinese\":\"while 循环\"},{\"english\":\"Iterate with JavaScript For Loops\",\"chinese\":\"for 循环\"},{\"english\":\"Iterate Odd Numbers With a For Loop\",\"chinese\":\"使用 For 循环遍历数组的奇数\"},{\"english\":\"Count Backwards With a For Loop\",\"chinese\":\"使用 For 循环反向遍历数组\"},{\"english\":\"Iterate Through an Array with a For Loop\",\"chinese\":\"使用 For 循环遍历数组\"},{\"english\":\"Nesting For Loops\",\"chinese\":\"循环嵌套\"},{\"english\":\"Iterate with JavaScript Do...While Loops\",\"chinese\":\"do...while 循环\"},{\"english\":\"Profile Lookup\",\"chinese\":\"资料查找\"},{\"english\":\"Generate Random Fractions with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机分数\"},{\"english\":\"Generate Random Whole Numbers with JavaScript\",\"chinese\":\"使用 JavaScript 生成随机整数\"},{\"english\":\"Generate Random Whole Numbers within a Range\",\"chinese\":\"生成某个范围内的随机整数\"},{\"english\":\"Use the parseInt Function\",\"chinese\":\"使用 parseInt 函数\"},{\"english\":\"Use the parseInt Function with a Radix\",\"chinese\":\"使用 parseInt 函数并传入一个基数\"},{\"english\":\"Use the Conditional (Ternary) Operator\",\"chinese\":\"使用三元运算符\"},{\"english\":\"Use Multiple Conditional (Ternary) Operators\",\"chinese\":\"使用多个三元运算符\"},{\"english\":\"Introduction to the ES6 Challenges\",\"chinese\":\"ES6介绍\"},{\"english\":\"Explore Differences Between the var and let Keywords\",\"chinese\":\"探索 var 和 let 关键字之间的差异\"},{\"english\":\"Compare Scopes of the var and let Keywords\",\"chinese\":\"比较 var 和 let 关键字的作用域\"},{\"english\":\"Declare a Read-Only Variable with the const Keyword\",\"chinese\":\"用 const 关键字声明只读变量\"},{\"english\":\"Mutate an Array Declared with const\",\"chinese\":\"改变一个用 const 声明的数组\"},{\"english\":\"Prevent Object Mutation\",\"chinese\":\"防止对象改变\"},{\"english\":\"Use Arrow Functions to Write Concise Anonymous Functions\",\"chinese\":\"使用箭头函数编写简洁的匿名函数\"},{\"english\":\"Write Arrow Functions with Parameters\",\"chinese\":\"编写带参数的箭头函数\"},{\"english\":\"Write Higher Order Arrow Functions\",\"chinese\":\"编写高阶箭头函数\"},{\"english\":\"Set Default Parameters for Your Functions\",\"chinese\":\"设置函数的默认参数\"},{\"english\":\"Use the Rest Operator with Function Parameters\",\"chinese\":\"将 rest 操作符与函数参数一起使用\"},{\"english\":\"Use the Spread Operator to Evaluate Arrays In-Place\",\"chinese\":\"使用 spread 运算符展开数组项\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Objects\",\"chinese\":\"使用解构赋值从对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Nested Objects\",\"chinese\":\"使用解构赋值从嵌套对象中分配变量\"},{\"english\":\"Use Destructuring Assignment to Assign Variables from Arrays\",\"chinese\":\"使用解构赋值从数组中分配变量\"},{\"english\":\"Use Destructuring Assignment with the Rest Operator to Reassign Array Elements\",\"chinese\":\"使用解构赋值配合 rest 操作符来重新分配数组元素\"},{\"english\":\"Use Destructuring Assignment to Pass an Object as a Function's Parameters\",\"chinese\":\"使用解构赋值将对象作为函数的参数传递\"},{\"english\":\"Create Strings using Template Literals\",\"chinese\":\"使用模板字面量创建字符串\"},{\"english\":\"Write Concise Object Literal Declarations Using Simple Fields\",\"chinese\":\"使用简单字段编写简洁的对象字面量声明\"},{\"english\":\"Write Concise Declarative Functions with ES6\",\"chinese\":\"用 ES6 编写简洁的函数声明\"},{\"english\":\"Use class Syntax to Define a Constructor Function\",\"chinese\":\"使用 class 语法定义构造函数\"},{\"english\":\"Use getters and setters to Control Access to an Object\",\"chinese\":\"使用 getter 和 setter 来控制对象的访问\"},{\"english\":\"Understand the Differences Between import and require\",\"chinese\":\"了解 import 和 require 之间的差异\"},{\"english\":\"Use export to Reuse a Code Block\",\"chinese\":\"用 export 来重用代码块\"},{\"english\":\"Use * to Import Everything from a File\",\"chinese\":\"用 * 从文件中导入所有内容\"},{\"english\":\"Create an Export Fallback with export default\",\"chinese\":\"用 export default 创建一个默认导出\"},{\"english\":\"Import a Default Export\",\"chinese\":\"导入一个默认的导出\"},{\"english\":\"Introduction to the Regular Expression Challenges\",\"chinese\":\"正则表达式介绍\"},{\"english\":\"Using the Test Method\",\"chinese\":\"使用测试方法\"},{\"english\":\"Match Literal Strings\",\"chinese\":\"匹配文字字符串\"},{\"english\":\"Match a Literal String with Different Possibilities\",\"chinese\":\"同时用多种模式匹配文字字符串\"},{\"english\":\"Ignore Case While Matching\",\"chinese\":\"匹配时忽略大小写\"},{\"english\":\"Extract Matches\",\"chinese\":\"提取匹配项\"},{\"english\":\"Find More Than the First Match\",\"chinese\":\"全局匹配\"},{\"english\":\"Match Anything with Wildcard Period\",\"chinese\":\"用通配符.匹配任何内容\"},{\"english\":\"Match Single Character with Multiple Possibilities\",\"chinese\":\"将单个字符与多种可能性匹配\"},{\"english\":\"Match Letters of the Alphabet\",\"chinese\":\"匹配字母表中的字母\"},{\"english\":\"Match Numbers and Letters of the Alphabet\",\"chinese\":\"匹配字母表中的数字和字母\"},{\"english\":\"Match Single Characters Not Specified\",\"chinese\":\"匹配单个未指定的字符\"},{\"english\":\"Match Characters that Occur One or More Times\",\"chinese\":\"匹配出现一次或多次的字符\"},{\"english\":\"Match Characters that Occur Zero or More Times\",\"chinese\":\"匹配出现零次或多次的字符\"},{\"english\":\"Find Characters with Lazy Matching\",\"chinese\":\"用惰性匹配来查找字符\"},{\"english\":\"Find One or More Criminals in a Hunt\",\"chinese\":\"在狩猎中找到一个或多个罪犯\"},{\"english\":\"Match Beginning String Patterns\",\"chinese\":\"匹配字符串的开头\"},{\"english\":\"Match Ending String Patterns\",\"chinese\":\"匹配字符串的末尾\"},{\"english\":\"Match All Letters and Numbers\",\"chinese\":\"匹配所有的字母和数字\"},{\"english\":\"Match Everything But Letters and Numbers\",\"chinese\":\"匹配除了字母和数字的所有符号\"},{\"english\":\"Match All Numbers\",\"chinese\":\"匹配所有数字\"},{\"english\":\"Match All Non-Numbers\",\"chinese\":\"匹配所有非数字\"},{\"english\":\"Restrict Possible Usernames\",\"chinese\":\"限制可能的用户名\"},{\"english\":\"Match Whitespace\",\"chinese\":\"匹配空白字符\"},{\"english\":\"Match Non-Whitespace Characters\",\"chinese\":\"匹配非空白字符\"},{\"english\":\"Specify Upper and Lower Number of Matches\",\"chinese\":\"指定匹配的上限和下限\"},{\"english\":\"Specify Only the Lower Number of Matches\",\"chinese\":\"只指定匹配的下限\"},{\"english\":\"Specify Exact Number of Matches\",\"chinese\":\"指定匹配的确切数量\"},{\"english\":\"Check for All or None\",\"chinese\":\"检查全部或无\"},{\"english\":\"Positive and Negative Lookahead\",\"chinese\":\"正向先行断言和负向先行断言\"},{\"english\":\"Reuse Patterns Using Capture Groups\",\"chinese\":\"使用捕获组重用模式\"},{\"english\":\"Use Capture Groups to Search and Replace\",\"chinese\":\"使用捕获组搜索和替换\"},{\"english\":\"Remove Whitespace from Start and End\",\"chinese\":\"删除开头和结尾的空白\"},{\"english\":\"Introduction to the Debugging Challenges\",\"chinese\":\"调试介绍\"},{\"english\":\"Use the JavaScript Console to Check the Value of a Variable\",\"chinese\":\"使用控制台检查变量值\"},{\"english\":\"Understanding the Differences between the freeCodeCamp and Browser Console\",\"chinese\":\"了解 freeCodeCamp 和浏览器控制台之间的差异\"},{\"english\":\"Use typeof to Check the Type of a Variable\",\"chinese\":\"使用 type of 检查变量的类型\"},{\"english\":\"Catch Misspelled Variable and Function Names\",\"chinese\":\"捕获拼错的变量名和函数名\"},{\"english\":\"Catch Unclosed Parentheses, Brackets, Braces and Quotes\",\"chinese\":\"捕获未闭合的括号、方括号、大括号和引号\"},{\"english\":\"Catch Mixed Usage of Single and Double Quotes\",\"chinese\":\"捕捉单引号和双引号的混合用法\"},{\"english\":\"Catch Use of Assignment Operator Instead of Equality Operator\",\"chinese\":\"捕获使用赋值运算符而不是相等运算符\"},{\"english\":\"Catch Missing Open and Closing Parenthesis After a Function Call\",\"chinese\":\"捕捉函数调用后缺少的左括号和右括号\"},{\"english\":\"Catch Arguments Passed in the Wrong Order When Calling a Function\",\"chinese\":\"调用函数时，捕获以错误顺序传递的参数\"},{\"english\":\"Catch Off By One Errors When Using Indexing\",\"chinese\":\"捕获使用索引的时候出现的错误\"},{\"english\":\"Use Caution When Reinitializing Variables Inside a Loop\",\"chinese\":\"重新初始化循环中的变量时要小心\"},{\"english\":\"Prevent Infinite Loops with a Valid Terminal Condition\",\"chinese\":\"使用有效的终止条件防止无限循环\"},{\"english\":\"Introduction to the Basic Data Structure Challenges\",\"chinese\":\"数据结构基础介绍\"},{\"english\":\"Use an Array to Store a Collection of Data\",\"chinese\":\"使用数组存储数据集合\"},{\"english\":\"Access an Array's Contents Using Bracket Notation\",\"chinese\":\"使用方括号访问数组的内容\"},{\"english\":\"Add Items to an Array with push() and unshift()\",\"chinese\":\"使用 push() 和 unshift() 添加项目到数组中\"},{\"english\":\"Remove Items from an Array with pop() and shift()\",\"chinese\":\"使用 pop() 和 shift() 从数组中删除项目\"},{\"english\":\"Remove Items Using splice()\",\"chinese\":\"使用 splice() 删除项目\"},{\"english\":\"Add Items Using splice()\",\"chinese\":\"使用 splice() 增加项目\"},{\"english\":\"Copy Array Items Using slice()\",\"chinese\":\"使用 slice() 拷贝数组项目\"},{\"english\":\"Copy an Array with the Spread Operator\",\"chinese\":\"使用扩展运算符复制数组\"},{\"english\":\"Combine Arrays with the Spread Operator\",\"chinese\":\"组合使用数组和扩展运算符\"},{\"english\":\"Check For The Presence of an Element With indexOf()\",\"chinese\":\"使用 indexOf() 检查元素是否存在\"},{\"english\":\"Iterate Through All an Array's Items Using For Loops\",\"chinese\":\"使用 For 循环迭代数组的所有项\"},{\"english\":\"Create complex multi-dimensional arrays\",\"chinese\":\"创建复杂的多维数组\"},{\"english\":\"Add Key-Value Pairs to JavaScript Objects\",\"chinese\":\"将键值对添加到对象中\"},{\"english\":\"Modify an Object Nested Within an Object\",\"chinese\":\"修改嵌套在对象中的对象\"},{\"english\":\"Access Property Names with Bracket Notation\",\"chinese\":\"使用方括号访问属性名称\"},{\"english\":\"Use the delete Keyword to Remove Object Properties\",\"chinese\":\"使用 delete 关键字删除对象属性\"},{\"english\":\"Check if an Object has a Property\",\"chinese\":\"检查对象是否具有某个属性\"},{\"english\":\" Iterate Through the Keys of an Object with a for...in Statement\",\"chinese\":\"使用 for...in 语句迭代对象\"},{\"english\":\"Generate an Array of All Object Keys with Object.keys()\",\"chinese\":\"使用 Object.Keys() 生成对象所有键组成的数组\"},{\"english\":\"Modify an Array Stored in an Object\",\"chinese\":\"修改存储在对象中的数组\"},{\"english\":\"Introduction to Basic Algorithm Scripting\",\"chinese\":\"算法基础介绍\"},{\"english\":\"Convert Celsius to Fahrenheit\",\"chinese\":\"将摄氏温度转换成华氏温度\"},{\"english\":\"Reverse a String\",\"chinese\":\"翻转字符串\"},{\"english\":\"Factorialize a Number\",\"chinese\":\"数字的阶乘\"},{\"english\":\"Find the Longest Word in a String\",\"chinese\":\"查找字符串中最长的单词\"},{\"english\":\"Return Largest Numbers in Arrays\",\"chinese\":\"返回数组中最大的数字\"},{\"english\":\"Confirm the Ending\",\"chinese\":\"检查字符串的结尾\"},{\"english\":\"Repeat a String Repeat a String\",\"chinese\":\"重复字符串\"},{\"english\":\"Truncate a String\",\"chinese\":\"截断字符串\"},{\"english\":\"Finders Keepers\",\"chinese\":\"发现者与看护者\"},{\"english\":\"Boo who\",\"chinese\":\"真假测试\"},{\"english\":\"Title Case a Sentence\",\"chinese\":\"单词的首字母大写\"},{\"english\":\"Slice and Splice\",\"chinese\":\"slice 和 splice\"},{\"english\":\"Falsy Bouncer\",\"chinese\":\"去除数组中的假值\"},{\"english\":\"Where do I Belong\",\"chinese\":\"我身在何处\"},{\"english\":\"Mutations\",\"chinese\":\"集合之间的关系\"},{\"english\":\"Chunky Monkey\",\"chinese\":\"猴子吃香蕉\"},{\"english\":\"Introduction to the Object Oriented Programming Challenges\",\"chinese\":\"面向对象编程介绍\"},{\"english\":\"Create a Basic JavaScript Object\",\"chinese\":\"创建一个基本的 JavaScript 对象\"},{\"english\":\"Use Dot Notation to Access the Properties of an Object\",\"chinese\":\"使用点符号来访问对象的属性\"},{\"english\":\"Create a Method on an Object\",\"chinese\":\"在对象上创建方法\"},{\"english\":\"Make Code More Reusable with the this Keyword\",\"chinese\":\"使用 this 关键字使代码更加可重用\"},{\"english\":\"Define a Constructor Function\",\"chinese\":\"定义构造函数\"},{\"english\":\"Use a Constructor to Create Objects\",\"chinese\":\"使用构造函数创建对象\"},{\"english\":\"Extend Constructors to Receive Arguments\",\"chinese\":\"扩展构造函数以接收参数\"},{\"english\":\"Verify an Object's Constructor with instanceof\",\"chinese\":\"使用 instance of 验证对象的构造函数\"},{\"english\":\"Understand Own Properties\",\"chinese\":\"了解自己的属性\"},{\"english\":\"Use Prototype Properties to Reduce Duplicate Code\",\"chinese\":\"使用原型属性来减少重复代码\"},{\"english\":\"Iterate Over All Properties\",\"chinese\":\"迭代所有属性\"},{\"english\":\"Understand the Constructor Property\",\"chinese\":\"了解构造函数属性\"},{\"english\":\"Change the Prototype to a New Object\",\"chinese\":\"将原型更改为新对象\"},{\"english\":\"Remember to Set the Constructor Property when Changing the Prototype\",\"chinese\":\"更改原型时，记得设置构造函数属性\"},{\"english\":\"Understand Where an Object’s Prototype Comes From\",\"chinese\":\"了解对象的原型来自哪里\"},{\"english\":\"Understand the Prototype Chain\",\"chinese\":\"了解原型链\"},{\"english\":\"Use Inheritance So You Don't Repeat Yourself\",\"chinese\":\"使用继承避免重复\"},{\"english\":\"Inherit Behaviors from a Supertype\",\"chinese\":\"从超类继承行为\"},{\"english\":\"Set the Child's Prototype to an Instance of the Parent\",\"chinese\":\"将子辈的原型设置为父辈的实例\"},{\"english\":\"Reset an Inherited Constructor Property\",\"chinese\":\"重置一个继承的构造函数属性\"},{\"english\":\"Add Methods After Inheritance\",\"chinese\":\"继承后添加方法\"},{\"english\":\"Override Inherited Methods\",\"chinese\":\"重写继承的方法\"},{\"english\":\"Use a Mixin to Add Common Behavior Between Unrelated Objects\",\"chinese\":\"使用 Mixin 在不相关对象之间添加共同行为\"},{\"english\":\"Use Closure to Protect Properties Within an Object from Being Modified Externally\",\"chinese\":\"使用闭包保护对象内的属性不被外部修改\"},{\"english\":\"Understand the Immediately Invoked Function Expression (IIFE)\",\"chinese\":\"了解立即调用函数表达（IIFE）\"},{\"english\":\"Use an IIFE to Create a Module\",\"chinese\":\" 使用 IIFE 创建一个模块\"},{\"english\":\"Introduction to the Functional Programming Challenges\",\"chinese\":\"函数式编程介绍\"},{\"english\":\"Learn About Functional Programming\",\"chinese\":\"学习函数式编程\"},{\"english\":\"Understand Functional Programming Terminology\",\"chinese\":\"了解函数式编程术语\"},{\"english\":\"Understand the Hazards of Using Imperative Code\",\"chinese\":\"了解使用命令式编程的危害\"},{\"english\":\"Avoid Mutations and Side Effects Using Functional Programming\",\"chinese\":\"使用函数式编程避免突变和副作用\"},{\"english\":\"Pass Arguments to Avoid External Dependence in a Function\",\"chinese\":\"传递参数以避免函数中的外部依赖\"},{\"english\":\"Refactor Global Variables Out of Functions\",\"chinese\":\"在函数中重构全局变量\"},{\"english\":\"Use the map Method to Extract Data from an Array\",\"chinese\":\"使用 map 方法从数组中提取数据\"},{\"english\":\"Implement map on a Prototype\",\"chinese\":\"在原型上实现 map 方法\"},{\"english\":\"Use the filter Method to Extract Data from an Array\",\"chinese\":\"使用 filter 方法从数组中提取数据\"},{\"english\":\"Implement the filter Method on a Prototype\",\"chinese\":\"在原型上实现 filter 方法\"},{\"english\":\"Return Part of an Array Using the slice Method\",\"chinese\":\"使用 slice 方法返回数组的一部分\"},{\"english\":\"Remove Elements from an Array Using slice Instead of splice\",\"chinese\":\"使用 slice 而不是 splice 从数组中移除元素\"},{\"english\":\"Combine Two Arrays Using the concat Method\",\"chinese\":\"使用 concat 方法组合两个数组\"},{\"english\":\"Add Elements to the End of an Array Using concat Instead of push\",\"chinese\":\"使用 concat 而不是 push 将元素添加到数组的末尾\"},{\"english\":\"Use the reduce Method to Analyze Data\",\"chinese\":\"使用 reduce 方法分析数据\"},{\"english\":\"Sort an Array Alphabetically using the sort Method\",\"chinese\":\"使用 sort 方法按字母顺序给数组排序\"},{\"english\":\"Return a Sorted Array Without Changing the Original Array\",\"chinese\":\"在不更改原始数组的前提下返回排序后的数组\"},{\"english\":\"Split a String into an Array Using the split Method\",\"chinese\":\"使用 split 方法将字符串拆分成数组\"},{\"english\":\"Combine an Array into a String Using the join Method\",\"chinese\":\"使用 join 方法将数组组合成字符串\"},{\"english\":\"Apply Functional Programming to Convert Strings to URL Slugs\",\"chinese\":\"应用函数式编程将字符串转换为URL片段\"},{\"english\":\"Use the every Method to Check that Every Element in an Array Meets a Criteria\",\"chinese\":\"使用 every 方法检查数组中的每个元素是否符合条件\"},{\"english\":\"Use the some Method to Check that Any Elements in an Array Meet a Criteria\",\"chinese\":\"使用 some 方法检查数组中是否有元素是否符合条件\"},{\"english\":\"Introduction to Currying and Partial Application\",\"chinese\":\"函数柯里化\"},{\"english\":\"Introduction to the Intermediate Algorithm Scripting Challenges\",\"chinese\":\"算法中级介绍\"},{\"english\":\"Sum All Numbers in a Range\",\"chinese\":\"范围内的数字求和\"},{\"english\":\"Diff Two Arrays\",\"chinese\":\"区分两个数组\"},{\"english\":\"Seek and Destroy\",\"chinese\":\"瞄准和消灭\"},{\"english\":\"Wherefore art thou\",\"chinese\":\"罗密欧与朱丽叶\"},{\"english\":\"Spinal Tap Case\",\"chinese\":\"短线连接格式\"},{\"english\":\"Pig Latin\",\"chinese\":\"儿童黑话\"},{\"english\":\"Search and Replace\",\"chinese\":\"搜索和替换\"},{\"english\":\"DNA Pairing\",\"chinese\":\"DNA 配对\"},{\"english\":\"Missing letters\",\"chinese\":\"丢失的字母\"},{\"english\":\"Sorted Union\",\"chinese\":\"集合排序\"},{\"english\":\"Convert HTML Entities\",\"chinese\":\"转换HTML实体\"},{\"english\":\"Sum All Odd Fibonacci Numbers\",\"chinese\":\"求斐波那契数组中的奇数之和\"},{\"english\":\"Sum All Primes\",\"chinese\":\"对所有素数求和\"},{\"english\":\"Smallest Common Multiple\",\"chinese\":\"最小公倍数\"},{\"english\":\"Drop it\",\"chinese\":\"放弃\"},{\"english\":\"Steamroller\",\"chinese\":\"扁平化\"},{\"english\":\"Binary Agents\",\"chinese\":\"二进制转化\"},{\"english\":\"Everything Be True\",\"chinese\":\"真假值判断\"},{\"english\":\"Arguments Optional\",\"chinese\":\"可选参数\"},{\"english\":\"Make a Person\",\"chinese\":\"构造一个 Person 类\"},{\"english\":\"Map the Debris\",\"chinese\":\"绘制碎片图\"},{\"english\":\"Introduction to the JavaScript Algorithms and Data Structures Projects\",\"chinese\":\"算法和数据结构介绍\"},{\"english\":\"Palindrome Checker\",\"chinese\":\"回文检查器\"},{\"english\":\"Roman Numeral Converter\",\"chinese\":\"罗马数字转换器\"},{\"english\":\"Caesars Cipher\",\"chinese\":\"凯撒密码\"},{\"english\":\"Telephone Number Validator\",\"chinese\":\"电话号码验证器\"},{\"english\":\"Cash Register\",\"chinese\":\"收银机\"},{\"english\":\"Introduction to the Bootstrap Challenges\",\"chinese\":\"Bootstrap 介绍\"},{\"english\":\"Use Responsive Design with Bootstrap Fluid Containers\",\"chinese\":\"使用 Fluid 容器实现响应式设计\"},{\"english\":\"Make Images Mobile Responsive\",\"chinese\":\"使图片自适应移动端\"},{\"english\":\"Center Text with Bootstrap\",\"chinese\":\"用 Bootstrap 居中文本\"},{\"english\":\"Create a Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 按钮\"},{\"english\":\"Create a Block Element Bootstrap Button\",\"chinese\":\"创建一个 Bootstrap 块级元素\"},{\"english\":\"Taste the Bootstrap Button Color Rainbow\",\"chinese\":\"体验 Bootstrap 彩虹色的按钮\"},{\"english\":\"Call out Optional Actions with btn-info\",\"chinese\":\"使用 btn-info 调出可选操作\"},{\"english\":\"Warn Your Users of a Dangerous Action with btn-danger\",\"chinese\":\"使用 btn-danger 警告你的用户，这是危险操作。\"},{\"english\":\"Use the Bootstrap Grid to Put Elements Side By Side\",\"chinese\":\"使用 Bootstrap 网格并排放置元素\"},{\"english\":\"Ditch Custom CSS for Bootstrap\",\"chinese\":\"用 Bootstrap 来取代我们之前的自定义样式\"},{\"english\":\"Use a span to Target Inline Elements\",\"chinese\":\"使用 span 创建行内元素\"},{\"english\":\"Create a Custom Heading\",\"chinese\":\"创建自定义标题\"},{\"english\":\"Add Font Awesome Icons to our Buttons\",\"chinese\":\"将字体图标添加到我们的按钮中\"},{\"english\":\"Add Font Awesome Icons to all of our Buttons\",\"chinese\":\"将字体图标添加到我们所有的按钮上\"},{\"english\":\"Responsively Style Radio Buttons\",\"chinese\":\"响应式风格的单选按钮\"},{\"english\":\"Responsively Style Checkboxes\",\"chinese\":\"响应式风格的复选框\"},{\"english\":\"Style Text Inputs as Form Controls\",\"chinese\":\"给表单控件的输入框添加样式\"},{\"english\":\"Line up Form Elements Responsively with Bootstrap\",\"chinese\":\"使用 Bootstrap 响应式排列表单元素\"},{\"english\":\"Create a Bootstrap Headline\",\"chinese\":\"创建一个 Bootstrap 标题\"},{\"english\":\"House our page within a Bootstrap container-fluid div\",\"chinese\":\"将我们的页面放在 Fluid 容器中\"},{\"english\":\"Create a Bootstrap Row\",\"chinese\":\"创建一个 Bootstrap Row\"},{\"english\":\"Split Your Bootstrap Row\",\"chinese\":\"分割你的 Bootstrap Row\"},{\"english\":\"Create Bootstrap Wells\",\"chinese\":\"创建 Bootstrap Wells\"},{\"english\":\"Add Elements within Your Bootstrap Wells\",\"chinese\":\"在 Bootstrap Wells 中添加元素\"},{\"english\":\"Apply the Default Bootstrap Button Style\",\"chinese\":\"给 Bootstrap 按钮添加默认样式\"},{\"english\":\"Create a Class to Target with jQuery Selectors\",\"chinese\":\"分别给每个目标元素的 class 属性添加一个 target 值\"},{\"english\":\"Add id Attributes to Bootstrap Elements\",\"chinese\":\"给 Bootstrap 元素添加id属性\"},{\"english\":\"Label Bootstrap Wells\",\"chinese\":\"给 Bootstrap Wells 贴标签\"},{\"english\":\"Give Each Element a Unique id\",\"chinese\":\"给每个元素一个唯一的 id\"},{\"english\":\"Label Bootstrap Buttons\",\"chinese\":\"给 Bootstrap 按钮贴标签\"},{\"english\":\"Use Comments to Clarify Code\",\"chinese\":\"使用注释来说明代码\"},{\"english\":\"Introduction to jQuery\",\"chinese\":\"jQuery 介绍\"},{\"english\":\"Learn How Script Tags and Document Ready Work\",\"chinese\":\"了解 Script 和 Document 是如何工作的\"},{\"english\":\"Target HTML Elements with Selectors Using jQuery\",\"chinese\":\"使用 jQuery 配合元素选择器选择元素\"},{\"english\":\"Target Elements by Class Using jQuery\",\"chinese\":\"使用 jQuery 配合 class 选择器选择元素\"},{\"english\":\"Target Elements by id Using jQuery\",\"chinese\":\"使用 jQuery 配合 id 选择器选择元素\"},{\"english\":\"Delete Your jQuery Functions\",\"chinese\":\"删除 jQuery 函数\"},{\"english\":\"Target the Same Element with Multiple jQuery Selectors\",\"chinese\":\"用多个 jQuery 选择器瞄准同一个元素\"},{\"english\":\"Remove Classes from an Element with jQuery\",\"chinese\":\"使用 jQuery 从元素中移除 class\"},{\"english\":\"Change the CSS of an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素的 CSS\"},{\"english\":\"Disable an Element Using jQuery\",\"chinese\":\"使用 jQuery 禁用元素\"},{\"english\":\"Change Text Inside an Element Using jQuery\",\"chinese\":\"使用 jQuery 更改元素内部的文本\"},{\"english\":\"Remove an Element Using jQuery\",\"chinese\":\"使用 jQuery 删除元素\"},{\"english\":\"Use appendTo to Move Elements with jQuery\",\"chinese\":\"使用 jQuery 的 appendTo 方法可以移动元素\"},{\"english\":\"Clone an Element Using jQuery\",\"chinese\":\"使用 jQuery 克隆元素\"},{\"english\":\"Target the Parent of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的父元素\"},{\"english\":\"Target the Children of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的子元素\"},{\"english\":\"Target a Specific Child of an Element Using jQuery\",\"chinese\":\"使用 jQuery 选择元素的特定子元素\"},{\"english\":\"Target Even Elements Using jQuery\",\"chinese\":\"使用 jQuery 选择偶数元素\"},{\"english\":\"Use jQuery to Modify the Entire Page\",\"chinese\":\"使用 jQuery 修改整个页面\"},{\"english\":\"Introduction to the Sass Challenges\",\"chinese\":\"Sass 介绍\"},{\"english\":\"Store Data with Sass Variables\",\"chinese\":\"用 Sass 变量存储数据\"},{\"english\":\"Nest CSS with Sass\",\"chinese\":\"用 Sass 嵌套 CSS\"},{\"english\":\"Create Reusable CSS with Mixins\",\"chinese\":\"用 Mixins 创建可重用 CSS\"},{\"english\":\"Use @if and @else to Add Logic To Your Styles\",\"chinese\":\"使用 @if 和 @else 为你的样式添加逻辑\"},{\"english\":\"Use @for to Create a Sass Loop\",\"chinese\":\"使用 @for 创建一个 Sass 循环\"},{\"english\":\"Use @each to Map Over Items in a List\",\"chinese\":\"使用 @each 遍历列表中的项目\"},{\"english\":\"Apply a Style Until a Condition is Met with @while\",\"chinese\":\"使用 @while 当条件满足时样式生效\"},{\"english\":\"Split Your Styles into Smaller Chunks with Partials\",\"chinese\":\"用 Partials 将你的样式分成小块\"},{\"english\":\"Extend One Set of CSS Styles to Another Element\",\"chinese\":\"将一组CSS样式扩展到另一个元素\"},{\"english\":\"Introduction to the React Challenges\",\"chinese\":\"React 介绍\"},{\"english\":\"Create a Simple JSX Element\",\"chinese\":\"创建一个简单的 JSX 元素\"},{\"english\":\"Create a Complex JSX Element\",\"chinese\":\"创建一个复杂的 JSX 元素\"},{\"english\":\"Add Comments in JSX\",\"chinese\":\"在 JSX 中添加注释\"},{\"english\":\"Render HTML Elements to the DOM\",\"chinese\":\"渲染 HTML 元素为 DOM 树\"},{\"english\":\"Define an HTML Class in JSX\",\"chinese\":\"在 JSX 中定义一个 HTML Class\"},{\"english\":\"Learn About Self-Closing JSX Tags\",\"chinese\":\"了解自动闭合的 JSX 标记\"},{\"english\":\"Create a Stateless Functional Component\",\"chinese\":\"创建一个无状态的函数组件\"},{\"english\":\"Create a React Component\",\"chinese\":\"创建一个 React 组件\"},{\"english\":\"Create a Component with Composition\",\"chinese\":\"用组合的方式创建一个 React 组件 \"},{\"english\":\"Use React to Render Nested Components\",\"chinese\":\"使用 React 渲染嵌套组件\"},{\"english\":\"Compose React Components\",\"chinese\":\"组合 React 组件\"},{\"english\":\"Render a Class Component to the DOM\",\"chinese\":\"渲染 class 组件为 Dom 树\"},{\"english\":\"Write a React Component from Scratch\",\"chinese\":\"从零开始写一个 React 组件\"},{\"english\":\"Pass Props to a Stateless Functional Component\",\"chinese\":\"将 Props 传递给无状态函数组件\"},{\"english\":\"Pass an Array as Props\",\"chinese\":\"传递一个数组作为 Props\"},{\"english\":\"Use Default Props\",\"chinese\":\"使用默认的 Props\"},{\"english\":\"Override Default Props\",\"chinese\":\"覆盖默认的 Props\"},{\"english\":\"Use PropTypes to Define the Props You Expect\",\"chinese\":\"使用 PropTypes 来定义你期望的 Props\"},{\"english\":\"Access Props Using this.props\",\"chinese\":\"使用 this.props 访问 Props\"},{\"english\":\"Review Using Props with Stateless Functional Components\",\"chinese\":\"复习如何使用 Props 和无状态函数组件\"},{\"english\":\"Create a Stateful Component\",\"chinese\":\"创建一个有状态的组件\"},{\"english\":\"Render State in the User Interface\",\"chinese\":\"在用户界面中渲染状态\"},{\"english\":\"Render State in the User Interface Another Way\",\"chinese\":\"以另一种方式在用户界面中渲染状态\"},{\"english\":\"Set State with this.setState\",\"chinese\":\"用 this.setState 设置状态\"},{\"english\":\"Bind 'this' to a Class Method\",\"chinese\":\"将 this 绑定到 Class 方法\"},{\"english\":\"Use State to Toggle an Element\",\"chinese\":\"使用 State 切换元素\"},{\"english\":\"Write a Simple Counter\",\"chinese\":\"写一个简单的计数器\"},{\"english\":\"Create a Controlled Input\",\"chinese\":\"创建一个可以控制的输入框\"},{\"english\":\"Create a Controlled Form\",\"chinese\":\"创建一个可以控制的表单\"},{\"english\":\"Pass State as Props to Child Components\",\"chinese\":\"将 State 作为 Props 传递给子组件\"},{\"english\":\"Pass a Callback as Props\",\"chinese\":\"传递回调作为 Props\"},{\"english\":\"Use the Lifecycle Method componentWillMount\",\"chinese\":\"使用生命周期方法：componentWillMount\"},{\"english\":\"Use the Lifecycle Method componentDidMount\",\"chinese\":\"使用生命周期方法：componentDidMount\"},{\"english\":\"Add Event Listeners\",\"chinese\":\"添加事件侦听器\"},{\"english\":\"Manage Updates with Lifecycle Methods\",\"chinese\":\"使用生命周期方法管理更新\"},{\"english\":\"Optimize Re-Renders with shouldComponentUpdate\",\"chinese\":\"使用 shouldComponentUpdate 优化重新渲染\"},{\"english\":\"Introducing Inline Styles\",\"chinese\":\"介绍内联样式\"},{\"english\":\"Add Inline Styles in React\",\"chinese\":\"在 React 中添加内联样式\"},{\"english\":\"Use Advanced JavaScript in React Render Method\",\"chinese\":\"在 React Render 方法中使用 JavaScript\"},{\"english\":\"Render with an If/Else Condition\",\"chinese\":\"使用 If/Else 条件进行渲染\"},{\"english\":\"Use && for a More Concise Conditional\",\"chinese\":\"使用 && 获得更简洁的条件\"},{\"english\":\"Use a Ternary Expression for Conditional Rendering\",\"chinese\":\"使用三元表达式进行条件渲染\"},{\"english\":\"Render Conditionally from Props\",\"chinese\":\"根据 Props 有条件地渲染\"},{\"english\":\"Change Inline CSS Conditionally Based on Component State\",\"chinese\":\"根据组件状态有条件地更改内联 CSS\"},{\"english\":\"Use Array.map() to Dynamically Render Elements\",\"chinese\":\"使用 Array.map() 动态渲染元素\"},{\"english\":\"Give Sibling Elements a Unique Key Attribute\",\"chinese\":\"给同级元素一个唯一的键属性\"},{\"english\":\"Use Array.filter() to Dynamically Filter an Array\",\"chinese\":\"使用 Array.Filter() 动态过滤数组\"},{\"english\":\"Render React on the Server with renderToString\",\"chinese\":\"用 renderToString 在服务器上渲染 React\"},{\"english\":\"Introduction to the Redux Challenges\",\"chinese\":\"Redux 介绍\"},{\"english\":\"Create a Redux Store\",\"chinese\":\"创建一个 Redux Store\"},{\"english\":\"Get State from the Redux Store\",\"chinese\":\"从 Redux Store 获取状态\"},{\"english\":\"Define a Redux Action\",\"chinese\":\"定义一个 Redux Action\"},{\"english\":\"Define an Action Creator\",\"chinese\":\"定义一个 Action Creator\"},{\"english\":\"Dispatch an Action Event\",\"chinese\":\"分发 Action Event\"},{\"english\":\"Handle an Action in the Store\",\"chinese\":\"在 Store 里处理 Action\"},{\"english\":\"Use a Switch Statement to Handle Multiple Actions\",\"chinese\":\"使用 Switch 语句处理多个 Actions\"},{\"english\":\"Use const for Action Types\",\"chinese\":\"使用 const 声明 Action Types\"},{\"english\":\"Register a Store Listener\",\"chinese\":\"注册 Store 监听器\"},{\"english\":\"Combine Multiple Reducers\",\"chinese\":\"组合多个 Reduces\"},{\"english\":\"Send Action Data to the Store\",\"chinese\":\"发送 Action Data 给 Store\"},{\"english\":\"Use Middleware to Handle Asynchronous Actions\",\"chinese\":\"使用中间件处理异步操作\"},{\"english\":\"Write a Counter with Redux\",\"chinese\":\"用 Redux 写一个计数器\"},{\"english\":\"Never Mutate State\",\"chinese\":\"永不改变状态\"},{\"english\":\"Use the Spread Operator on Arrays\",\"chinese\":\"在数组中使用扩展运算符\"},{\"english\":\"Remove an Item from an Array\",\"chinese\":\"从数组中删除项目\"},{\"english\":\"Copy an Object with Object.assign\",\"chinese\":\"使用 Object.assign 拷贝对象\"},{\"english\":\"Introduction to the React and Redux Challenges\",\"chinese\":\"React 和 Redux 介绍\"},{\"english\":\"Getting Started with React Redux\",\"chinese\":\"React 和 Redux 入门\"},{\"english\":\"Manage State Locally First\",\"chinese\":\"首先在本地管理状态\"},{\"english\":\"Extract State Logic to Redux\",\"chinese\":\"提取状态逻辑给 Redux\"},{\"english\":\"Use Provider to Connect Redux to React\",\"chinese\":\"使用 Provider 连接 Redux 和 React\"},{\"english\":\"Map State to Props\",\"chinese\":\"映射 State 到 Props\"},{\"english\":\"Map Dispatch to Props\",\"chinese\":\"映射 Dispatch 到 Props\"},{\"english\":\"Connect Redux to React\",\"chinese\":\"连接 Redux 和 React\"},{\"english\":\"Connect Redux to the Messages App\",\"chinese\":\"将 Redux 连接到 Messages App\"},{\"english\":\"Extract Local State into Redux\",\"chinese\":\"将局部状态提取到 Redux 中\"},{\"english\":\"Moving Forward From Here\",\"chinese\":\"从这里前进\"},{\"english\":\"Introduction to the Front End Libraries Projects\",\"chinese\":\"项目实战介绍\"},{\"english\":\"Build a Random Quote Machine\",\"chinese\":\"构建一个随机引语生成器\"},{\"english\":\"Build a Markdown Previewer\",\"chinese\":\"构建一个 Markdown 文件预览器\"},{\"english\":\"Build a Drum Machine\",\"chinese\":\"构建一台鼓式机器\"},{\"english\":\"Build a JavaScript Calculator\",\"chinese\":\"构建一个 JavaScript 计算器\"},{\"english\":\"Build a Pomodoro Clock\",\"chinese\":\"构建一个番茄时钟\"},{\"english\":\"Introduction to the Data Visualization with D3 Challenges\",\"chinese\":\"数据可视化\"},{\"english\":\"Add Document Elements with D3\",\"chinese\":\"用 D3 给文档添加元素\"},{\"english\":\"Select a Group of Elements with D3\",\"chinese\":\"用 D3 选择一组元素\"},{\"english\":\"Work with Data in D3\",\"chinese\":\"使用 D3 中的数据\"},{\"english\":\"Work with Dynamic Data in D3\",\"chinese\":\"使用 D3 中的动态数据\"},{\"english\":\"Add Inline Styling to Elements\",\"chinese\":\"给元素添加内联样式\"},{\"english\":\"Change Styles Based on Data\",\"chinese\":\"根据数据更改样式\"},{\"english\":\"Add Classes with D3\",\"chinese\":\"用 D3 添加 Class\"},{\"english\":\"Update the Height of an Element Dynamically\",\"chinese\":\"动态更新元素的高度\"},{\"english\":\"Change the Presentation of a Bar Chart\",\"chinese\":\"更改条形图的显示方式\"},{\"english\":\"Learn About SVG in D3\",\"chinese\":\"了解 D3 中的 SVG\"},{\"english\":\"Display Shapes with SVG\",\"chinese\":\"用 SVG 显示形状\"},{\"english\":\"Create a Bar for Each Data Point in the Set\",\"chinese\":\"为集合中的每个数据点创建一个 Bar\"},{\"english\":\"Dynamically Set the Coordinates for Each Bar\",\"chinese\":\"动态设置每个 Bar 的坐标\"},{\"english\":\"Dynamically Change the Height of Each Bar\",\"chinese\":\"动态更改每个条的高度\"},{\"english\":\"Invert SVG Elements\",\"chinese\":\"反转 SVG 元素\"},{\"english\":\"Change the Color of an SVG Element\",\"chinese\":\"更改 SVG 元素的颜色\"},{\"english\":\"Add Labels to D3 Elements\",\"chinese\":\"给 D3 元素添加标签\"},{\"english\":\"Style D3 Labels\",\"chinese\":\"给 D3 标签添加样式\"},{\"english\":\"Add a Hover Effect to a D3 Element\",\"chinese\":\"给 D3 元素添加悬停效果\"},{\"english\":\"Add a Tooltip to a D3 Element\",\"chinese\":\"给 D3 元素添加工具提示\"},{\"english\":\"Create a Scatterplot with SVG Circles\",\"chinese\":\"使用 SVG Circles 创建散点图\"},{\"english\":\"Add Attributes to the Circle Elements\",\"chinese\":\"给 Circle 元素添加属性\"},{\"english\":\"Add Labels to Scatter Plot Circles\",\"chinese\":\"向散点图的 Circles 添加标签\"},{\"english\":\"Create a Linear Scale with D3\",\"chinese\":\"用 D3 创建线性比例\"},{\"english\":\"Set a Domain and a Range on a Scale\",\"chinese\":\"按比例设置域和范围\"},{\"english\":\"Use the d3.max and d3.min Functions to Find Minimum and Maximum Values in a Dataset\",\"chinese\":\"使用 d3.max 和 d3.min 函数在数据集中查找最小值和最大值\"},{\"english\":\"Use Dynamic Scales\",\"chinese\":\"使用动态比例\"},{\"english\":\"Use a Pre-Defined Scale to Place Elements\",\"chinese\":\"使用预定义的比例放置元素\"},{\"english\":\"Add Axes to a Visualization\",\"chinese\":\"添加坐标轴到可视化中\"},{\"english\":\"Introduction to the JSON APIs and AJAX Challenges\",\"chinese\":\"介绍 JSON 和 AJAX\"},{\"english\":\"Handle Click Events with JavaScript using the onclick property\",\"chinese\":\"使用 onclick 属性处理点击事件\"},{\"english\":\"Change Text with click Events\",\"chinese\":\"通过单击事件更改文本\"},{\"english\":\"Get JSON with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法获取 JSON\"},{\"english\":\"Access the JSON Data from an API\",\"chinese\":\"访问来自 API 的 JSON 数据\"},{\"english\":\"Convert JSON Data to HTML\",\"chinese\":\"将 JSON 数据转换为 HTML\"},{\"english\":\"Render Images from Data Sources\",\"chinese\":\"渲染数据源的图像\"},{\"english\":\"Pre-filter JSON to Get the Data You Need\",\"chinese\":\"预先过滤 JSON 以获得所需的数据\"},{\"english\":\"Get Geolocation Data to Find A User's GPS Coordinates\",\"chinese\":\"根据地理位置数据找到用户的 GPS 坐标\"},{\"english\":\"Post Data with the JavaScript XMLHttpRequest Method\",\"chinese\":\"使用 XMLHttpRequest 方法发送数据\"},{\"english\":\"Introduction to the Data Visualization Projects\",\"chinese\":\"介绍数据可视化\"},{\"english\":\"Visualize Data with a Bar Chart\",\"chinese\":\"用条形图可视化数据\"},{\"english\":\"Visualize Data with a Scatterplot Graph\",\"chinese\":\"用散点图可视化数据\"},{\"english\":\"Visualize Data with a Heat Map\",\"chinese\":\"用热图可视化数据\"},{\"english\":\"Visualize Data with a Choropleth Map\",\"chinese\":\"用地区分布图可视化数据\"},{\"english\":\"Visualize Data with a Treemap Diagram\",\"chinese\":\"用树形图可视化数据\"},{\"english\":\"Introduction to the Managing Packages with npm Challenges\",\"chinese\":\"介绍 Node 包管理器——npm\"},{\"english\":\"How to Use package.json, the Core of Any Node.js Project or npm Package\",\"chinese\":\"如何使用 package.json 成为 Node.js 项目或 npm 包的核心\"},{\"english\":\"Add a Description to Your package.json\",\"chinese\":\"给 package.json 添加一个描述\"},{\"english\":\"Add Keywords to Your package.json\",\"chinese\":\"给 package.json 添加关键词\"},{\"english\":\"Add a License to Your package.json\",\"chinese\":\"给 package.json 添加许可证\"},{\"english\":\"Add a Version to Your package.json\",\"chinese\":\"给 package.json 添加版本号\"},{\"english\":\"Expand Your Project with External Packages from npm\",\"chinese\":\"使用 npm 的外部软件包扩展您的项目\"},{\"english\":\"Manage npm Dependencies By Understanding Semantic Versioning\",\"chinese\":\"通过理解语义版本化来管理 npm 依赖关系\"},{\"english\":\"Use the Tilde-Character to Always Use the Latest Patch Version of a Dependency\",\"chinese\":\"用波浪字符始终使用依赖项的最新补丁版本\"},{\"english\":\"Use the Caret-Character to Use the Latest Minor Version of a Dependency\",\"chinese\":\"用插入字符可以使用依赖项的最新次要版本\"},{\"english\":\"Remove a Package from Your Dependencies\",\"chinese\":\"从依赖项中删除包\"},{\"english\":\"Introduction to the Basic Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 基础\"},{\"english\":\"Meet the Node console\",\"chinese\":\"认识 Node 的控制台\"},{\"english\":\"Start a Working Express Server\",\"chinese\":\"启动一个 Express 服务器\"},{\"english\":\"Serve an HTML File\",\"chinese\":\"服务 HTML 文件\"},{\"english\":\"Serve Static Assets\",\"chinese\":\"服务静态资源\"},{\"english\":\"Serve JSON on a Specific Route\",\"chinese\":\"服务指定路由上的 JSON\"},{\"english\":\"Use the .env File\",\"chinese\":\"使用 .env 文件\"},{\"english\":\"Implement a Root-Level Request Logger Middleware\",\"chinese\":\"实现一个根层的请求记录器中间件\"},{\"english\":\"Chain Middleware to Create a Time Server\",\"chinese\":\"使用链中间件来创建时间服务器\"},{\"english\":\"Get Route Parameter Input from the Client\",\"chinese\":\"从客户端获取路由参数输入\"},{\"english\":\"Get Query Parameter Input from the Client\",\"chinese\":\"从客户端获取查询参数输入\"},{\"english\":\"Use body-parser to Parse POST Requests\",\"chinese\":\"使用 body-parser 来解析POST请求\"},{\"english\":\"Get Data from POST Requests\",\"chinese\":\"从 POST 请求中获取数据\"},{\"english\":\"Introduction to the MongoDB and Mongoose Challenges\",\"chinese\":\"介绍 MongogDB 和 Mongoose\"},{\"english\":\"Install and Set Up Mongoose\",\"chinese\":\"安装和设置 Mongoose\"},{\"english\":\"Create a Model\",\"chinese\":\"创建一个模型\"},{\"english\":\"Create and Save a Record of a Model\",\"chinese\":\"用模型来创建并保存一条记录\"},{\"english\":\"Create Many Records with model.create()\",\"chinese\":\"使用 model.create() 创建许多记录\"},{\"english\":\"Use model.find() to Search Your Database\",\"chinese\":\"使用 model.find() 查找数据库\"},{\"english\":\"Use model.findOne() to Return a Single Matching Document from Your Database\",\"chinese\":\"使用 model.findOne() 从数据库中返回一个匹配的文档\"},{\"english\":\"Use model.findById() to Search Your Database By _id\",\"chinese\":\"使用 model.findById() 按 _id 搜索数据库\"},{\"english\":\"Perform Classic Updates by Running Find, Edit, then Save\",\"chinese\":\"通过运行 find、edit、save 来执行经典更新\"},{\"english\":\"Perform New Updates on a Document Using model.findOneAndUpdate()\",\"chinese\":\"使用 model.findOneAndUpdate() 对文档执行新的更新\"},{\"english\":\"Delete One Document Using model.findByIdAndRemove\",\"chinese\":\"使用 model.findByIdAndRemove() 删除一个文档\"},{\"english\":\"Delete Many Documents with model.remove()\",\"chinese\":\"使用 model.remove() 删除许多文档\"},{\"english\":\"Chain Search Query Helpers to Narrow Search Results\",\"chinese\":\"通过链搜索查询帮助器缩小搜索结果\"},{\"english\":\"Introduction to the APIs and Microservices Projects\",\"chinese\":\"介绍 API 和 微服务\"},{\"english\":\"Timestamp Microservice\",\"chinese\":\"时间戳\"},{\"english\":\"Request Header Parser Microservice\",\"chinese\":\"请求头解析器\"},{\"english\":\"URL Shortener Microservice\",\"chinese\":\"短网址\"},{\"english\":\"Exercise Tracker\",\"chinese\":\"运动跟踪器\"},{\"english\":\"File Metadata Microservice\",\"chinese\":\"文件元数据\"},{\"english\":\"Introduction to Information Security with HelmetJS Challenges\",\"chinese\":\"介绍信息安全必备工具——Helmet\"},{\"english\":\"Install and Require Helmet\",\"chinese\":\"安装和引入 Helmet\"},{\"english\":\"Hide Potentially Dangerous Information Using helmet.hidePoweredBy()\",\"chinese\":\"使用 helmet.hidePoweredBy() 隐藏潜在的危险信息\"},{\"english\":\"Mitigate the Risk of Clickjacking with helmet.frameguard()\",\"chinese\":\"使用 helmet.frameguard() 降低点击劫持的风险\"},{\"english\":\"Mitigate the Risk of Cross Site Scripting (XSS) Attacks with helmet.xssFilter()\",\"chinese\":\"使用 helmet.xssFilter() 降低跨站点脚本（XSS）攻击的风险\"},{\"english\":\"Avoid Inferring the Response MIME Type with helmet.noSniff()\",\"chinese\":\"使用 helment.noSniff() 避免推断响应的 MIME 类型\"},{\"english\":\"Prevent IE from Opening Untrusted HTML with helmet.ieNoOpen()\",\"chinese\":\"使用 helment.ieNoOpen() 防止 IE 打开不受信任的 HTML\"},{\"english\":\"Ask Browsers to Access Your Site via HTTPS Only with helmet.hsts()\",\"chinese\":\"使用 helmet.hsts() 要求浏览器只通过HTTPS访问你的网站\"},{\"english\":\"Disable DNS Prefetching with helmet.dnsPrefetchControl()\",\"chinese\":\"使用 helmet.dnsPrefetchControl() 禁用 DNS 预取\"},{\"english\":\"Disable Client-Side Caching with helmet.noCache()\",\"chinese\":\"使用 helment.noCache() 禁用客户端缓存\"},{\"english\":\"Set a Content Security Policy with helmet.contentSecurityPolicy()\",\"chinese\":\"使用 helment.contentSecurityPolicy() 设置内容安全策略\"},{\"english\":\"Configure Helmet Using the ‘parent’ helmet() Middleware\",\"chinese\":\"使用 helmet() 中间件来配置 Helmet\"},{\"english\":\"Understand BCrypt Hashes\",\"chinese\":\"了解加密哈希\"},{\"english\":\"Hash and Compare Passwords Asynchronously\",\"chinese\":\"异步哈希和比较密码\"},{\"english\":\"Hash and Compare Passwords Synchronously\",\"chinese\":\"同步哈希和比较密码 \"},{\"english\":\"Introduction to the Quality Assurance with Chai Challenges\",\"chinese\":\"介绍质量保证必备工具——Chai\"},{\"english\":\"Learn How JavaScript Assertions Work\",\"chinese\":\"了解 JavaScript 断言是如何工作的\"},{\"english\":\"Test if a Variable or Function is Defined\",\"chinese\":\"测试变量或函数是否已定义\"},{\"english\":\"Use Assert.isOK and Assert.isNotOK\",\"chinese\":\"使用 Assert.isok() 和 Assert.isNotOK()\"},{\"english\":\"Test for Truthiness\",\"chinese\":\"真假测试\"},{\"english\":\"Use the Double Equals to Assert Equality\",\"chinese\":\"用两个等号断言相等\"},{\"english\":\"Use the Triple Equals to Assert Strict Equality\",\"chinese\":\"用三个等号断言严格相等\"},{\"english\":\"Assert Deep Equality with .deepEqual and .notDeepEqual\",\"chinese\":\"用 Assert.deepEqual() 和 Assert.notDeepEqual() 断言深度相等\"},{\"english\":\"Compare the Properties of Two Elements\",\"chinese\":\"比较两个元素的属性\"},{\"english\":\"Test if One Value is Below or At Least as Large as Another\",\"chinese\":\"测试一个值是否小于或等于另一个值\"},{\"english\":\"Test if a Value Falls within a Specific Range\",\"chinese\":\"测试某个值是否在特定范围内\"},{\"english\":\"Test if a Value is an Array\",\"chinese\":\"测试某个值是否为数组\"},{\"english\":\"Test if an Array Contains an Item\",\"chinese\":\"测试数组是否包含某个项目\"},{\"english\":\"Test if a Value is a String\",\"chinese\":\"测试某个值是否为字符串\"},{\"english\":\"Test if a String Contains a Substring\",\"chinese\":\"测试字符串是否包含子字符串\"},{\"english\":\"Use Regular Expressions to Test a String\",\"chinese\":\"使用正则表达式测试字符串\"},{\"english\":\"Test if an Object has a Property\",\"chinese\":\"测试对象是否具有某个属性\"},{\"english\":\"Test if a Value is of a Specific Data Structure Type\",\"chinese\":\"测试某个值是否是特定的数据类型\"},{\"english\":\"Test if an Object is an Instance of a Constructor\",\"chinese\":\"测试对象是否是构造函数的实例\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP\",\"chinese\":\"使用 Chai-HTTP 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on API Endpoints using Chai-HTTP II\",\"chinese\":\"使用 Chai-HTTP II 在 API 端上运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP III - PUT method\",\"chinese\":\"使用 Chai-HTTP III 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests on an API Response using Chai-HTTP IV - PUT method\",\"chinese\":\"使用 Chai-HTTP IV 的 PUT 方法运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser\",\"chinese\":\"使用 无头浏览器 运行功能测试\"},{\"english\":\"Run Functional Tests using a Headless Browser II\",\"chinese\":\"使用 无头浏览器 II 运行功能测试\"},{\"english\":\"Introduction to the Advances Node and Express Challenges\",\"chinese\":\"介绍 Node 和 Express 高级\"},{\"english\":\"Set up a Template Engine\",\"chinese\":\"设置模板引擎\"},{\"english\":\"Use a Template Engine's Powers\",\"chinese\":\"使用模板引擎\"},{\"english\":\"Set up Passport\",\"chinese\":\"设置 Passport\"},{\"english\":\"Serialization of a User Object\",\"chinese\":\"用户对象的序列化\"},{\"english\":\"Implement the Serialization of a Passport User\",\"chinese\":\"实现 Passport 用户的序列化\"},{\"english\":\"Authentication Strategies\",\"chinese\":\"身份验证策略\"},{\"english\":\"How to Use Passport Strategies\",\"chinese\":\"如何使用 Passport 策略\"},{\"english\":\"Create New Middleware\",\"chinese\":\"创建新的中间件\"},{\"english\":\"How to Put a Profile Together\",\"chinese\":\"如何将 Profile 放在一起\"},{\"english\":\"Logging a User Out\",\"chinese\":\"用户退出\"},{\"english\":\"Registration of New Users\",\"chinese\":\"注册新用户\"},{\"english\":\"Hashing Your Passwords\",\"chinese\":\"哈希密码\"},{\"english\":\"Clean Up Your Project with Modules\",\"chinese\":\"使用模块清理项目\"},{\"english\":\"Implementation of Social Authentication\",\"chinese\":\"实现第一种社交登录\"},{\"english\":\"Implementation of Social Authentication II\",\"chinese\":\"实现第二种社交登录\"},{\"english\":\"Implementation of Social Authentication III\",\"chinese\":\"实现第三种社交登录\"},{\"english\":\"Set up the Environment\",\"chinese\":\"设置环境\"},{\"english\":\"Communicate by Emitting\",\"chinese\":\"通过 Emitting 通信\"},{\"english\":\"Handle a Disconnect\",\"chinese\":\"处理连接断开\"},{\"english\":\"Authentication with Socket.IO\",\"chinese\":\"用 Socket.IO 进行身份验证\"},{\"english\":\"Announce New Users\",\"chinese\":\"用户公告\"},{\"english\":\"Send and Display Chat Messages\",\"chinese\":\"发送和显示聊天消息\"},{\"english\":\"Introduction to the Information Security and Quality Assurance Projects\",\"chinese\":\"项目实战\"},{\"english\":\"Metric-Imperial Converter\",\"chinese\":\"公制英制转换器\"},{\"english\":\"Issue Tracker\",\"chinese\":\"问题跟踪器\"},{\"english\":\"Personal Library\",\"chinese\":\"个人图书馆\"},{\"english\":\"Stock Price Checker\",\"chinese\":\"股票价格检查器\"},{\"english\":\"Anonymous Message Board\",\"chinese\":\"匿名留言板\"},{\"english\":\"Introduction to the Coding Interview Algorithms\",\"chinese\":\"算法面试介绍\"},{\"english\":\"Find the Symmetric Difference\",\"chinese\":\"找到对等分差\"},{\"english\":\"Inventory Update\",\"chinese\":\"更新库存\"},{\"english\":\"No Repeats Please\",\"chinese\":\"请不要重复\"},{\"english\":\"Pairwise\",\"chinese\":\"结对\"},{\"english\":\"Implement Bubble Sort\",\"chinese\":\"冒泡排序\"},{\"english\":\"Implement Selection Sort\",\"chinese\":\"选择排序\"},{\"english\":\"Implement Insertion Sort\",\"chinese\":\"插入排序\"},{\"english\":\"Implement Quick Sort\",\"chinese\":\"快速排序\"},{\"english\":\"Implement Merge Sort\",\"chinese\":\"合并排序\"},{\"english\":\"Introduction to the Coding Interview Data Structure Questions\",\"chinese\":\"数据结构面试介绍\"},{\"english\":\"Typed Arrays\",\"chinese\":\"类型数组\"},{\"english\":\"Learn how a Stack Works\",\"chinese\":\"了解栈如何工作\"},{\"english\":\"Create a Stack Class\",\"chinese\":\"创建一个栈\"},{\"english\":\"Create a Queue Class\",\"chinese\":\"创建一个队列\"},{\"english\":\"Create a Priority Queue Class\",\"chinese\":\"创建一个优先队列\"},{\"english\":\"Create a Circular Queue\",\"chinese\":\"创建一个循环队列\"},{\"english\":\"Create a Set Class\",\"chinese\":\"介绍一种新的数据结构：集合（Set）\"},{\"english\":\"Remove from a Set\",\"chinese\":\"从集合中移除\"},{\"english\":\"Size of the Set\",\"chinese\":\"集合的大小\"},{\"english\":\"Perform a Union on Two Sets\",\"chinese\":\"求两个集合的并集\"},{\"english\":\"Perform an Intersection on Two Sets of Data\",\"chinese\":\"求两个集合的交集\"},{\"english\":\"Perform a Difference on Two Sets of Data\",\"chinese\":\"求两个集合的差异\"},{\"english\":\"Perform a Subset Check on Two Sets of Data\",\"chinese\":\"求某个集合是否为另一个集合的子集\"},{\"english\":\"Create and Add to Sets in ES6\",\"chinese\":\"创建集合并添加项目\"},{\"english\":\"Remove items from a set in ES6\",\"chinese\":\"移除集合中的项目\"},{\"english\":\"Use .has and .size on an ES6 Set\",\"chinese\":\"使用集合的 has 和 size 方法\"},{\"english\":\"Use Spread and Notes for ES5 Set() Integration\",\"chinese\":\"扩展运算符既可以用于数组，也可以用于集合。\"},{\"english\":\"Create a Map Data Structure\",\"chinese\":\"介绍一种新的数据结构：映射（Map）\"},{\"english\":\"Create an ES6 JavaScript Map\",\"chinese\":\"创建一个 JavaScript 映射\"},{\"english\":\"Create a Hash Table\",\"chinese\":\"创建一个哈希表\"},{\"english\":\"Work with Nodes in a Linked List\",\"chinese\":\"使用链表中的节点\"},{\"english\":\"Create a Linked List Class\",\"chinese\":\"引入一种新的数据结构：链表\"},{\"english\":\"Remove Elements from a Linked List\",\"chinese\":\"从链表中删除元素\"},{\"english\":\"Search within a Linked List\",\"chinese\":\"在链表中搜索\"},{\"english\":\"Remove Elements from a Linked List by Index\",\"chinese\":\"在链表中按索引删除元素\"},{\"english\":\"Add Elements at a Specific Index in a Linked List\",\"chinese\":\"在链表的指定索引处添加元素\"},{\"english\":\"Create a Doubly Linked List\",\"chinese\":\"创建一个双向链表\"},{\"english\":\"Reverse a Doubly Linked List\",\"chinese\":\"反转双向链表\"},{\"english\":\"Find the Minimum and Maximum Value in a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小值和最大值\"},{\"english\":\"Add a New Element to a Binary Search Tree\",\"chinese\":\"将新元素添加到二叉树中\"},{\"english\":\"Check if an Element is Present in a Binary Search Tree\",\"chinese\":\"检查二叉树中是否存在某个元素\"},{\"english\":\"Find the Minimum and Maximum Height of a Binary Search Tree\",\"chinese\":\"找到二叉树中的最小高度和最大高度\"},{\"english\":\"Use Depth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用深度优先搜索\"},{\"english\":\"Use Breadth First Search in a Binary Search Tree\",\"chinese\":\"在二叉树中使用广度优先搜索\"},{\"english\":\"Delete a Leaf Node in a Binary Search Tree\",\"chinese\":\"删除二叉树中的叶子节点\"},{\"english\":\"Delete a Node with One Child in a Binary Search Tree\",\"chinese\":\"删除二叉树中有一个子节点的节点\"},{\"english\":\"Delete a Node with Two Children in a Binary Search Tree\",\"chinese\":\"删除二叉树中有两个子节点的节点\"},{\"english\":\"Invert a Binary Tree\",\"chinese\":\"反转二叉树\"},{\"english\":\"Create a Trie Search Tree\",\"chinese\":\"创建一个字典树\"},{\"english\":\"Insert an Element into a Max Heap\",\"chinese\":\"插入一个元素到最大堆中\"},{\"english\":\"Remove an Element from a Max Heap\",\"chinese\":\"从最大堆中删除一个元素\"},{\"english\":\"Implement Heap Sort with a Min Heap\",\"chinese\":\"在最小堆中实现堆排序\"},{\"english\":\"Adjacency List\",\"chinese\":\"邻接表\"},{\"english\":\"Adjacency Matrix\",\"chinese\":\"邻接矩阵\"},{\"english\":\"Incidence Matrix\",\"chinese\":\"关联矩阵\"},{\"english\":\"Breadth-First Search\",\"chinese\":\"广度优先搜索\"},{\"english\":\"Depth-First Search\",\"chinese\":\"深度优先搜索\"},{\"english\":\"Introduction to the Coding Interview Take Home Projects\",\"chinese\":\"私人项目介绍\"},{\"english\":\"Show the Local Weather\",\"chinese\":\"展示当地的天气\"},{\"english\":\"Build a Wikipedia Viewer\",\"chinese\":\"维基百科查看器\"},{\"english\":\"Use the Twitch JSON API\",\"chinese\":\"使用 Twitch 的 JSON API\"},{\"english\":\"Build an Image Search Abstraction Layer\",\"chinese\":\"图像搜索抽象层\"},{\"english\":\"Build a Tic Tac Toe Game\",\"chinese\":\"井字游戏\"},{\"english\":\"Build a Simon Game\",\"chinese\":\"西蒙游戏\"},{\"english\":\"Build a Camper Leaderboard\",\"chinese\":\"学员排行榜\"},{\"english\":\"Build a Recipe Box\",\"chinese\":\"食谱盒\"},{\"english\":\"Build the Game of Life\",\"chinese\":\"游戏人生\"},{\"english\":\"Build a Roguelike Dungeon Crawler Game\",\"chinese\":\"地牢围攻\"},{\"english\":\"P2P Video Chat Application\",\"chinese\":\"P2P 视频聊天应用\"},{\"english\":\"Show National Contiguity with a Force Directed Graph\",\"chinese\":\"用力有向图显示国家之间的地理联系\"},{\"english\":\"Map Data Across the Globe\",\"chinese\":\"全球地图数据\"},{\"english\":\"Manage a Book Trading Club\",\"chinese\":\"管理图书交易俱乐部\"},{\"english\":\"Build a Pinterest Clone\",\"chinese\":\"克隆 Pinterest\"},{\"english\":\"Build a Nightlife Coordination App\",\"chinese\":\"构建一个协调夜生活的应用\"},{\"english\":\"Chart the Stock Market\",\"chinese\":\"绘制股票市场图\"},{\"english\":\"Build a Voting App\",\"chinese\":\"构建一个投票应用\"},{\"english\":\"Build a Pong Game\",\"chinese\":\"构建一个乒乓游戏\"},{\"english\":\"Build a Light-Bright App\",\"chinese\":\"构建一个灯光明亮的应用\"},{\"english\":\"Introduction to the Rosetta Code Problems\",\"chinese\":\"介绍罗刹塔代码\"},{\"english\":\"100 doors\",\"chinese\":\"百扇门\"},{\"english\":\"24 game\",\"chinese\":\"24 点游戏\"},{\"english\":\"9 billion names of God the integer\",\"chinese\":\"上帝的九十亿个名字\"},{\"english\":\"ABC Problem\",\"chinese\":\"ABC 难题\"},{\"english\":\"Introduction to the Project Euler Problems\",\"chinese\":\"欧拉计划介绍\"},{\"english\":\"Problem 1: Multiples of 3 and 5\",\"chinese\":\"关卡 1：3 和 5 的倍数\"},{\"english\":\"Problem 2: Even Fibonacci Numbers\",\"chinese\":\"关卡 2：偶斐波那契数\"},{\"english\":\"Problem 3: Largest prime factor\",\"chinese\":\"关卡 3：最大质因数\"},{\"english\":\"Problem 4: Largest palindrome product\",\"chinese\":\"关卡 4：最大回文乘积\"},{\"english\":\"Problem 5: Smallest multiple\",\"chinese\":\"关卡 5：最小倍数\"},{\"english\":\"Problem 6: Sum square difference\",\"chinese\":\"关卡 6：平方的和与和的平方之差\"},{\"english\":\"Problem 7: 10001st prime\",\"chinese\":\"关卡 7：第 10001 个素数\"},{\"english\":\"Problem 8: Largest product in a series\",\"chinese\":\"关卡 8：连续数字最大乘积\"},{\"english\":\"Problem 9: Special Pythagorean triplet\",\"chinese\":\"关卡 9：特殊毕达哥拉斯三元组\"},{\"english\":\"Problem 10: Summation of primes\",\"chinese\":\"关卡 10：素数的和\"},{\"english\":\"Problem 11: Largest product in a grid\",\"chinese\":\"关卡 11：方阵中的最大乘积\"},{\"english\":\"Problem 12: Highly divisible triangular number\",\"chinese\":\"关卡 12：高度可约的三角形数\"},{\"english\":\"Problem 13: Large sum\",\"chinese\":\"关卡 13：大和\"},{\"english\":\"Problem 14: Longest Collatz sequence\",\"chinese\":\"关卡 14：最长考拉兹序列\"},{\"english\":\"Problem 15: Lattice paths\",\"chinese\":\"关卡 15：网格路径\"},{\"english\":\"Problem 16: Power digit sum\",\"chinese\":\"关卡 16：幂的数字和\"},{\"english\":\"Problem 17: Number letter counts\",\"chinese\":\"关卡 17：表达数字的英文字母计数\"},{\"english\":\"Problem 18: Maximum path sum I\",\"chinese\":\"关卡 18：最大路径和 I\"},{\"english\":\"Problem 19: Counting Sundays\",\"chinese\":\"关卡 19：数星期日\"},{\"english\":\"Problem 20: Factorial digit sum\",\"chinese\":\"关卡 20：阶乘数字和\"},{\"english\":\"Problem 21: Amicable numbers\",\"chinese\":\"关卡 21：亲和数\"},{\"english\":\"Problem 22: Names scores\",\"chinese\":\"关卡 22：姓名得分\"},{\"english\":\"Problem 23: Non-abundant sums\",\"chinese\":\"关卡 23：并非盈数之和\"},{\"english\":\"Problem 24: Lexicographic permutations\",\"chinese\":\"关卡 24：字典序排列\"},{\"english\":\"Problem 25: 1000-digit Fibonacci number\",\"chinese\":\"关卡 25：一千位斐波那契数\"},{\"english\":\"Problem 26: Reciprocal cycles\",\"chinese\":\"关卡 26：倒数的循环节\"},{\"english\":\"Problem 27: Quadratic primes\",\"chinese\":\"关卡 27：二次“素数生成”多项式\"},{\"english\":\"Problem 28: Number spiral diagonals\",\"chinese\":\"关卡 28：螺旋数阵对角线\"},{\"english\":\"Problem 29: Distinct powers\",\"chinese\":\"关卡 29：不同的幂\"},{\"english\":\"Problem 30: Digit n powers\",\"chinese\":\"关卡 30：各位数字的五次幂\"},{\"english\":\"Problem 31: Coin sums\",\"chinese\":\"关卡 31：硬币求和\"},{\"english\":\"Problem 32: Pandigital products\",\"chinese\":\"关卡 32：全数字的乘积\"},{\"english\":\"Problem 33: Digit cancelling fractions\",\"chinese\":\"关卡 33：消去数字的分数\"},{\"english\":\"Problem 34: Digit factorials\",\"chinese\":\"关卡 34：各位数字的阶乘\"},{\"english\":\"Problem 35: Circular primes\",\"chinese\":\"关卡 35：圆周素数\"},{\"english\":\"Problem 36: Double-base palindromes\",\"chinese\":\"关卡 36：双进制回文数\"},{\"english\":\"Problem 37: Truncatable primes\",\"chinese\":\"关卡 37：可截素数\"},{\"english\":\"Problem 38: Pandigital multiples\",\"chinese\":\"关卡 38：全数字的倍数\"},{\"english\":\"Problem 39: Integer right triangles\",\"chinese\":\"关卡 39：整数边长直角三角形\"},{\"english\":\"Problem 40: Champernowne's constant\",\"chinese\":\"关卡 40：钱珀瑙恩常数\"},{\"english\":\"Problem 41: Pandigital prime\",\"chinese\":\"关卡 41：全数字的素数\"},{\"english\":\"Problem 42: Coded triangle numbers\",\"chinese\":\"关卡 42：编码三角形数\"},{\"english\":\"Problem 43: Sub-string divisibility\",\"chinese\":\"关卡 43：子串的可整除性\"},{\"english\":\"Problem 44: Pentagon numbers\",\"chinese\":\"关卡 44：五边形数\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Map/components/dict.json\n// module id = 181\n// module chunks = 35783957827783 125088136674209 205441848602771","export default from './Map.js';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Map/index.js","import { createAction, handleActions } from 'redux-actions';\n\nimport { createTypes } from '../../../../utils/stateManagment';\n\nconst ns = 'map';\n\nexport const getNS = () => ns;\n\nconst initialState = {\n  expandedState: {\n    superBlock: {\n      'Responsive Web Design': true\n    },\n    block: {\n      'basic-html-and-html5': true\n    }\n  }\n};\n\nconst types = createTypes(['toggleSuperBlock', 'toggleBlock'], ns);\n\nexport const toggleBlock = createAction(types.toggleBlock);\nexport const toggleSuperBlock = createAction(types.toggleSuperBlock);\n\nexport const makeExpandedSuperBlockSelector = superBlock => state =>\n  !!state[ns].expandedState.superBlock[superBlock];\nexport const makeExpandedBlockSelector = block => state =>\n  !!state[ns].expandedState.block[block];\n\nexport const reducer = handleActions(\n  {\n    [types.toggleBlock]: (state, { payload }) => ({\n      ...state,\n      expandedState: {\n        ...state.expandedState,\n        block: {\n          ...state.expandedState.block,\n          [payload]: !state.expandedState.block[payload]\n        }\n      }\n    }),\n    [types.toggleSuperBlock]: (state, { payload }) => ({\n      ...state,\n      expandedState: {\n        ...state.expandedState,\n        superBlock: {\n          ...state.expandedState.superBlock,\n          [payload]: !state.expandedState.superBlock[payload]\n        }\n      }\n    })\n  },\n  initialState\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Map/redux/index.js","import React from 'react';\n\nfunction Caret() {\n  return (\n    <svg viewBox='0 0 100 100' width='25px'>\n      <polygon\n        points='-6.04047,17.1511 81.8903,58.1985 -3.90024,104.196'\n        style={{ stroke: '#aaa', fill: '#aaa', strokeWidth: '1px' }}\n        transform={\n          'matrix(0.999729, 0.023281, -0.023281, 0.999729, 7.39321, -10.0425)'\n        }\n      />\n    </svg>\n  );\n}\n\nCaret.displayName = 'Caret';\n\nexport default Caret;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/icons/Caret.js","/* global graphql */\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\n\nimport {\n  ChallengeNode,\n  AllChallengeNode,\n  AllMarkdownRemark\n} from '../redux/propTypes';\nimport Spacer from '../components/util/Spacer';\nimport Map from '../components/Map';\n\nimport './index.css';\n\nconst mapStateToProps = () => ({});\n\nconst propTypes = {\n  data: PropTypes.shape({\n    challengeNode: ChallengeNode,\n    allChallengeNode: AllChallengeNode,\n    allMarkdownRemark: AllMarkdownRemark\n  })\n};\n\nconst IndexPage = ({\n  data: {\n    challengeNode: { fields: { slug } },\n    allChallengeNode: { edges },\n    allMarkdownRemark: { edges: mdEdges }\n  }\n}) => (\n  <div className='index-page-wrapper'>\n    <Helmet title='freeCodecamp 中文社区' />\n    <Spacer />\n    <Spacer />\n    <h2>欢迎体验 freeCodeCamp 2018 年新版课程</h2>\n    <p>我们准备了成千上万个编程关卡来帮助提升你的编程技能。</p>\n    <p>每当独立完成 5 个终极项目，你就可以获得一个免费证书。</p>\n    <p>是的，关卡、项目、证书、服务器 这些都是 100% 免费的。</p>\n    <p>这一切都要感谢{' '}\n      <a href='Https://github.com/freeCodeCamp' target='_blank'>\n        freeCodeCamp\n      </a>{' '}\n      和 <a href='Https://netlify.com' target='_blank'>\n        netlify\n      </a>。\n    </p>\n    <p>\n      如果你是编程新手，我们推荐你{' '}\n      <Link to={slug}>从头开始</Link>。\n    </p>\n    <p>\n      如果你是编程老手，我们推荐你 自由跳跃。\n    </p>\n    <Spacer />\n    <Map\n      introNodes={mdEdges.map(({ node }) => node)}\n      nodes={edges\n        .map(({ node }) => node)\n        .filter(({ isPrivate }) => !isPrivate)}\n    />\n  </div>\n);\n\nIndexPage.displayName = 'IndexPage';\nIndexPage.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(IndexPage);\n\nexport const query = graphql`\n  query FirstChallenge {\n    challengeNode(order: { eq: 0 }, suborder: { eq: 1 }) {\n      fields {\n        slug\n      }\n    }\n    allChallengeNode(\n      filter: { isPrivate: { eq: false } }\n      sort: { fields: [superOrder, order, suborder] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            blockName\n          }\n          id\n          block\n          title\n          isRequired\n          isPrivate\n          superBlock\n          dashedName\n        }\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { block: { ne: null } } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            block\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.js","import React, { Fragment } from 'react';\n\nconst propTypes = {};\n\nfunction GreenNotCompleted(props) {\n  return (\n    <Fragment>\n      <span className='sr-only'>Not Passed</span>\n      <svg\n        height='50'\n        viewBox='0 0 200 200'\n        width='50'\n        xmlns='http://www.w3.org/2000/svg'\n        {...props}\n        >\n        <g>\n          <title>Not Passed</title>\n          <circle\n            cx='100'\n            cy='99'\n            fill='#FFFFFF'\n            r='95'\n            stroke='#006400'\n            strokeDasharray='null'\n            strokeLinecap='null'\n            strokeLinejoin='null'\n            strokeWidth='5'\n          />\n        </g>\n      </svg>\n    </Fragment>\n  );\n}\n\nGreenNotCompleted.displayName = 'GreenNotCompleted';\nGreenNotCompleted.propTypes = propTypes;\n\nexport default GreenNotCompleted;\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/Challenges/components/icons/GreenNotCompleted.js"],"sourceRoot":""}