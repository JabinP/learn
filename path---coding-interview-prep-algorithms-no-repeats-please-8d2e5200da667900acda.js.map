{"version":3,"sources":["webpack:///path---coding-interview-prep-algorithms-no-repeats-please-8d2e5200da667900acda.js","webpack:///./.cache/json/coding-interview-prep-algorithms-no-repeats-please.json"],"names":["webpackJsonp","2810","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,oBAAAC,aAAA,sZAAAC,cAAA,EAAAC,QAA6dC,KAAA,sDAAAC,UAAA,aAAAC,QAAgGC,KAAA,yCAAAC,WAAA,kFAAiJD,KAAA,uCAAAC,WAAA,sFAAmJD,KAAA,uCAAAC,WAAA,sFAAmJD,KAAA,wCAAAC,WAAA,wFAAsJD,KAAA,8CAAAC,WAAA,qGAAyKD,KAAA,8CAAAC,WAAA,oGAAwKD,KAAA,4CAAAC,WAAA,gGAAkKD,KAAA,qCAAAC,WAAA,kFAA6ID,KAAA,wCAAAC,WAAA,wFAAsJD,KAAA,0CAAAC,WAAA,6FAA4JC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,mEAAsHC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6CAAAC,GAAA,4BAA8IrB,KAAA","file":"path---coding-interview-prep-algorithms-no-repeats-please-8d2e5200da667900acda.js","sourcesContent":["webpackJsonp([238329515080191],{\n\n/***/ 2810:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"No Repeats Please\",\"description\":[\"把一个字符串中的所有的字符重新排列，然后生成一个新的字符串，返回的新字符串中没有连续重复的字符。连续重复是以单个字符为判断标准。\",\"例如：<code>aab</code>应该返回 2， 因为它总共有 6 种排列方式： <code>aab</code>， <code>aab</code>， <code>aba</code>， <code>aba</code>， <code>baa</code>， <code>baa</code>，但是其中只有 2 个没有连续重复的字符（字符 a 是本例中的重复字符）：<code>aba</code>，<code>aba</code>\",\"如果你遇到了困难，请点击 <a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'> 帮助 </a>。你可以找人“结对编程“，但不要因此放弃思考。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/algorithms/no-repeats-please\",\"blockName\":\"Algorithms\",\"tests\":[{\"text\":\"<code>permAlone(\\\"aab\\\")</code>应该返回一个数字。\",\"testString\":\"assert.isNumber(permAlone('aab'),'<code>permAlone(\\\"aab\\\")</code>应该返回一个数字。');\"},{\"text\":\"<code>permAlone(\\\"aab\\\")</code>应该返回 2。\",\"testString\":\"assert.strictEqual(permAlone('aab'), 2,'<code>permAlone(\\\"aab\\\")</code>应该返回 2。');\"},{\"text\":\"<code>permAlone(\\\"aaa\\\")</code>应该返回 0。\",\"testString\":\"assert.strictEqual(permAlone('aaa'), 0,'<code>permAlone(\\\"aaa\\\")</code>应该返回 0。');\"},{\"text\":\"<code>permAlone(\\\"aabb\\\")</code>应该返回 8。\",\"testString\":\"assert.strictEqual(permAlone('aabb'), 8,'<code>permAlone(\\\"aabb\\\")</code>应该返回 8。');\"},{\"text\":\"<code>permAlone(\\\"abcdefa\\\")</code>应该返回 3600。\",\"testString\":\"assert.strictEqual(permAlone('abcdefa'), 3600,'<code>permAlone(\\\"abcdefa\\\")</code> 应该返回 3600。');\"},{\"text\":\"<code>permAlone(\\\"abfdefa\\\")</code>应该返回 2640。\",\"testString\":\"assert.strictEqual(permAlone('abfdefa'), 2640,'<code>permAlone(\\\"abfdefa\\\")</code>应该返回 2640。');\"},{\"text\":\"<code>permAlone(\\\"zzzzzzzz\\\")</code>应该返回 0。\",\"testString\":\"assert.strictEqual(permAlone('zzzzzzzz'), 0,'<code>permAlone(\\\"zzzzzzzz\\\")</code>应该返回 0。');\"},{\"text\":\"<code>permAlone(\\\"a\\\")</code>应该返回 1。\",\"testString\":\"assert.strictEqual(permAlone('a'), 1,'<code>permAlone(\\\"a\\\")</code>应该返回 1。');\"},{\"text\":\"<code>permAlone(\\\"aaab\\\")</code>应该返回 0。\",\"testString\":\"assert.strictEqual(permAlone('aaab'), 0,'<code>permAlone(\\\"aaab\\\")</code>应该返回 0。');\"},{\"text\":\"<code>permAlone(\\\"aaabb\\\")</code>应该返回 12。\",\"testString\":\"assert.strictEqual(permAlone('aaabb'), 12,'<code>permAlone(\\\"aaabb\\\")</code>应该返回 12。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function permAlone(str) {\\n  return str;\\n}\\n\\npermAlone('aab');\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/algorithms/pairwise\",\"id\":\"a7bf700cd123b9a54eef01d5\"},\"slug\":\"/coding-interview-prep/algorithms/no-repeats-please\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-algorithms-no-repeats-please-8d2e5200da667900acda.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"No Repeats Please\",\"description\":[\"把一个字符串中的所有的字符重新排列，然后生成一个新的字符串，返回的新字符串中没有连续重复的字符。连续重复是以单个字符为判断标准。\",\"例如：<code>aab</code>应该返回 2， 因为它总共有 6 种排列方式： <code>aab</code>， <code>aab</code>， <code>aba</code>， <code>aba</code>， <code>baa</code>， <code>baa</code>，但是其中只有 2 个没有连续重复的字符（字符 a 是本例中的重复字符）：<code>aba</code>，<code>aba</code>\",\"如果你遇到了困难，请点击 <a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'> 帮助 </a>。你可以找人“结对编程“，但不要因此放弃思考。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/algorithms/no-repeats-please\",\"blockName\":\"Algorithms\",\"tests\":[{\"text\":\"<code>permAlone(\\\"aab\\\")</code>应该返回一个数字。\",\"testString\":\"assert.isNumber(permAlone('aab'),'<code>permAlone(\\\"aab\\\")</code>应该返回一个数字。');\"},{\"text\":\"<code>permAlone(\\\"aab\\\")</code>应该返回 2。\",\"testString\":\"assert.strictEqual(permAlone('aab'), 2,'<code>permAlone(\\\"aab\\\")</code>应该返回 2。');\"},{\"text\":\"<code>permAlone(\\\"aaa\\\")</code>应该返回 0。\",\"testString\":\"assert.strictEqual(permAlone('aaa'), 0,'<code>permAlone(\\\"aaa\\\")</code>应该返回 0。');\"},{\"text\":\"<code>permAlone(\\\"aabb\\\")</code>应该返回 8。\",\"testString\":\"assert.strictEqual(permAlone('aabb'), 8,'<code>permAlone(\\\"aabb\\\")</code>应该返回 8。');\"},{\"text\":\"<code>permAlone(\\\"abcdefa\\\")</code>应该返回 3600。\",\"testString\":\"assert.strictEqual(permAlone('abcdefa'), 3600,'<code>permAlone(\\\"abcdefa\\\")</code> 应该返回 3600。');\"},{\"text\":\"<code>permAlone(\\\"abfdefa\\\")</code>应该返回 2640。\",\"testString\":\"assert.strictEqual(permAlone('abfdefa'), 2640,'<code>permAlone(\\\"abfdefa\\\")</code>应该返回 2640。');\"},{\"text\":\"<code>permAlone(\\\"zzzzzzzz\\\")</code>应该返回 0。\",\"testString\":\"assert.strictEqual(permAlone('zzzzzzzz'), 0,'<code>permAlone(\\\"zzzzzzzz\\\")</code>应该返回 0。');\"},{\"text\":\"<code>permAlone(\\\"a\\\")</code>应该返回 1。\",\"testString\":\"assert.strictEqual(permAlone('a'), 1,'<code>permAlone(\\\"a\\\")</code>应该返回 1。');\"},{\"text\":\"<code>permAlone(\\\"aaab\\\")</code>应该返回 0。\",\"testString\":\"assert.strictEqual(permAlone('aaab'), 0,'<code>permAlone(\\\"aaab\\\")</code>应该返回 0。');\"},{\"text\":\"<code>permAlone(\\\"aaabb\\\")</code>应该返回 12。\",\"testString\":\"assert.strictEqual(permAlone('aaabb'), 12,'<code>permAlone(\\\"aaabb\\\")</code>应该返回 12。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function permAlone(str) {\\n  return str;\\n}\\n\\npermAlone('aab');\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/algorithms/pairwise\",\"id\":\"a7bf700cd123b9a54eef01d5\"},\"slug\":\"/coding-interview-prep/algorithms/no-repeats-please\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-algorithms-no-repeats-please.json\n// module id = 2810\n// module chunks = 238329515080191"],"sourceRoot":""}