{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-odd-fibonacci-numbers-4e2bb2cf824004fdc678.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-odd-fibonacci-numbers.json"],"names":["webpackJsonp","3943","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,gCAAAC,aAAA,mVAAAC,cAAA,EAAAC,QAAsaC,KAAA,4GAAAC,UAAA,mCAAAC,QAA4KC,KAAA,mCAAAC,WAAA,kFAAyID,KAAA,uCAAAC,WAAA,4EAAuID,KAAA,6CAAAC,WAAA,wFAAyJD,KAAA,iCAAAC,WAAA,gEAAqHD,KAAA,yCAAAC,WAAA,gFAA6ID,KAAA,0CAAAC,WAAA,mFAAgJC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,2DAA8GC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,6FAAAC,GAAA,4BAA8LrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-odd-fibonacci-numbers-4e2bb2cf824004fdc678.js","sourcesContent":["webpackJsonp([154627266638224],{\n\n/***/ 3943:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Sum All Odd Fibonacci Numbers\",\"description\":[\"在这道题目中，我们需要写一个函数，参数为一个正整数<code>num</code>。它的作用是计算斐波那契数列中，小于或等于<code>num</code>的奇数之和。\",\"斐波那契数列中，第一和第二个数字都是 1，后面的每个数字由之前两数相加得出。斐波那契数列的前六个数字分别为：1、1、2、3、5、8。\",\"比如，<code>sumFibs(10)</code>应该返回<code>10</code>。因为斐波那契数列中，比<code>10</code>小的数字只有 1、1、3、5。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>sumFibs(1)</code>应该返回一个数字。\",\"testString\":\"assert(typeof sumFibs(1) === \\\"number\\\", '<code>sumFibs(1)</code>应该返回一个数字。');\"},{\"text\":\"<code>sumFibs(1000)</code>应该返回 1785。\",\"testString\":\"assert(sumFibs(1000) === 1785, '<code>sumFibs(1000)</code>应该返回 1785。');\"},{\"text\":\"<code>sumFibs(4000000)</code>应该返回 4613732。\",\"testString\":\"assert(sumFibs(4000000) === 4613732, '<code>sumFibs(4000000)</code>应该返回 4613732。');\"},{\"text\":\"<code>sumFibs(4)</code>应该返回 5。\",\"testString\":\"assert(sumFibs(4) === 5, '<code>sumFibs(4)</code>应该返回 5。');\"},{\"text\":\"<code>sumFibs(75024)</code>应该返回 60696。\",\"testString\":\"assert(sumFibs(75024) === 60696, '<code>sumFibs(75024)</code>应该返回 60696。');\"},{\"text\":\"<code>sumFibs(75025)</code>应该返回 135721。\",\"testString\":\"assert(sumFibs(75025) === 135721, '<code>sumFibs(75025)</code>应该返回 135721。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sumFibs(num) {\\n  return num;\\n}\\n\\nsumFibs(4);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-primes\",\"id\":\"a5229172f011153519423690\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-odd-fibonacci-numbers-4e2bb2cf824004fdc678.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Sum All Odd Fibonacci Numbers\",\"description\":[\"在这道题目中，我们需要写一个函数，参数为一个正整数<code>num</code>。它的作用是计算斐波那契数列中，小于或等于<code>num</code>的奇数之和。\",\"斐波那契数列中，第一和第二个数字都是 1，后面的每个数字由之前两数相加得出。斐波那契数列的前六个数字分别为：1、1、2、3、5、8。\",\"比如，<code>sumFibs(10)</code>应该返回<code>10</code>。因为斐波那契数列中，比<code>10</code>小的数字只有 1、1、3、5。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>sumFibs(1)</code>应该返回一个数字。\",\"testString\":\"assert(typeof sumFibs(1) === \\\"number\\\", '<code>sumFibs(1)</code>应该返回一个数字。');\"},{\"text\":\"<code>sumFibs(1000)</code>应该返回 1785。\",\"testString\":\"assert(sumFibs(1000) === 1785, '<code>sumFibs(1000)</code>应该返回 1785。');\"},{\"text\":\"<code>sumFibs(4000000)</code>应该返回 4613732。\",\"testString\":\"assert(sumFibs(4000000) === 4613732, '<code>sumFibs(4000000)</code>应该返回 4613732。');\"},{\"text\":\"<code>sumFibs(4)</code>应该返回 5。\",\"testString\":\"assert(sumFibs(4) === 5, '<code>sumFibs(4)</code>应该返回 5。');\"},{\"text\":\"<code>sumFibs(75024)</code>应该返回 60696。\",\"testString\":\"assert(sumFibs(75024) === 60696, '<code>sumFibs(75024)</code>应该返回 60696。');\"},{\"text\":\"<code>sumFibs(75025)</code>应该返回 135721。\",\"testString\":\"assert(sumFibs(75025) === 135721, '<code>sumFibs(75025)</code>应该返回 135721。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function sumFibs(num) {\\n  return num;\\n}\\n\\nsumFibs(4);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-primes\",\"id\":\"a5229172f011153519423690\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/sum-all-odd-fibonacci-numbers\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-sum-all-odd-fibonacci-numbers.json\n// module id = 3943\n// module chunks = 154627266638224"],"sourceRoot":""}