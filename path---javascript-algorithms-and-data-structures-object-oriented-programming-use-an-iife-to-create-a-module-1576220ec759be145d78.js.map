{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-object-oriented-programming-use-an-iife-to-create-a-module-1576220ec759be145d78.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-object-oriented-programming-use-an-iife-to-create-a-module.json"],"names":["webpackJsonp","3973","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,iCAAAC,aAAA,4aAAyd,6sBAA6rB,wQAA4R,mKAAAC,cAAA,EAAAC,QAA8MC,KAAA,wGAAAC,UAAA,8BAAAC,QAAmKC,KAAA,sCAAAC,WAAA,oFAA8ID,KAAA,8CAAAC,WAAA,0GAA4KD,KAAA,4CAAAC,WAAA,uGAAsKC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,mNAAwQC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,oEAAAC,SAAA,KAAAd,YAAAe,kBAAA,uGAAAC,GAAA,4BAAyQrB,KAAA","file":"path---javascript-algorithms-and-data-structures-object-oriented-programming-use-an-iife-to-create-a-module-1576220ec759be145d78.js","sourcesContent":["webpackJsonp([182717961153362],{\n\n/***/ 3973:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use an IIFE to Create a Module\",\"description\":[\"一个<code>自执行函数表达式</code>（<code>IIFE</code>）通常用于将相关功能分组到单个对象或者是<code>模块</code>中。例如，先前的挑战中定义了一个混合类：\",\"<blockquote>function glideMixin(obj) {<br>&nbsp;&nbsp;obj.glide = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Gliding on the water\\\");<br>&nbsp;&nbsp;};<br>}<br>function flyMixin(obj) {<br>&nbsp;&nbsp;obj.fly = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Flying, wooosh!\\\");<br>&nbsp;&nbsp;};<br>}</blockquote>\",\"我们可以将这些<code>mixins</code>分成以下模块：\",\"<blockquote>let motionModule = (function () {<br>&nbsp;&nbsp;return {<br>&nbsp;&nbsp;&nbsp;&nbsp;glideMixin: function (obj) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.glide = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Gliding on the water\\\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;flyMixin: function(obj) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.fly = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Flying, wooosh!\\\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>}) (); // 末尾的两个括号导致函数被立即调用</blockquote>\",\"注意：一个<code>自执行函数表达式</code>（<code>IIFE</code>）返回了一个<code>motionModule</code>对象。返回的这个对象包含了作为对象属性的所有<code>mixin</code>行为。\",\"<code>模块</code>模式的优点是，所有的运动行为都可以打包成一个对象，然后由代码的其他部分使用。下面是一个使用它的例子：\",\"<blockquote>motionModule.glideMixin(duck);<br>duck.glide();</blockquote>\",\"<hr>\",\"创建一个名为<code>funModule</code>的<code>模块</code>，将这两个<code>mixins</code>：<code>isCuteMixin</code>和<code>singMixin</code>包装起来。<code>funModule</code>应该返回一个对象。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/object-oriented-programming/use-an-iife-to-create-a-module\",\"blockName\":\"Object Oriented Programming\",\"tests\":[{\"text\":\"<code>funModule</code>应该被定义并返回一个对象。\",\"testString\":\"assert(typeof funModule === \\\"object\\\", '<code>funModule</code>应该被定义并返回一个对象。');\"},{\"text\":\"<code>funModule.isCuteMixin</code>应该访问一个函数。\",\"testString\":\"assert(typeof funModule.isCuteMixin === \\\"function\\\", '<code>funModule.isCuteMixin</code>应该访问一个函数。');\"},{\"text\":\"<code>funModule.singMixin</code>应该访问一个函数。\",\"testString\":\"assert(typeof funModule.singMixin === \\\"function\\\", '<code>funModule.singMixin</code>应该访问一个函数。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let isCuteMixin = function(obj) {\\n  obj.isCute = function() {\\n    return true;\\n  };\\n};\\nlet singMixin = function(obj) {\\n  obj.sing = function() {\\n    console.log(\\\"Singing to an awesome tune\\\");\\n  };\\n};\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"/javascript-algorithms-and-data-structures/functional-programming\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/learn-about-functional-programming\",\"id\":\"587d7db2367417b2b2512b8c\"},\"slug\":\"/javascript-algorithms-and-data-structures/object-oriented-programming/use-an-iife-to-create-a-module\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-object-oriented-programming-use-an-iife-to-create-a-module-1576220ec759be145d78.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Use an IIFE to Create a Module\",\"description\":[\"一个<code>自执行函数表达式</code>（<code>IIFE</code>）通常用于将相关功能分组到单个对象或者是<code>模块</code>中。例如，先前的挑战中定义了一个混合类：\",\"<blockquote>function glideMixin(obj) {<br>&nbsp;&nbsp;obj.glide = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Gliding on the water\\\");<br>&nbsp;&nbsp;};<br>}<br>function flyMixin(obj) {<br>&nbsp;&nbsp;obj.fly = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Flying, wooosh!\\\");<br>&nbsp;&nbsp;};<br>}</blockquote>\",\"我们可以将这些<code>mixins</code>分成以下模块：\",\"<blockquote>let motionModule = (function () {<br>&nbsp;&nbsp;return {<br>&nbsp;&nbsp;&nbsp;&nbsp;glideMixin: function (obj) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.glide = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Gliding on the water\\\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;&nbsp;},<br>&nbsp;&nbsp;&nbsp;&nbsp;flyMixin: function(obj) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.fly = function() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(\\\"Flying, wooosh!\\\");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;}<br>}) (); // 末尾的两个括号导致函数被立即调用</blockquote>\",\"注意：一个<code>自执行函数表达式</code>（<code>IIFE</code>）返回了一个<code>motionModule</code>对象。返回的这个对象包含了作为对象属性的所有<code>mixin</code>行为。\",\"<code>模块</code>模式的优点是，所有的运动行为都可以打包成一个对象，然后由代码的其他部分使用。下面是一个使用它的例子：\",\"<blockquote>motionModule.glideMixin(duck);<br>duck.glide();</blockquote>\",\"<hr>\",\"创建一个名为<code>funModule</code>的<code>模块</code>，将这两个<code>mixins</code>：<code>isCuteMixin</code>和<code>singMixin</code>包装起来。<code>funModule</code>应该返回一个对象。\"],\"challengeType\":1,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/object-oriented-programming/use-an-iife-to-create-a-module\",\"blockName\":\"Object Oriented Programming\",\"tests\":[{\"text\":\"<code>funModule</code>应该被定义并返回一个对象。\",\"testString\":\"assert(typeof funModule === \\\"object\\\", '<code>funModule</code>应该被定义并返回一个对象。');\"},{\"text\":\"<code>funModule.isCuteMixin</code>应该访问一个函数。\",\"testString\":\"assert(typeof funModule.isCuteMixin === \\\"function\\\", '<code>funModule.isCuteMixin</code>应该访问一个函数。');\"},{\"text\":\"<code>funModule.singMixin</code>应该访问一个函数。\",\"testString\":\"assert(typeof funModule.singMixin === \\\"function\\\", '<code>funModule.singMixin</code>应该访问一个函数。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"let isCuteMixin = function(obj) {\\n  obj.isCute = function() {\\n    return true;\\n  };\\n};\\nlet singMixin = function(obj) {\\n  obj.sing = function() {\\n    console.log(\\\"Singing to an awesome tune\\\");\\n  };\\n};\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"/javascript-algorithms-and-data-structures/functional-programming\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/functional-programming/learn-about-functional-programming\",\"id\":\"587d7db2367417b2b2512b8c\"},\"slug\":\"/javascript-algorithms-and-data-structures/object-oriented-programming/use-an-iife-to-create-a-module\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-object-oriented-programming-use-an-iife-to-create-a-module.json\n// module id = 3973\n// module chunks = 182717961153362"],"sourceRoot":""}