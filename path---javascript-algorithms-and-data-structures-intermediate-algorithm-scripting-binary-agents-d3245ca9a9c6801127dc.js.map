{"version":3,"sources":["webpack:///path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-binary-agents-d3245ca9a9c6801127dc.js","webpack:///./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-binary-agents.json"],"names":["webpackJsonp","3926","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,gBAAAC,aAAA,sJAAAC,cAAA,EAAAC,QAAyNC,KAAA,4FAAAC,UAAA,mCAAAC,QAA4JC,KAAA,4PAAkPC,WAAA,8fAAiiBD,KAAA,8OAAAC,WAAA,seAA6uBC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,gQAAqTC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,iGAAAC,GAAA,4BAAkMrB,KAAA","file":"path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-binary-agents-d3245ca9a9c6801127dc.js","sourcesContent":["webpackJsonp([128974163051516],{\n\n/***/ 3926:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Binary Agents\",\"description\":[\"在这道题目中，我们需要写一个把二进制输入转换成英文句子的函数。\",\"传入函数的二进制字符串会用空格作为分隔符。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/binary-agents\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>binaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\")</code>应该返回 \\\"Aren&#39;t bonfires fun!?\\\"。\",\"testString\":\"assert.deepEqual(binaryAgent('01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111'), \\\"Aren't bonfires fun!?\\\", '<code>binaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\")</code>应该返回 \\\"Aren&#39;t bonfires fun!?\\\"。');\"},{\"text\":\"<code>binaryAgent(\\\"01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001\\\")</code>应该返回 \\\"I love FreeCodeCamp!\\\"。\",\"testString\":\"assert.deepEqual(binaryAgent('01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001'), \\\"I love FreeCodeCamp!\\\", '<code>binaryAgent(\\\"01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001\\\")</code>应该返回 \\\"I love FreeCodeCamp!\\\"。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function binaryAgent(str) {\\n  return str;\\n}\\n\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/everything-be-true\",\"id\":\"a8d97bd4c764e91f9d2bda01\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/binary-agents\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-binary-agents-d3245ca9a9c6801127dc.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Binary Agents\",\"description\":[\"在这道题目中，我们需要写一个把二进制输入转换成英文句子的函数。\",\"传入函数的二进制字符串会用空格作为分隔符。\",\"如果你遇到了问题，请点击<a href='https://forum.freecodecamp.one/t/topic/157' target='_blank'>帮助</a>。\"],\"challengeType\":5,\"fields\":{\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/binary-agents\",\"blockName\":\"Intermediate Algorithm Scripting\",\"tests\":[{\"text\":\"<code>binaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\")</code>应该返回 \\\"Aren&#39;t bonfires fun!?\\\"。\",\"testString\":\"assert.deepEqual(binaryAgent('01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111'), \\\"Aren't bonfires fun!?\\\", '<code>binaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\")</code>应该返回 \\\"Aren&#39;t bonfires fun!?\\\"。');\"},{\"text\":\"<code>binaryAgent(\\\"01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001\\\")</code>应该返回 \\\"I love FreeCodeCamp!\\\"。\",\"testString\":\"assert.deepEqual(binaryAgent('01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001'), \\\"I love FreeCodeCamp!\\\", '<code>binaryAgent(\\\"01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001\\\")</code>应该返回 \\\"I love FreeCodeCamp!\\\"。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function binaryAgent(str) {\\n  return str;\\n}\\n\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/everything-be-true\",\"id\":\"a8d97bd4c764e91f9d2bda01\"},\"slug\":\"/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/binary-agents\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-algorithms-and-data-structures-intermediate-algorithm-scripting-binary-agents.json\n// module id = 3926\n// module chunks = 128974163051516"],"sourceRoot":""}