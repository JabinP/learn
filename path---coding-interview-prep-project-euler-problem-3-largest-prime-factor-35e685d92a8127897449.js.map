{"version":3,"sources":["webpack:///path---coding-interview-prep-project-euler-problem-3-largest-prime-factor-35e685d92a8127897449.js","webpack:///./.cache/json/coding-interview-prep-project-euler-problem-3-largest-prime-factor.json"],"names":["webpackJsonp","3083","module","exports","data","challengeNode","title","description","challengeType","fields","slug","blockName","tests","text","testString","required","files","indexhtml","indexjs","key","ext","name","contents","head","tail","indexjsx","pathContext","challengeMeta","introPath","template","nextChallengePath","id"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,eAAiBC,MAAA,kCAAAC,aAAA,wDAAAC,cAAA,EAAAC,QAA6IC,KAAA,sEAAAC,UAAA,gBAAAC,QAAmHC,KAAA,4CAAAC,WAAA,+FAA+JD,KAAA,4CAAAC,WAAA,+FAA+JD,KAAA,4CAAAC,WAAA,+FAA+JD,KAAA,4CAAAC,WAAA,+FAA+JD,KAAA,iDAAAC,WAAA,yGAA8KD,KAAA,0DAAAC,WAAA,4HAAyMC,YAAAC,OAAwBC,UAAA,KAAAC,SAA4BC,IAAA,UAAAC,IAAA,KAAAC,KAAA,QAAAC,SAAA,qGAAwJC,KAAA,GAAAC,KAAA,IAAsBC,SAAA,QAAmBC,aAAgBC,eAAiBC,UAAA,GAAAC,SAAA,KAAAd,YAAAe,kBAAA,4EAAAC,GAAA,4BAA6KrB,KAAA","file":"path---coding-interview-prep-project-euler-problem-3-largest-prime-factor-35e685d92a8127897449.js","sourcesContent":["webpackJsonp([69543688385680],{\n\n/***/ 3083:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 3: Largest prime factor\",\"description\":[\"13195 的所有质因数为 5、7、13 和 29。\",\"600851475143 最大的质因数是多少？\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-3-largest-prime-factor\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>largestPrimeFactor(2)</code>应该返回 2。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(2), 2, '<code>largestPrimeFactor(2)</code>应该返回 2。');\"},{\"text\":\"<code>largestPrimeFactor(3)</code>应该返回 3。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(3), 3, '<code>largestPrimeFactor(3)</code>应该返回 3。');\"},{\"text\":\"<code>largestPrimeFactor(5)</code>应该返回 5。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(5), 5, '<code>largestPrimeFactor(5)</code>应该返回 5。');\"},{\"text\":\"<code>largestPrimeFactor(7)</code>应该返回 7。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(7), 7, '<code>largestPrimeFactor(7)</code>应该返回 7。');\"},{\"text\":\"<code>largestPrimeFactor(13195)</code>应该返回 29。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(13195), 29, '<code>largestPrimeFactor(13195)</code>应该返回 29。');\"},{\"text\":\"<code>largestPrimeFactor(600851475143)</code>应该返回 6857。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(600851475143), 6857, '<code>largestPrimeFactor(600851475143)</code>应该返回 6857。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function largestPrimeFactor(number) {\\n  // 祝你好运！\\n  return true;\\n}\\n\\nlargestPrimeFactor(13195);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-4-largest-palindrome-product\",\"id\":\"5900f36f1000cf542c50fe82\"},\"slug\":\"/coding-interview-prep/project-euler/problem-3-largest-prime-factor\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---coding-interview-prep-project-euler-problem-3-largest-prime-factor-35e685d92a8127897449.js","module.exports = {\"data\":{\"challengeNode\":{\"title\":\"Problem 3: Largest prime factor\",\"description\":[\"13195 的所有质因数为 5、7、13 和 29。\",\"600851475143 最大的质因数是多少？\"],\"challengeType\":5,\"fields\":{\"slug\":\"/coding-interview-prep/project-euler/problem-3-largest-prime-factor\",\"blockName\":\"Project Euler\",\"tests\":[{\"text\":\"<code>largestPrimeFactor(2)</code>应该返回 2。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(2), 2, '<code>largestPrimeFactor(2)</code>应该返回 2。');\"},{\"text\":\"<code>largestPrimeFactor(3)</code>应该返回 3。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(3), 3, '<code>largestPrimeFactor(3)</code>应该返回 3。');\"},{\"text\":\"<code>largestPrimeFactor(5)</code>应该返回 5。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(5), 5, '<code>largestPrimeFactor(5)</code>应该返回 5。');\"},{\"text\":\"<code>largestPrimeFactor(7)</code>应该返回 7。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(7), 7, '<code>largestPrimeFactor(7)</code>应该返回 7。');\"},{\"text\":\"<code>largestPrimeFactor(13195)</code>应该返回 29。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(13195), 29, '<code>largestPrimeFactor(13195)</code>应该返回 29。');\"},{\"text\":\"<code>largestPrimeFactor(600851475143)</code>应该返回 6857。\",\"testString\":\"assert.strictEqual(largestPrimeFactor(600851475143), 6857, '<code>largestPrimeFactor(600851475143)</code>应该返回 6857。');\"}]},\"required\":[],\"files\":{\"indexhtml\":null,\"indexjs\":{\"key\":\"indexjs\",\"ext\":\"js\",\"name\":\"index\",\"contents\":\"function largestPrimeFactor(number) {\\n  // 祝你好运！\\n  return true;\\n}\\n\\nlargestPrimeFactor(13195);\",\"head\":\"\",\"tail\":\"\"},\"indexjsx\":null}}},\"pathContext\":{\"challengeMeta\":{\"introPath\":\"\",\"template\":null,\"required\":[],\"nextChallengePath\":\"/coding-interview-prep/project-euler/problem-4-largest-palindrome-product\",\"id\":\"5900f36f1000cf542c50fe82\"},\"slug\":\"/coding-interview-prep/project-euler/problem-3-largest-prime-factor\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/coding-interview-prep-project-euler-problem-3-largest-prime-factor.json\n// module id = 3083\n// module chunks = 69543688385680"],"sourceRoot":""}